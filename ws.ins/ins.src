Hopefully most of this file is reasonably easy to understand
Internally WSINSTALL has a number of string variables (here svar[x]) and integer variables (here ivar[x]).
The string varaibles are up to 40 chars each i.e. 39 + trailing '\0'

I have provided some defines for what I believe are reserved variables.

The header is skipped and the version number is checked by the interpreter.

User input functions
GetValue(n)                     returns an integer, default format is n. If n is 3 (ASCII) named locations can be used
GetString()                     return null terminated string
GetRawAscii(n)                  return n raw ascii chars, allows ^C which would otherwise exit
GetDrive()                      return a specified drive in format X:
Correct()                       returns true if Y or return pressed. The interpreter acually uses separate functions
                                for correct and not correct.

Patch file functions
Patch(loc, length, value)       loc is the runtime location and value is either a string, integer or array of bytes
RdPatchByte(loc)                get existing values from the patch file
RdPatchWord(loc)
RdPatchStr(loc)
SigAt(sig, loc)                 checks for the 4 byte sig in the first 1k of the patch file. If it is found loc
                                is used to verify its location.
                                if sig starts at loc - 0x100 -> CP/M .COM file
                                if sig starts at loc + 0x80  -> .CMD file
                                else error

Hopefully other functions are intuative.

#define _patchStartLoc  ivar[1]
#define _patchLoc       ivar[2]
#define _patchLen       ivar[3]
#define _curInt         ivar[4]
#define _targetType     ivar[7]
#define _change         ivar[8]
#define _startPatchArea ivar[10]
#define _endPatchArea   ivar[11]
#define _menuAction     ivar[18]
#define _Error          ivar[50]
#define _CreateError    ivar[51]
#define _OpenError      ivar[52]
#define _ReadError      ivar[53]
#define _WriteError     ivar[54]
#define _DiskFull       ivar[55]
#define _SelectionDone    ivar[56]
#define _NameError      ivar[57]

#define _tmpfile        svar[1]
#define _baseFile       svar[2]
#define _targetFile     svar[3]
#define _curStr         svar[4]
#define _drive          svar[5]
#define _file           svar[6]
#define _ext            svar[7]
#define _exeExt         svar[8]
#define _spaces         svar[9]
#define _usrDrive       svar[12]

#define HEX      1
#define DECIMAL  2
#define ASCII    3

             Header - 'INS Dial 1.00          w/WS 3.30 CPM80-GPI 2.00'
             Version 1A 0008

0033 2B     inputMode = DECIMAL
0035 15     ivar[14] = 0xD
003D 15     _startPatchArea = 0x0100
0045 15     _endPatchArea = 0x083A
004D 15     ivar[17] = 0
0055 15     ivar[19] = 0
005D 15     ivar[15] = 0
0065 15     ivar[22] = 0
006D 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
006F 18     show(' You will install WordStar for your equipment and needs. The\r\n')
00AF 18     show(' following points will help you use the INSTALL program:\r\n')
00EB 18     show(' \r\n')
00F0 18     show('  o  You can use the installation manual to answer any\r\n')
012A 18     show('     questions you may have.\r\n')
014A 18     show(' \r\n')
014F 18     show('  o  You can also use the WordStar Reference Manual Glossary\r\n')
018F 18     show('     to better understand unfamiliar terms.\r\n')
01BE 18     show(' \r\n')
01C3 18     show('  o  You will have the opportunity to review and accept or\r\n')
0201 18     show('     reject each item after you select it and again at the\r\n')
023F 18     show('     end of the program.\r\n')
025B 18     show(' \r\n')
0260 18     show('  o  If you press unnecessary keys, they will be ignored.\r\n')
029D 18     show(' \r\n')
02A2 18     show('  o  If you need to leave the INSTALL program at any point,\r\n')
02E1 18     show('     press ^C.\r\n')
02F3 2C     show('\n\n')
02F5 0F     pause

        L02F6:
02F6 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
02F8 18     show(' Enter the disk drive name (a letter followed by a colon,\r\n')
0335 18     show(' B:) where WordStar files will be located while you run\r\n')
0370 18     show(' INSTALL: then press <RETURN>. ')
0391 30     _usrDrive = GetDrive()
0393 1E     _baseFile = 'WSU.COM'
039E 1E     _exeExt = '.COM'
03A6 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
03A8 18     show(' The uninstalled WordStar program is ')
03CF 18     show(' normally contained in ')
03E8 19     show(_baseFile)
03EA 18     show('.\r\n')
03EF 18     show(' If you are reinstalling WordStar or have previously renamed\r\n')
042F 18     show(' the file, enter the new name below; otherwise press <RETURN>.\r\n')

        L0471:
0471 1E     _drive = _usrDrive
0476 1E     _file = 'WSU'
047D 27     _baseFile = _usrDrive + _file + _exeExt
0482 2C     show('\n')
0484 18     show('    Name of file to install, or <RETURN> for ')
04B3 19     show(_baseFile)
04B5 18     show('  ')
04B9 26     _baseFile = userFname
            -- split out drive, file, ext --
            _drive = drive
            _file = file
            _ext = ext
04BE 27     _baseFile = _drive + _file + _exeExt
04C3 0D     if (_Error == 0) goto L0500
04CC 2C     show('\n\n\n')
04CE 18     show('*** INVALID file name. Please re-enter. ***\r\n')
04FD 0E     goto L0471

        L0500:
0500 1F     OpenFile(_baseFile)
0502 0D     if (_Error == 0) goto L0538
050B 2C     show('\n\n')
050D 18     show('*** ERROR *** File does not exist.\r\n')
0533 2C     show('\n')
0535 0E     goto L0714

        L0538:
0538 29     _targetType = SigAt('rdSt', 0x015B)
0541 0D     if (_targetType == 0) goto L0678
054A 0D     if (_targetType == 9) goto L0588
0553 0D     if (_targetType > 1) goto L0567
055C 1E     _exeExt = '.CMD'
0564 0E     goto L056F

        L0567:
0567 1E     _exeExt = '.COM'

        L056F:
056F 15     _patchStartLoc = 0x010C
0577 0C     _curInt = RdPatchByte(_patchStartLoc)
057E 20     CloseFile()
057F 0D     if (_curInt == ivar[14]) goto L07BE

        L0588:
0588 2C     show('\n\n\n')
058A 18     show('*** ERROR *** This version of WordStar cannot be installed\r\n')
05C8 18     show('              using this version of INSTALL.\r\n')
05F8 2C     show('\n')
05FA 18     show('              Only versions of WordStar in the 3.3 series\r\n')
0637 18     show('              may be installed with the version of INSTALL\r\n')
0675 0E     goto L0714

        L0678:
0678 2C     show('\n\n\n')
067A 18     show('*** ERROR *** The file you have specified is not a WordStar\r\n')
06B9 18     show('              file. This INSTALL can only be used to install\r\n')
06F9 18     show('              WordStar.\r\n')

        L0714:
0714 2C     show('\n\n')
0716 18     show('    Enter "X" to exit INSTALL,\r\n')
0738 18     show('    or press <RETURN> to continue (re-enter filename). ')
0771 16     ***LIST***
            Select: <RETURN>
0773 18       show('<RETURN>\r\n')
077F 14       break
            Select: 'X'
0782 18       show('X\r\n')
0787 2C       show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
0789 18       show('You are returning to the operating system.\r\n')
07B7 2C       show('\n\n')
07B9 05       exit()
07BA 07       break
            ***END LIST***
07BB 0E     goto L0471

        L07BE:
07BE 1E     _drive = _usrDrive
07C3 1E     _file = 'WS'
07C9 27     _targetFile = _drive + _file + _exeExt
07CE 2C     show('\n\n\n')
07D0 18     show(' File to install is : ')
07E8 19     show(_baseFile)
07EA 2C     show('\n\n\n\n')
07EC 18     show(' When you are finished running this program, you will have an\r\n')
082D 18     show(' installed version of WordStar in a new file on the logged\r\n')
086B 18     show(' disk drive. It will be called ')
088C 19     show(_targetFile)
088E 18     show('. If you wish to name the\r\n')
08AB 18     show(' file something else, enter the name below. Otherwise press\r\n')
08EA 18     show(' <RETURN>. To change the name, enter up to eight letters or\r\n')
0929 18     show(' numbers. The extension ')
0943 19     show(_exeExt)
0945 18     show(' will automatically be added to any\r\n')
096C 18     show(' name.\r\n')

        L0976:
0976 1E     _drive = _usrDrive
097B 1E     _file = 'WS'
0981 27     _targetFile = _drive + _file + _exeExt
0986 2C     show('\n\n')
0988 18     show('  Enter name of file for installed WordStar, or <RETURN> for ')
09C7 19     show(_targetFile)
09C9 18     show('  ')
09CD 26     _targetFile = userFname
            -- split out drive, file, ext --
            _drive = drive
            _file = file
            _ext = ext
09D2 27     _targetFile = _drive + _file + _exeExt
09D7 0D     if (_Error == 0) goto L0A14
09E0 2C     show('\n\n\n')
09E2 18     show('*** INVALID file name. Please re-enter. ***\r\n')
0A11 0E     goto L0976

        L0A14:
0A14 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
0A16 27     _targetFile = _drive + _file + _exeExt
0A1B 1E     _ext = '.$$$'
0A23 27     _tmpfile = _drive + _file + _ext
0A28 18     show(' File for installed WordStar is : ')
0A4C 19     show(_targetFile)
0A4E 2C     show('\n\n')
0A50 1F     OpenFile(_targetFile)
0A52 0D     if (_Error != 0) goto L0B2D
0A5B 20     CloseFile()
0A5C 18     show('*** CAUTION *** This file already exists. If you make\r\n')
0A95 18     show('                changes during this INSTALL session and\r\n')
0AD0 18     show('                save these changes, you will overwrite\r\n')
0B0A 18     show('                this file.\r\n')
0B28 2C     show('\n\n')
0B2A 25     if (!Correct()) goto L0976

        L0B2D:
0B2D 2C     show('\n\n\n')
0B2F 18     show(' You are installing the file ')
0B4E 19     show(_baseFile)
0B50 18     show(' and producing the\r\n')
0B66 18     show(' file ')
0B6E 19     show(_targetFile)
0B70 18     show('.\r\n')
0B75 2C     show('\n\n')
0B77 25     if (!Correct()) goto L02F6
0B7A 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
0B7C 18     show(' INSTALL is copying the file ')
0B9B 19     show(_baseFile)
0B9D 18     show('.\r\n')
0BA2 18     show(' \r\n')
0BA7 18     show(' PLEASE WAIT.\r\n')
0BB8 2C     show('\n\n\n\n')
0BBA 02     copy file _baseFile to _tmpfile
0BBD 04     if (_Error != 0) call SBCA9
0BC6 1F     OpenFile(_tmpfile)
0BC8 04     if (_Error != 0) call SBCA9
0BD1 15     _patchStartLoc = 0x0400
0BD9 15     _patchStartLoc = _patchStartLoc + 1
0BE1 1E     _spaces = '        '
0BED 17     Patch(_patchStartLoc, 8, _spaces)
0BF5 17     Patch(_patchStartLoc, 8, _file)
0BFD 15     _curInt = 0
0C05 15     _patchStartLoc = 0x0228
0C0D 17     Patch(_patchStartLoc, 1, _curInt)

        L0C15:
0C15 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
0C17 18     show('       *****  INSTALLATION MENU  *****\r\n')
0C41 18     show(' \r\n')
0C46 18     show('If you are installing a new copy of WordStar, you must select\r\n')
0C87 18     show('letter A to install your terminal, then letter C to install\r\n')
0CC6 18     show('your printer. If your terminal is not listed on the Menu of\r\n')
0D05 18     show('Terminals, return to this menu and select letter B. If your\r\n')
0D44 18     show('printer is not listed on the Menu of Printers, return to this\r\n')
0D85 18     show('menu and select letter D. If you want to change a particular\r\n')
0DC5 18     show('WordStar feature, choose letter E.\r\n')
0DEB 2C     show('\n\n')
0DED 18     show('A  Menu of Terminals\r\n')
0E05 18     show('B  Custom Installation of Terminals\r\n')
0E2C 2C     show('\n')
0E2E 18     show('C  Menu of Printers\r\n')
0E45 18     show('D  Custom Installation of Printers\r\n')
0E6B 2C     show('\n')
0E6D 18     show('E  Menu of WordStar Features\r\n')
0E8D 18     show('F  Operating System Considerations\r\n')
0EB3 2C     show('\n')
0EB5 18     show('X  Exit from INSTALL\r\n')
0ECD 2C     show('\n')
0ECF 18     show('   Enter the letter of your choice (A/B/C/D/E/F/X). ')

        L0F05:
0F05 16     ***LIST***
            Select: <RETURN>
0F07 15       _menuAction = 2
0F0F 14       break
            Select: 'A'
0F25 18       show('A\r\n')
0F2A 03       call S1565
0F2D 15       _menuAction = 0
0F35 14       break
            Select: 'B'
0F5D 18       show('B\r\n')
0F62 03       call S1BC1
0F65 15       _menuAction = 0
0F6D 14       break
            Select: 'C'
0F82 18       show('C\r\n')
0F87 03       call S4378
0F8A 15       _menuAction = 0
0F92 14       break
            Select: 'D'
0FB6 18       show('D\r\n')
0FBB 03       call S4564
0FBE 15       _menuAction = 0
0FC6 14       break
            Select: 'E'
0FE4 18       show('E\r\n')
0FE9 03       call S97C5
0FEC 15       _menuAction = 0
0FF4 14       break
            Select: 'F'
1018 18       show('F\r\n')
101D 03       call SB2CE
1020 15       _menuAction = 0
1028 14       break
            Select: '+'
104C 18       show('+\r\n')
1051 03       call SB463
1054 15       _menuAction = 0
105C 14       break
            Select: 'X'
1072 18       show('X\r\n')
1077 15       _menuAction = 1
107F 07       break
            ***END LIST***
1080 0D     if (_menuAction == 0) goto L0C15
1089 0D     if (_menuAction == 2) goto L0F05
1092 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
1094 18     show('The changes made during this session of INSTALL are stored\r\n')
10D2 18     show('in a temporary file. You may now save these changes in your\r\n')
1111 18     show('installed file ')
1122 19     show(_targetFile)
1124 18     show('. \r\n')
112A 18     show(' \r\n')
112F 18     show('These are your current values:\r\n')
1151 18     show(' \r\n')
1156 15     _patchStartLoc = 0x018A
115E 0C     _curStr = RdPatchStr(_patchStartLoc)
1165 04     if (_Error != 0) call SBCA9
116E 18     show('Terminal                : ')
118A 19     show(_curStr)
118C 18     show(' \r\n')
1191 15     _patchStartLoc = 0x01AE
1199 0C     _curStr = RdPatchStr(_patchStartLoc)
11A0 04     if (_Error != 0) call SBCA9
11A9 18     show('Printer                 : ')
11C5 19     show(_curStr)
11C7 18     show(' \r\n')
11CC 15     _patchLoc = 0x0778
11D4 0C     _curInt = RdPatchByte(_patchLoc)
11DB 18     show('Communications protocol : ')
11F7 04     if (_Error != 0) call SBCA9
1200 0D     if (_curInt == 0) goto L121B
1209 0D     if (_curInt == 1) goto L1238
1212 0D     if (_curInt == 2) goto L1257

        L121B:
121B 18     show('           No protocol\r\n')
1235 0E     goto L1275

        L1238:
1238 18     show('        ETX/ACK protocol\r\n')
1254 0E     goto L1275

        L1257:
1257 18     show('       X-ON/X-OFF protocol\r\n')

        L1275:
1275 15     _patchLoc = 0x0717
127D 0C     _curInt = RdPatchByte(_patchLoc)
1284 18     show('Driver                  : ')
12A0 04     if (_Error != 0) call SBCA9
12A9 0D     if (_curInt == 1) goto L12CD
12B2 0D     if (_curInt == 2) goto L12FC
12BB 0D     if (_curInt == 0) goto L1326
12C4 0D     if (_curInt == 4) goto L1347

        L12CD:
12CD 18     show(' Port Driver (direct I/O to 8-bit ports)\r\n')
12F9 0E     goto L1366

        L12FC:
12FC 18     show('  User-installed driver subroutines\r\n')
1323 0E     goto L1366

        L1326:
1326 18     show('       Primary list device\r\n')
1344 0E     goto L1366

        L1347:
1347 18     show('      Secondary list device\r\n')

        L1366:
1366 20     CloseFile()
1367 2C     show('\n')
1369 18     show('          *****  EXIT OPTIONS MENU  *****\r\n')
1396 2C     show('\n')
1398 18     show('A   Save the changes made during this INSTALL session\r\n')
13D1 18     show('B   Quit this session of INSTALL without saving changes\r\n')
140C 18     show('C   Change any of your choices / Remain in INSTALL\r\n')
1442 2C     show('\n')
1444 18     show('    Enter the letter of your choice (A/B/C). ')

        L1473:
1473 16     ***LIST***
            Select: <RETURN>
1475 15       _menuAction = 2
147D 14       break
            Select: 'A'
1480 2C       show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
1482 18       show('Your new installed WordStar file is ')
14A8 19       show(_targetFile)
14AA 18       show('. \r\n')
14B0 23       Rename(_tmpfile, _targetFile)
14B3 15       _menuAction = 0
14BB 14       break
            Select: 'B'
14BE 2C       show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
14C0 18       show('This INSTALL session has been completed without ')
14F2 18       show('saving changes.\r\n')
1505 22       Unlink(_tmpfile)
1507 15       _menuAction = 0
150F 14       break
            Select: 'C'
1512 15       _menuAction = 1
151A 07       break
            ***END LIST***
151B 0D     if (_menuAction == 0) goto L1532
1524 0D     if (_menuAction == 2) goto L1473
152D 1F     OpenFile(_tmpfile)
152F 0E     goto L0C15

        L1532:
1532 2C     show('\n\n')
1534 18     show('You are returning to the operating system.\r\n')
1562 2C     show('\n')
1564 05     exit()

        S1565:
1565 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
1567 18     show('Is your terminal on this list?\r\n')
1589 2C     show('\n\n')
158B 18     show('   Processor Tech Sol\r\n')
15A4 18     show('   InterTec SuperBrain\r\n')
15BE 18     show('   TRS80 Model II\r\n')
15D3 2C     show('\n\n')
15D5 18     show('   Enter ("Y" for yes or "N" for no): ')
15FD 16     ***LIST***
            Select: <RETURN>
15FF 1B       return 1
1600 14       break
            Select: 'Y'
1603 15       _change = 1
160B 14       break
            Select: 'N'
160E 15       _change = 0
1616 07       break
            ***END LIST***
1617 0D     if (_change == 0) goto L197A
1620 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
1622 15     _patchStartLoc = 0x018A
162A 0C     _curStr = RdPatchStr(_patchStartLoc)
1631 04     if (_Error != 0) call SBCA9
163A 18     show('Terminal is currently : ')
1654 19     show(_curStr)
1656 2C     show('\n\n')
1658 1D     ***MENU***
            show('\n     *****  EXTRA TERMINAL TYPES  *****')
1683 01     show('\n ')
1686 01     show('\nSelect the letter of your terminal from the list below.')
16BF 14     MENU ITEM Info @0xD9E0 -- 'Intertec SuperBrain'
16BF 14     MENU ITEM Info @0xDACB -- 'Processor Tech Sol'
16BF 14     MENU ITEM Info @0xDBA2 -- 'TRS80 Model II/Lifeboat CPM'
16BF 14     MENU ITEM Info @0xDC37 -- 'TRS80 Model II/P&T CPM'
            ***END MENU***
1977 2C     show('\n\n')
1979 1C     return 0

        L197A:
197A 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
197C 15     _patchStartLoc = 0x018A
1984 0C     _curStr = RdPatchStr(_patchStartLoc)
198B 04     if (_Error != 0) call SBCA9
1994 18     show('Terminal is currently : ')
19AE 19     show(_curStr)
19B0 2C     show('\n\n')
19B2 1D     ***MENU***
            show('\n     *****  STANDARD TERMINAL TYPES  *****')
19E0 01     show('\n ')
19E3 01     show('\nSelect the letter of your terminal from the list below.')
1A1C 01     show('\nThis is menu ')
1A2B 14     MENU ITEM Info @0xBDDE -- 'ADDS Regent 20/25'
1A2B 14     MENU ITEM Info @0xBE17 -- 'ADDS Regent 40/60'
1A2B 14     MENU ITEM Info @0xBE54 -- 'ADDS Viewpoint'
1A2B 14     MENU ITEM Info @0xBE8F -- 'Ann Arbor Ambassador'
1A2B 14     MENU ITEM Info @0xBED9 -- 'Beehive 150 / Cromemco 3100'
1A2B 14     MENU ITEM Info @0xBF1A -- 'DEC VT-100'
1A2B 14     MENU ITEM Info @0xBFEC -- 'DataVue DisplayMaster 132C'
1A2B 14     MENU ITEM Info @0xC034 -- 'Flashwriter I/Mindless'
1A2B 14     MENU ITEM Info @0xC095 -- 'Flashwriter II/Mindless'
1A2B 14     MENU ITEM Info @0xC0F7 -- 'Hazeltine 1420'
1A2B 14     MENU ITEM Info @0xC197 -- 'Hazeltine 1500'
1A2B 14     MENU ITEM Info @0xC237 -- 'Heath/Zenith H89/19'
1A2B 14     MENU ITEM Info @0xC27A -- 'Hewlett-Packard 2621 A/P'
1A2B 14     MENU ITEM Info @0xC2C5 -- 'IBM 3101'
1A2B 14     MENU ITEM Info @0xC2F3 -- 'Imsai VIO'
1A2B 14     MENU ITEM Info @0xC3D4 -- 'Infoton I-100'
1A2B 14     MENU ITEM Info @0xC40F -- 'Lear Siegler ADM-31'
1A2B 14     MENU ITEM Info @0xC454 -- 'Lear Siegler ADM-3A'
1A2B 14     MENU ITEM Info @0xC4E3 -- 'MicroTerm ACT-IV'
1A2B 14     MENU ITEM Info @0xC51B -- 'North Star Advantage'
1A2B 14     MENU ITEM Info @0xC55B -- 'Perkin-Elmer (Bantam) 550'
1A2B 14     MENU ITEM Info @0xC59E -- 'Sirius 9000'
1A2B 14     MENU ITEM Info @0xC643 -- 'Soroc IQ-120/140'
1A2B 14     MENU ITEM Info @0xC67F -- 'TeleVideo 910'
1A2B 14     MENU ITEM Info @0xC702 -- 'TeleVideo 912/920'
1A2B 14     MENU ITEM Info @0xC745 -- 'TeleVideo 925/950'
1A2B 14     MENU ITEM Info @0xC78E -- 'Visual 200'
            ***END MENU***
1ADA 2C     show('\n\n')
1ADC 1C     return 0
1ADD 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
1ADF 18     show('The WordStar program comes to you already installed for the\r\n')
1B1E 18     show('IBM Personal Computer hardware. Please start with selection\r\n')
1B5D 18     show('C to install your printer. Press <RETURN> to go back to the\r\n')
1B9C 18     show('installation menu: ')
1BB1 16     ***LIST***
            Select: <RETURN>
1BB3 18       show('<RETURN>\r\n')
1BBF 07       break
            ***END LIST***
1BC0 1C     return 0

        S1BC1:
1BC1 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
1BC3 18     show('     *****  TERMINAL INSTALLATION MENU  *****\r\n')
1BF4 18     show(' \r\n')
1BF9 18     show(' If your terminal was not listed on the menu of terminals, you\r\n')
1C3B 18     show(' must provide some information about your terminal. This\r\n')
1C77 18     show(' information (usually sequences of special characters) should\r\n')
1CB8 18     show(' be in the manual that comes with the terminal.  If not, talk\r\n')
1CF9 18     show(' to your dealer.\r\n')
1D0D 18     show(' \r\n')
1D12 18     show(' Select A and respond to the questions. If you just want to\r\n')
1D51 18     show(' change a particular feature, select the appropriate letter.\r\n')
1D91 2C     show('\n\n')
1D93 18     show('A  Automatic installion of    G  Highlighting\r\n')
1DC4 18     show('   all features               H  Erase to end of line\r\n')
1DFD 18     show('B  Terminal name              I  Delete line\r\n')
1E2D 18     show('C  Screen size                J  Insert line\r\n')
1E5D 18     show('D  Cursor positioning         K  Handling of last character\r\n')
1E9C 18     show('E  Terminal start-up             on screen\r\n')
1ECA 18     show('F  Terminal exit\r\n')
1EDE 18     show(' \r\n')
1EE3 18     show('X  Exit to INSTALLATION menu\r\n')
1F03 18     show(' \r\n')
1F08 18     show('   Enter the letter of your choice (A/B/C/D/E/F/G/H/I/J/K/X). ')

        L1F48:
1F48 16     ***LIST***
            Select: <RETURN>
1F4A 15       _menuAction = 2
1F52 14       break
            Select: 'A'
1F55 18       show('A\r\n')
1F5A 03       call S2047
1F5D 15       _menuAction = 0
1F65 14       break
            Select: 'B'
1F68 18       show('B\r\n')
1F6D 03       call S25D6
1F70 15       _menuAction = 0
1F78 14       break
            Select: 'C'
1F7B 18       show('C\r\n')
1F80 03       call S278F
1F83 15       _menuAction = 0
1F8B 14       break
            Select: 'D'
1F8E 18       show('D\r\n')
1F93 03       call S2A63
1F96 15       _menuAction = 0
1F9E 14       break
            Select: 'E'
1FA1 18       show('E\r\n')
1FA6 03       call S3452
1FA9 15       _menuAction = 0
1FB1 14       break
            Select: 'F'
1FB4 18       show('F\r\n')
1FB9 03       call S3569
1FBC 15       _menuAction = 0
1FC4 14       break
            Select: 'G'
1FC7 18       show('G\r\n')
1FCC 03       call S36A3
1FCF 15       _menuAction = 0
1FD7 14       break
            Select: 'H'
1FDA 18       show('H\r\n')
1FDF 03       call S37A6
1FE2 15       _menuAction = 0
1FEA 14       break
            Select: 'I'
1FED 18       show('I\r\n')
1FF2 03       call S389E
1FF5 15       _menuAction = 0
1FFD 14       break
            Select: 'J'
2000 18       show('J\r\n')
2005 03       call S396F
2008 15       _menuAction = 0
2010 14       break
            Select: 'K'
2013 18       show('K\r\n')
2018 03       call S3B02
201B 15       _menuAction = 0
2023 14       break
            Select: 'X'
2026 18       show('X\r\n')
202B 15       _menuAction = 1
2033 07       break
            ***END LIST***
2034 0D     if (_menuAction == 0) goto L1BC1
203D 0D     if (_menuAction == 2) goto L1F48
2046 1C     return 0

        S2047:
2047 15     ivar[15] = 1
204F 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
2051 18     show('          Automatic installation of all features\r\n')
2085 2C     show('\n\n')
2087 18     show('This routine allows you to install all the terminal features\r\n')
20C7 18     show('without returning to the terminal installation menu.\r\n')
20FF 2C     show('\n')
2101 18     show('Once you enter this routine you will have to answer questions\r\n')
2142 18     show('on each terminal feature.\r\n')
215F 2C     show('\n\n')
2161 18     show('    Enter "X" to exit,\r\n')
217B 18     show('    or press <RETURN> to continue. ')
21A0 16     ***LIST***
            Select: <RETURN>
21A2 18       show('<RETURN>\r\n')
21AE 15       _change = 1
21B6 14       break
            Select: 'X'
21B9 18       show('X\r\n')
21BE 15       _change = 0
21C6 07       break
            ***END LIST***
21C7 0D     if (_change == 0) goto L2479
21D0 03     call S25D6
21D3 2B     inputMode = ASCII
21D5 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
21D7 18     show('            Screen size (optional)\r\n')
21FD 2C     show('\n')
21FF 18     show('Use this function to alter the height')
2226 18     show(' (number of lines of text) and\r\n')
2248 18     show('the width (number of possible characters in a line).\r\n')
2280 15     _patchStartLoc = 0x0232
2288 0C     _curInt = RdPatchByte(_patchStartLoc)
228F 04     if (_Error != 0) call SBCA9
2298 2C     show('\n\n')
229A 18     show('Screen height value is currently ')
22BD 1A     showFmt(inputMode, _curInt)
22C0 18     show('.\r\n')
22C5 15     _patchStartLoc = 0x0233
22CD 0C     _curInt = RdPatchByte(_patchStartLoc)
22D4 04     if (_Error != 0) call SBCA9
22DD 2C     show('\n\n')
22DF 18     show('Screen width value is currently ')
2301 1A     showFmt(inputMode, _curInt)
2304 18     show('.\r\n')
2309 03     call S2482
230C 0D     if (_change == 0) goto L2328
2315 15     ivar[15] = 0
231D 03     call S278F
2320 15     ivar[15] = 1

        L2328:
2328 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
232A 18     show('             Cursor positioning\r\n')
234D 03     call S24F4
2350 03     call S2482
2353 0D     if (_change == 0) goto L236F
235C 15     ivar[15] = 0
2364 03     call S2A63
2367 15     ivar[15] = 1

        L236F:
236F 03     call S3452
2372 03     call S3569
2375 15     _patchStartLoc = 0x0267
237D 15     ivar[5] = 6
2385 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
2387 18     show('            Highlighting (optional)\r\n')
23AE 2C     show('\n')
23B0 18     show('Highlighting can be achieved by ')
23D2 18     show('bright/dim or inverse video.\r\n')
23F2 2C     show('\n\n')
23F4 1E     svar[10] = 'Highlight-on'
2404 1E     svar[11] = 'highlight-on'
2414 03     call S3ECF
2417 15     _patchStartLoc = 0x026E
241F 15     ivar[5] = 6
2427 2C     show('\n\n')
2429 1E     svar[10] = 'Highlight-off'
243A 1E     svar[11] = 'highlight-off'
244B 03     call S3ECF
244E 03     call S2482
2451 0D     if (_change == 0) goto L246D
245A 15     ivar[15] = 0
2462 03     call S36A3
2465 15     ivar[15] = 1

        L246D:
246D 03     call S37A6
2470 03     call S389E
2473 03     call S396F
2476 03     call S3B02

        L2479:
2479 15     ivar[15] = 0
2481 1C     return 0

        S2482:
2482 2C     show('\n\n\n')
2484 18     show('    Enter "C" to change,\r\n')
24A0 18     show('    or press <RETURN> to leave unchanged. ')
24CC 16     ***LIST***
            Select: <RETURN>
24CE 18       show('<RETURN>\r\n')
24DA 15       _change = 0
24E2 14       break
            Select: 'C'
24E5 18       show('C\r\n')
24EA 15       _change = 1
24F2 07       break
            ***END LIST***
24F3 1C     return 0

        S24F4:
24F4 2C     show('\n\n')
24F6 18     show('As there are a large number of values relating to this item,\r\n')
2536 18     show('these values are not displayed. If you wish to change or\r\n')
2572 18     show('view any of the current values enter C below and each item\r\n')
25B0 18     show('will be displayed individually.\r\n')
25D3 2C     show('\n\n')
25D5 1C     return 0

        S25D6:
25D6 15     _patchStartLoc = 0x018A
25DE 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
25E0 18     show('          Terminal Name (optional)\r\n')
2606 0C     _curStr = RdPatchStr(_patchStartLoc)
260D 04     if (_Error != 0) call SBCA9
2616 2C     show('\n')
2618 18     show('Current name is : ')
262C 19     show(_curStr)
262E 2C     show('\n\n\n')
2630 18     show('    Enter "C" to change,\r\n')
264C 18     show('    or press <RETURN> to leave unchanged. ')
2678 16     ***LIST***
            Select: <RETURN>
267A 15       _change = 0
2682 18       show('<RETURN>\r\n')
268E 14       break
            Select: 'c'
2691 15       _change = 1
2699 18       show('C\r\n')
269E 07       break
            ***END LIST***
269F 0D     if (_change == 1) goto L26E6
26A8 0D     if (ivar[15] != 0) goto L278E
26B1 0C     _curStr = RdPatchStr(_patchStartLoc)
26B8 04     if (_Error != 0) call SBCA9
26C1 2C     show('\n\n')
26C3 18     show('Terminal name now is : ')
26DC 19     show(_curStr)
26DE 2C     show('\n\n\n')
26E0 25     if (!Correct()) goto L26E6
26E3 0E     goto L278E

        L26E6:
26E6 2C     show('\n\n')
26E8 18     show('    New terminal (maximum 34 characters) : ')
2715 09     _curStr = GetString()
2717 2C     show('\n\n')
2719 18     show('Terminal name now is : ')
2732 19     show(_curStr)
2734 2C     show('\n\n\n')
2736 25     if (!Correct()) goto L26E6
2739 2C     show('\n\n')
273B 1E     _spaces = '                                  '
2761 17     Patch(_patchStartLoc, 34, _spaces)
2769 1E     _spaces = '                    '
2781 27     svar[13] = _curStr + _spaces + _spaces
2786 17     Patch(_patchStartLoc, 34, svar[13])

        L278E:
278E 1C     return 0

        S278F:
278F 2B     inputMode = ASCII
2791 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
2793 18     show('            Screen size (optional)\r\n')
27B9 2C     show('\n')
27BB 18     show('Use this function to alter the height')
27E2 18     show(' (number of lines of text) and\r\n')
2804 18     show('the width (number of possible characters in a line).\r\n')
283C 15     _patchStartLoc = 0x0232
2844 2C     show('\n\n')
2846 1E     svar[10] = 'Screen height'
2857 03     call S287A
285A 15     _patchStartLoc = 0x0233
2862 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
2864 1E     svar[10] = 'Screen width'
2874 03     call S287A
2877 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
2879 1C     return 0

        S287A:
287A 15     _patchLoc = _patchStartLoc
2882 0D     if (ivar[17] == 1) goto L2895
288B 0C     _curInt = RdPatchByte(_patchLoc)
2892 0E     goto L289C

        L2895:
2895 0C     _curInt = RdPatchWord(_patchLoc)

        L289C:
289C 15     _curInt = _curInt - ivar[19]
28A4 2C     show('\n\n')
28A6 19     show(svar[10])
28A8 18     show(' value is currently ')
28BE 1A     showFmt(inputMode, _curInt)
28C1 18     show('.\r\n')
28C6 2C     show('\n\n\n')
28C8 18     show('    Enter "C" to change,\r\n')
28E4 18     show('    or press <RETURN> to leave unchanged. ')
2910 16     ***LIST***
            Select: <RETURN>
2912 15       _change = 0
291A 18       show('<RETURN>\r\n')
2926 14       break
            Select: 'c'
2929 15       _change = 1
2931 18       show('C\r\n')
2936 07       break
            ***END LIST***
2937 0D     if (_change == 1) goto L2997
2940 0D     if (ivar[15] != 0) goto L2A4A
2949 15     _patchLoc = _patchStartLoc
2951 0D     if (ivar[17] == 1) goto L2964
295A 0C     _curInt = RdPatchByte(_patchLoc)
2961 0E     goto L296B

        L2964:
2964 0C     _curInt = RdPatchWord(_patchLoc)

        L296B:
296B 2C     show('\n\n')
296D 19     show(svar[10])
296F 18     show(' value is now ')
297F 15     _curInt = _curInt - ivar[19]
2987 1A     showFmt(inputMode, _curInt)
298A 18     show('.\r\n')
298F 2C     show('\n\n\n')
2991 25     if (!Correct()) goto L2997
2994 0E     goto L2A4A

        L2997:
2997 2C     show('\n\n')
2999 18     show('    Enter new value : ')
29B1 0D     if (ivar[17] == 1) goto L29C8
29BA 21     ivar[0] = GetValue(HEX);
29BC 0D     if (ivar[0] == 0xFFFF) goto L2997
29C5 0E     goto L29CA

        L29C8:
29C8 0A     ivar[0] = GetValue(DECIMAL);

        L29CA:
29CA 0D     if (ivar[0] >= ivar[22]) goto L2A05
29D3 2C     show('\n\n')
29D5 18     show(' *** INVALID *** Please re-enter value.\r\n')
2A00 2C     show('\n\n')
2A02 0E     goto L2997

        L2A05:
2A05 15     _curInt = ivar[0] + ivar[19]
2A0D 0D     if (ivar[17] == 1) goto L2A21
2A16 17     Patch(_patchLoc, 1, _curInt)
2A1E 0E     goto L2A29

        L2A21:
2A21 17     Patch(_patchLoc, 2, _curInt)

        L2A29:
2A29 2C     show('\n\n')
2A2B 19     show(svar[10])
2A2D 18     show(' value is now ')
2A3D 1A     showFmt(inputMode, ivar[0])
2A40 18     show('.\r\n')
2A45 2C     show('\n\n\n')
2A47 25     if (!Correct()) goto L2997

        L2A4A:
2A4A 15     ivar[17] = 0
2A52 15     ivar[19] = 0
2A5A 15     ivar[22] = 0
2A62 1C     return 0

        S2A63:
2A63 2B     inputMode = DECIMAL
2A65 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
2A67 18     show('            Cursor positioning\r\n')
2A89 2C     show('\n\n')
2A8B 15     _patchStartLoc = 0x0234
2A93 15     ivar[5] = 8
2A9B 18     show(' WordStar sends sequences of special characters to the\r\n')
2AD5 18     show(' terminal to move the cursor to a given line and column on the\r\n')
2B17 18     show(' screen. Are there characters that must be sent before either\r\n')
2B58 18     show(' the line or column numbers are sent (e.g. ESC + )? (Refer to\r\n')
2B99 18     show(' your terminal manual.)\r\n')
2BB4 2C     show('\n')
2BB6 1E     svar[10] = 'Your'
2BBE 1E     svar[11] = 'this'
2BC6 03     call S3E2C
2BC9 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
2BCB 15     _patchStartLoc = 0x023D
2BD3 15     ivar[5] = 4
2BDB 18     show('Are there characters that must be sent after the line number\r\n')
2C1B 18     show('(or column number, whichever is first) and before the other\r\n')
2C5A 18     show('dimension is sent? \r\n')
2C71 2C     show('\n')
2C73 1E     svar[10] = 'Your'
2C7B 1E     svar[11] = 'this'
2C83 03     call S3E2C
2C86 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
2C88 15     _patchStartLoc = 0x0242
2C90 15     ivar[5] = 4
2C98 18     show('Are there characters to be sent after the line and')
2CCC 18     show(' column numbers\r\n')
2CDF 18     show('are sent? \r\n')
2CED 2C     show('\n')
2CEF 1E     svar[10] = 'Your'
2CF7 1E     svar[11] = 'this'
2CFF 03     call S3E2C

        L2D02:
2D02 15     _patchStartLoc = 0x0247
2D0A 15     _patchLoc = _patchStartLoc
2D12 0C     _curInt = RdPatchByte(_patchLoc)
2D19 04     if (_Error != 0) call SBCA9
2D22 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
2D24 18     show('Is the column number sent before the line number? \r\n')
2D5A 2C     show('\n')
2D5C 0D     if (_curInt == 0) goto L2DA1
2D65 18     show('Currently ... YES\r\n')
2D7A 2C     show('\n\n')
2D7C 18     show('    Enter "C" to change to NO,\r\n')
2D9E 0E     goto L2DD9

        L2DA1:
2DA1 18     show('Currently ... NO\r\n')
2DB5 2C     show('\n\n')
2DB7 18     show('    Enter "C" to change to YES\r\n')

        L2DD9:
2DD9 18     show('    or press <RETURN> to leave unchanged. ')
2E05 15     _patchLoc = _patchStartLoc
2E0D 16     ***LIST***
            Select: <RETURN>
2E0F 18       show('<RETURN>\r\n')
2E1B 14       break
            Select: 'C'
2E1E 18       show('C\r\n')
2E23 0D       if (_curInt == 1) goto L2E37
2E2C 15       _curInt = 1
2E34 0E       goto L2E3F

        L2E37:
2E37 15       _curInt = 0

        L2E3F:
2E3F 07       break
            ***END LIST***
2E40 17     Patch(_patchLoc, 1, _curInt)
2E48 2C     show('\n\n\n\n')
2E4A 18     show('Is the column number sent before the line number? \r\n')
2E80 2C     show('\n\n')
2E82 0D     if (_curInt == 0) goto L2E9D
2E8B 18     show('Now ... YES\r\n')
2E9A 0E     goto L2EAB

        L2E9D:
2E9D 18     show('Now ... NO\r\n')

        L2EAB:
2EAB 2C     show('\n\n')
2EAD 25     if (!Correct()) goto L2D02
2EB0 2B     inputMode = DECIMAL
2EB2 15     _patchStartLoc = 0x0248
2EBA 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
2EBC 18     show('What character is sent to the terminal to signify line 1?\r\n')
2EF9 2C     show('\n')
2EFB 18     show('Current value is : ')
2F10 15     _patchLoc = _patchStartLoc
2F18 0C     _curInt = RdPatchByte(_patchLoc)
2F1F 04     if (_Error != 0) call SBCA9
2F28 1A     showFmt(inputMode, _curInt)
2F2B 15     ivar[13] = _curInt
2F33 2C     show('\n\n')
2F35 18     show('    Enter "C" to change,\r\n')
2F51 18     show('    or press <RETURN> to leave unchanged. ')
2F7D 16     ***LIST***
            Select: <RETURN>
2F7F 15       _change = 0
2F87 18       show('<RETURN>\r\n')
2F93 15       _curInt = ivar[13]
2F9B 14       break
            Select: 'c'
2F9E 15       _change = 1
2FA6 18       show('C\r\n')
2FAB 07       break
            ***END LIST***
2FAC 0D     if (_change == 0) goto L2FD3

        L2FB5:
2FB5 2C     show('\n\n')
2FB7 18     show('    New value? ')
2FC8 21     _curInt = GetValue(HEX);
2FCA 0D     if (_curInt == 0xFFFF) goto L2FB5

        L2FD3:
2FD3 2C     show('\n\n')
2FD5 18     show('Line 1 is now signified by sending to the terminal ')
300A 18     show('character : ')
3018 1A     showFmt(inputMode, _curInt)
301B 2C     show('\n')
301D 15     _patchLoc = _patchStartLoc
3025 17     Patch(_patchLoc, 1, _curInt)
302D 2C     show('\n\n')
302F 25     if (!Correct()) goto L2FB5
3032 15     _patchStartLoc = 0x0249
303A 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
303C 18     show('What character is sent to the terminal to signify column 1?\r\n')
307B 18     show(' (usually same as line 1)\r\n')
3098 2C     show('\n')
309A 18     show('Current value is : ')
30AF 15     _patchLoc = _patchStartLoc
30B7 0C     _curInt = RdPatchByte(_patchLoc)
30BE 04     if (_Error != 0) call SBCA9
30C7 1A     showFmt(inputMode, _curInt)
30CA 15     ivar[13] = _curInt
30D2 2C     show('\n\n')
30D4 18     show('    Enter "C" to change,\r\n')
30F0 18     show('    or press <RETURN> to leave unchanged. ')
311C 16     ***LIST***
            Select: <RETURN>
311E 15       _change = 0
3126 18       show('<RETURN>\r\n')
3132 15       _curInt = ivar[13]
313A 14       break
            Select: 'c'
313D 15       _change = 1
3145 18       show('C\r\n')
314A 07       break
            ***END LIST***
314B 0D     if (_change == 0) goto L3172

        L3154:
3154 2C     show('\n\n')
3156 18     show('    New value? ')
3167 21     _curInt = GetValue(HEX);
3169 0D     if (_curInt == 0xFFFF) goto L3154

        L3172:
3172 2C     show('\n\n')
3174 18     show('Column 1 is now signified by sending to the terminal ')
31AB 18     show('character : ')
31B9 1A     showFmt(inputMode, _curInt)
31BC 2C     show('\n')
31BE 15     _patchLoc = _patchStartLoc
31C6 17     Patch(_patchLoc, 1, _curInt)
31CE 2C     show('\n\n')
31D0 25     if (!Correct()) goto L3154

        L31D3:
31D3 15     _patchStartLoc = 0x024A
31DB 0C     _curInt = RdPatchByte(_patchStartLoc)
31E2 15     ivar[13] = _curInt
31EA 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
31EC 18     show('What types of codes are sent to signify line and column ')
3226 18     show('numbers?\r\n')
3232 18     show(' \r\n')
3237 0D     if (_curInt != 0) goto L32A2
3240 18     show('Currently : Single byte BINARY value\r\n')
3268 2C     show('\n\n')
326A 18     show('    Enter "C" to change to Multi Character ASCII,\r\n')
329F 0E     goto L3301

        L32A2:
32A2 18     show('Currently : Multi Character ASCII\r\n')
32C7 2C     show('\n\n')
32C9 18     show('    Enter "C" to change to Single byte BINARY value,\r\n')

        L3301:
3301 18     show('    or press <RETURN> to leave unchanged. ')
332D 16     ***LIST***
            Select: <RETURN>
332F 18       show('<RETURN>\r\n')
333B 15       _curInt = ivar[13]
3343 14       break
            Select: 'C'
3346 18       show('C\r\n')
334B 0D       if (_curInt != 0) goto L335F
3354 15       _curInt = 1
335C 0E       goto L3367

        L335F:
335F 15       _curInt = 0

        L3367:
3367 07       break
            ***END LIST***
3368 0D     if (_curInt == 0) goto L3398

        L3371:
3371 2C     show('\n\n')
3373 2B     inputMode = ASCII
3375 18     show('Number of characters? ')
338D 21     _curInt = GetValue(HEX);
338F 0D     if (_curInt == 0xFFFF) goto L3371

        L3398:
3398 15     _patchLoc = _patchStartLoc
33A0 17     Patch(_patchLoc, 1, _curInt)
33A8 2C     show('\n\n\n\n')
33AA 18     show('What types of codes are sent to signify line and column ')
33E4 18     show('numbers?\r\n')
33F0 18     show(' \r\n')
33F5 0D     if (_curInt != 0) goto L3423
33FE 18     show('Now : Single byte BINARY value\r\n')
3420 0E     goto L3442

        L3423:
3423 18     show('Now : Multi Character ASCII\r\n')

        L3442:
3442 15     ivar[13] = _curInt
344A 2C     show('\n')
344C 25     if (!Correct()) goto L31D3
344F 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
3451 1C     return 0

        S3452:
3452 15     _patchStartLoc = 0x0275
345A 15     ivar[5] = 8
3462 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
3464 18     show('            Terminal start-up (optional)\r\n')
3490 2C     show('\n')
3492 18     show('Some sequences, such as auto page on, protect mode off, and\r\n')
34D1 18     show('conversation mode on, may be sent from WordStar to prepare\r\n')
350F 18     show('the terminal for WordStar functions.\r\n')
3537 2C     show('\n')
3539 1E     svar[10] = 'Terminal start-up'
354E 1E     svar[11] = 'terminal start-up'
3563 03     call S3E2C
3566 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
3568 1C     return 0

        S3569:
3569 15     _patchStartLoc = 0x027E
3571 15     ivar[5] = 8
3579 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
357B 18     show('            Terminal exit (optional)\r\n')
35A3 2C     show('\n')
35A5 18     show(' On exiting from WordStar, some function code sequences, such\r\n')
35E6 18     show(' as auto page on, protect mode off, and conversation mode on\r\n')
3626 18     show(' may be sent from WordStar to reset the terminal to its\r\n')
3661 18     show(' previous condition.\r\n')
3679 2C     show('\n')
367B 1E     svar[10] = 'Terminal exit'
368C 1E     svar[11] = 'terminal exit'
369D 03     call S3E2C
36A0 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
36A2 1C     return 0

        S36A3:
36A3 15     _patchStartLoc = 0x0267
36AB 15     ivar[5] = 6
36B3 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
36B5 18     show('            Highlighting (optional)\r\n')
36DC 2C     show('\n')
36DE 18     show('Highlighting can be achieved by ')
3700 18     show('bright/dim or inverse video.\r\n')
3720 2C     show('\n')
3722 1E     svar[10] = 'Highlight-on'
3732 1E     svar[11] = 'highlight-on'
3742 03     call S3E2C
3745 15     _patchStartLoc = 0x026E
374D 15     ivar[5] = 6
3755 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
3757 18     show('Sequence to turn off highlighting\r\n')
377C 2C     show('\n')
377E 1E     svar[10] = 'Highlight-off'
378F 1E     svar[11] = 'highlight-off'
37A0 03     call S3E2C
37A3 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
37A5 1C     return 0

        S37A6:
37A6 15     _patchStartLoc = 0x0250
37AE 15     ivar[5] = 6
37B6 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
37B8 18     show('            Erase to End of Line (optional)\r\n')
37E7 2C     show('\n')
37E9 18     show('This function blanks all character ')
380E 18     show('positions from the current\r\n')
382C 18     show('cursor position to the end of the current screen line.\r\n')
3866 2C     show('\n')
3868 1E     svar[10] = 'Erase to end of line'
3880 1E     svar[11] = 'erase to end of line'
3898 03     call S3E2C
389B 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
389D 1C     return 0

        S389E:
389E 15     _patchStartLoc = 0x0257
38A6 15     ivar[5] = 6
38AE 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
38B0 18     show('             Delete Line (optional)\r\n')
38D7 2C     show('\n')
38D9 18     show('This function deletes the screen line containing\r\n')
390D 18     show('the cursor, moving the following screen lines up one line.\r\n')
394B 2C     show('\n')
394D 1E     svar[10] = 'Delete line'
395C 1E     svar[10] = 'Delete line'
396B 03     call S3E2C
396E 1C     return 0

        S396F:
396F 15     _patchStartLoc = 0x025E
3977 15     ivar[5] = 8
397F 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
3981 18     show('            Insert Line (optional)\r\n')
39A7 2C     show('\n')
39A9 18     show('The Insert function will insert a blank line above the\r\n')
39E3 18     show('line containing the cursor. \r\n')
3A03 18     show(' \r\n')
3A08 18     show('*** NOTE *** If your terminal inserts blank lines below \r\n')
3A44 18     show('             the cursor line, you must specify a cursor-up\r\n')
3A82 18     show('             control sequence before the insert-line\r\n')
3ABA 18     show('             control sequence.\r\n')
3ADC 2C     show('\n')
3ADE 1E     svar[10] = 'Insert line'
3AED 1E     svar[11] = 'insert line'
3AFC 03     call S3E2C
3AFF 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
3B01 1C     return 0

        S3B02:
3B02 15     _patchStartLoc = 0x028D
3B0A 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
3B0C 18     show('       Handling of last character on screen\r\n')
3B3B 2C     show('\n')
3B3D 18     show(' Some terminals recognize a character at the bottom right\r\n')
3B7A 18     show(' of the screen as a command to scroll the screen. WordStar\r\n')
3BB8 18     show(' uses this feature to control where text is displayed. Check\r\n')
3BF8 18     show(' your terminal manual regarding this feature.\r\n')
3C29 2C     show('\n')
3C2B 18     show('    Does your terminal use this ')
3C4D 18     show('position as a scroll command? \r\n')
3C6F 2C     show('\n')
3C71 0C     _curInt = RdPatchByte(_patchStartLoc)
3C78 04     if (_Error != 0) call SBCA9
3C81 0D     if (_curInt == 0) goto L3CD3
3C8A 18     show('Currently ... NO (it does not)\r\n')
3CAC 2C     show('\n')
3CAE 18     show('   Enter "C" to change to YES,\r\n')
3CD0 0E     goto L3D15

        L3CD3:
3CD3 18     show('Currently ... YES (it does)\r\n')
3CF2 2C     show('\n\n')
3CF4 18     show('   Enter "C" to change to NO,\r\n')

        L3D15:
3D15 18     show('   or press <RETURN> to leave unchanged. ')
3D40 16     ***LIST***
            Select: <RETURN>
3D42 18       show('<RETURN>\r\n')
3D4E 15       _change = 0
3D56 0D       if (ivar[15] != 0) goto L3DA2
3D5F 2C       show('\n\n')
3D61 0D       if (_curInt == 0) goto L3D89
3D6A 18       show('Now ... NO (it does not)\r\n')
3D86 0E       goto L3DA2

        L3D89:
3D89 18       show('Now ... YES (it does)\r\n')

        L3DA2:
3DA2 2C       show('\n')
3DA4 14       break
            Select: 'C'
3DA7 18       show('C\r\n')
3DAC 15       _change = 1
3DB4 2C       show('\n\n')
3DB6 0D       if (_curInt == 0) goto L3DE3
3DBF 15       _curInt = 0
3DC7 18       show('Now ... YES (it does)\r\n')
3DE0 0E       goto L3E07

        L3DE3:
3DE3 15       _curInt = 1
3DEB 18       show('Now ... NO (it does not)\r\n')

        L3E07:
3E07 17       Patch(_patchStartLoc, 1, _curInt)
3E0F 2C       show('\n')
3E11 07       break
            ***END LIST***
3E12 0D     if (ivar[15] == 0) goto L3E24
3E1B 0D     if (_change == 0) goto L3E29

        L3E24:
3E24 2C     show('\n\n')
3E26 25     if (!Correct()) goto L3B02

        L3E29:
3E29 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
3E2B 1C     return 0

        S3E2C:
3E2C 03     call S3ECF
3E2F 2C     show('\n\n')
3E31 03     call S3E57
3E34 0D     if (ivar[15] == 0) goto L3E46
3E3D 0D     if (_change == 0) goto L3E56

        L3E46:
3E46 2C     show('\n\n')
3E48 03     call S3F31
3E4B 2C     show('\n\n')
3E4D 28     if (Correct()) goto L3E56
3E50 03     call S3FC0
3E53 0E     goto L3E46

        L3E56:
3E56 1C     return 0

        S3E57:
3E57 18     show('    Enter "C" to change,\r\n')
3E73 18     show('    or press <RETURN> to leave unchanged. ')
3E9F 16     ***LIST***
            Select: <RETURN>
3EA1 18       show('<RETURN> \r\n')
3EAE 2C       show('\n\n')
3EB0 15       _change = 0
3EB8 14       break
            Select: 'C'
3EBB 18       show('C\r\n')
3EC0 2C       show('\n')
3EC2 03       call S3FC0
3EC5 15       _change = 1
3ECD 07       break
            ***END LIST***
3ECE 1C     return 0

        S3ECF:
3ECF 15     _patchLoc = _patchStartLoc
3ED7 19     show(svar[10])
3ED9 18     show(' function code sequence is currently: ')
3F01 0C     _curInt = RdPatchByte(_patchLoc)
3F08 04     if (_Error != 0) call SBCA9
3F11 15     _patchLen = _curInt
3F19 0D     if (_patchLen > 0) goto L3F8E
3F22 18     show(' (empty)\r\n')
3F2E 2C     show('\n')
3F30 1C     return 0

        S3F31:
3F31 15     _patchLoc = _patchStartLoc
3F39 19     show(svar[10])
3F3B 18     show(' function code sequence is now : ')
3F5E 0C     _curInt = RdPatchByte(_patchLoc)
3F65 04     if (_Error != 0) call SBCA9
3F6E 15     _patchLen = _curInt
3F76 0D     if (_patchLen > 0) goto L3F8E
3F7F 18     show(' (empty)\r\n')
3F8B 2C     show('\n')
3F8D 1C     return 0

        L3F8E:
3F8E 15     _patchLoc = _patchLoc + 1
3F96 0C     _curInt = RdPatchByte(_patchLoc)
3F9D 04     if (_Error != 0) call SBCA9
3FA6 1A     showFmt(HEX, _curInt)
3FA9 18     show(' ')
3FAC 15     _patchLen = _patchLen - 1
3FB4 0D     if (_patchLen > 0) goto L3F8E
3FBD 2C     show('\n')
3FBF 1C     return 0

        S3FC0:
3FC0 15     ivar[6] = 0
3FC8 2B     inputMode = DECIMAL
3FCA 2C     show('\n\n\n\n\n\n\n\n\n\n')
3FCC 18     show('You can enter a value in ASCII, decimal, or hexadecimal\r\n')
4007 18     show('codes. Precede each entry with these prefixes:\r\n')
4039 2C     show('\n')
403B 18     show('ASCII         :    (:^A enters ASCII ^A, a single value)\r\n')
4077 18     show('Hexadecimal   ,    (,41 enters hexadecimal 41)\r\n')
40A9 18     show('Decimal       #    (#61 enters decimal 61)\r\n')
40D7 2C     show('\n')
40D9 18     show('To enter a sequence of characters, enter each one separately,\r\n')
411A 18     show('followed by <RETURN>.\r\n')
4133 2C     show('\n')
4135 18     show('Press <RETURN> to leave a value unchanged.\r\n')
4163 18     show('Enter a period (.) and press <RETURN> to terminate a sequence\r\n')
41A4 18     show('    and to eliminate all subsequent values.\r\n')
41D3 2C     show('\n')
41D5 18     show('These special characters require hexadecimal input:\r\n')
420C 18     show('<RETURN> (^M)            ,0D\r\n')
422C 18     show('Period (.)               ,2E\r\n')
424C 18     show('^H (backspace: ^H)       ,08\r\n')
426C 2C     show('\n')
426E 18     show('Maximum entries for ')
4284 19     show(svar[11])
4286 18     show(' function is ')
4295 1A     showFmt(DECIMAL, ivar[5])
4298 18     show('.\r\n')
429D 15     _patchLoc = _patchStartLoc
42A5 2C     show('\n')
42A7 18     show('Current     New\r\n')
42BA 18     show('Value       Value\r\n')

        L42CF:
42CF 15     _patchLoc = _patchLoc + 1
42D7 0C     _curInt = RdPatchByte(_patchLoc)
42DE 04     if (_Error != 0) call SBCA9
42E7 0D     if (_curInt > 0xF) goto L42F3
42F0 18     show('0')

        L42F3:
42F3 1A     showFmt(HEX, _curInt)
42F6 18     show('          ')
4302 21     ivar[0] = GetValue(HEX);
4304 0D     if (ivar[0] != 0xFFFF) goto L433B
430D 15     ivar[6] = ivar[6] + 1
4315 0D     if (_curInt > 0xF) goto L4321
431E 18     show('0')

        L4321:
4321 1A     showFmt(HEX, _curInt)
4324 18     show(' ... (unchanged)\r\n')
4338 0E     goto L435C

        L433B:
433B 15     _curInt = ivar[0]
4343 0D     if (_curInt == 0x0101) goto L4365
434C 15     ivar[6] = ivar[6] + 1
4354 17     Patch(_patchLoc, 1, _curInt)

        L435C:
435C 0D     if (ivar[6] < ivar[5]) goto L42CF

        L4365:
4365 15     _curInt = ivar[6]
436D 17     Patch(_patchStartLoc, 1, _curInt)
4375 2B     inputMode = DECIMAL
4377 1C     return 0

        S4378:
4378 15     _patchStartLoc = 0x01AE
4380 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
4382 0C     _curStr = RdPatchStr(_patchStartLoc)
4389 04     if (_Error != 0) call SBCA9
4392 18     show('Printer is currently : ')
43AB 19     show(_curStr)
43AD 2C     show('\n\n')
43AF 1D     ***MENU***
            show('\n     *****  STANDARD PRINTER TYPES  *****')
43DC 01     show('\n ')
43DF 01     show('\nSelect the letter of your printer from the list below.')
4417 01     show('\nThis is menu ')
4426 14     MENU ITEM Info @0xC7C9 -- 'C. Itoh/TEC Starwriter/F10'
4426 14     MENU ITEM Info @0xC924 -- 'Centronics 353'
4426 14     MENU ITEM Info @0xC9CD -- 'Centronics 739'
4426 14     MENU ITEM Info @0xCA77 -- 'Diablo 630'
4426 14     MENU ITEM Info @0xCBFF -- 'Diablo/Xerox 1610/1620'
4426 14     MENU ITEM Info @0xCCCD -- 'Diablo/Xerox 1640/1650'
4426 14     MENU ITEM Info @0xCD9C -- 'Epson MX80/100-no Graftrax'
4426 14     MENU ITEM Info @0xCE51 -- 'Half line feed printer'
4426 14     MENU ITEM Info @0xD001 -- 'IBM Parallel printer'
4426 14     MENU ITEM Info @0xD05C -- 'MPI 88G/99G'
4426 14     MENU ITEM Info @0xD102 -- 'NEC 8023A matrix printer'
4426 14     MENU ITEM Info @0xD1B5 -- 'NEC Spinwriter 3550'
4426 14     MENU ITEM Info @0xD228 -- 'NEC Spinwriter specialty'
4426 14     MENU ITEM Info @0xD3D5 -- 'Okidata ML84A'
4426 14     MENU ITEM Info @0xD47E -- 'Olympia ESW-102'
4426 14     MENU ITEM Info @0xD518 -- 'Qume Sprint 5-9/45-11+'
4426 14     MENU ITEM Info @0xD693 -- 'TI 810/820'
4426 14     MENU ITEM Info @0xD737 -- 'backspacing standard'
4426 14     MENU ITEM Info @0xD89B -- 'standard printer'
            ***END MENU***
455D 03     call S7A82
4560 03     call S7FC3
4563 1C     return 0

        S4564:
4564 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
4566 18     show('      *****   PRINTER INSTALLATION MENU   *****\r\n')
4599 2C     show('\n')
459B 18     show(' If your printer was not listed on the menu of printers or,\r\n')
45DA 18     show(' if you want to enhance the performance of your printer, you\r\n')
461A 18     show(' must provide some additional information about your printer.\r\n')
465B 18     show(' This information should be in the manual that comes with the\r\n')
469C 18     show(' printer.  If not talk to your dealer.\r\n')
46C6 18     show(' \r\n')
46CB 18     show(' If you wish to install a specialty printer select A on the\r\n')
470A 18     show(' following menu.\r\n')
471E 18     show(' \r\n')
4723 18     show(' If you wish to install a standard printer, select B on the\r\n')
4762 18     show(' following menu.\r\n')
4776 18     show(' \r\n')
477B 18     show(' If you just want to change a feature, select the appropriate\r\n')
47BC 18     show(' letter on the following menu.\r\n')
47DE 2C     show('\n\n')
47E0 0F     pause

        L47E1:
47E1 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
47E3 18     show('      *****   PRINTER INSTALLATION MENU   *****\r\n')
4816 2C     show('\n')
4818 18     show('A  Automatic installation for Specialty printers\r\n')
484C 18     show('B  Automatic installation for Standard printers\r\n')
487F 18     show(' \r\n')
4884 18     show('All printers                        Specialty printers only\r\n')
48C3 18     show(' \r\n')
48C8 18     show('C  Printer name                     I  Ribbon selection\r\n')
4903 18     show('D  Initialization                   J  Vertical motion\r\n')
493D 18     show('E  Overprinting                     K  Horizontal motion\r\n')
4979 18     show('F  Boldfacing                       L  Print modes\r\n')
49AF 18     show('G  Protocol menu                    M  Phantom characters\r\n')
49EC 18     show('H  Driver menu\r\n')
49FE 18     show(' \r\n')
4A03 18     show('Standard printers only              Optional\r\n')
4A33 18     show(' \r\n')
4A38 18     show('N  Return / line feed               O  User-defined functions\r\n')
4A79 18     show('                                    P  Carriage roll\r\n')
4AB1 18     show('                                    Q  Character pitch\r\n')
4AEB 18     show('X  Exit to INSTALLATION menu\r\n')
4B0B 18     show(' \r\n')
4B10 18     show('   Enter the letter of your choice (A-Q/X). ')

        L4B3E:
4B3E 16     ***LIST***
            Select: <RETURN>
4B40 15       _menuAction = 2
4B48 14       break
            Select: 'A'
4B4B 03       call S4C57
4B4E 15       _menuAction = 0
4B56 14       break
            Select: 'B'
4B59 03       call S4D14
4B5C 15       _menuAction = 0
4B64 14       break
            Select: 'C'
4B67 03       call S57C6
4B6A 15       _menuAction = 0
4B72 14       break
            Select: 'D'
4B75 03       call S597D
4B78 15       _menuAction = 0
4B80 14       break
            Select: 'E'
4B83 03       call S5B21
4B86 15       _menuAction = 0
4B8E 14       break
            Select: 'F'
4B91 03       call S5FDE
4B94 15       _menuAction = 0
4B9C 14       break
            Select: 'G'
4B9F 03       call S7A82
4BA2 15       _menuAction = 0
4BAA 14       break
            Select: 'H'
4BAD 03       call S7FC3
4BB0 15       _menuAction = 0
4BB8 14       break
            Select: 'I'
4BBB 03       call S6093
4BBE 15       _menuAction = 0
4BC6 14       break
            Select: 'J'
4BC9 03       call S62FB
4BCC 15       _menuAction = 0
4BD4 14       break
            Select: 'K'
4BD7 03       call S66AD
4BDA 15       _menuAction = 0
4BE2 14       break
            Select: 'L'
4BE5 03       call S6B4F
4BE8 15       _menuAction = 0
4BF0 14       break
            Select: 'M'
4BF3 03       call S6D3C
4BF6 15       _menuAction = 0
4BFE 14       break
            Select: 'N'
4C01 03       call S6EF1
4C04 15       _menuAction = 0
4C0C 14       break
            Select: 'O'
4C0F 03       call S7071
4C12 15       _menuAction = 0
4C1A 14       break
            Select: 'P'
4C1D 03       call S7441
4C20 15       _menuAction = 0
4C28 14       break
            Select: 'Q'
4C2B 03       call S775E
4C2E 15       _menuAction = 0
4C36 14       break
            Select: 'X'
4C39 2C       show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
4C3B 15       _menuAction = 1
4C43 07       break
            ***END LIST***
4C44 0D     if (_menuAction == 0) goto L47E1
4C4D 0D     if (_menuAction == 2) goto L4B3E
4C56 1C     return 0

        S4C57:
4C57 15     ivar[15] = 1
4C5F 15     ivar[16] = 1
4C67 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
4C69 18     show('    Automatic installation of a specialty printer\r\n')
4C9E 2C     show('\n\n')
4CA0 18     show('This routine allows you to install a specialty printer\r\n')
4CDA 18     show('without returning to the printer installation menu.\r\n')
4D11 0E     goto L4DCF

        S4D14:
4D14 15     ivar[15] = 1
4D1C 15     ivar[16] = 2
4D24 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
4D26 18     show('    Automatic installation of a standard printer\r\n')
4D5A 2C     show('\n\n')
4D5C 18     show('This routine allows you to install a standard printer\r\n')
4D95 18     show('without returning to the printer installation menu.\r\n')
4DCC 0E     goto L4DCF

        L4DCF:
4DCF 2C     show('\n')
4DD1 18     show('Once you enter this routine you will have to answer questions\r\n')
4E12 18     show('on each printer feature.\r\n')
4E2E 2C     show('\n\n')
4E30 18     show('    Enter "X" to exit,\r\n')
4E4A 18     show('    or press <RETURN> to continue. ')
4E6F 16     ***LIST***
            Select: <RETURN>
4E71 18       show('<RETURN>\r\n')
4E7D 15       _change = 1
4E85 14       break
            Select: 'X'
4E88 18       show('X\r\n')
4E8D 15       _change = 0
4E95 07       break
            ***END LIST***
4E96 0D     if (_change == 0) goto L5669
4E9F 03     call S57C6
4EA2 15     _patchStartLoc = 0x06ED
4EAA 15     ivar[5] = 0x10
4EB2 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
4EB4 18     show('                   Printer initialization\r\n')
4EE1 2C     show('\n')
4EE3 18     show('These are the sequences transmitted to the printer at the\r\n')
4F20 18     show('beginning and conclusion of printing.\r\n')
4F49 2C     show('\n\n')
4F4B 1E     svar[10] = 'Printer initialization'
4F65 03     call S3ECF
4F68 15     _patchStartLoc = 0x06FE
4F70 15     ivar[5] = 0x10
4F78 2C     show('\n\n')
4F7A 1E     svar[10] = 'Printer de-initialization'
4F97 03     call S3ECF
4F9A 03     call S5672
4F9D 0D     if (_change == 0) goto L4FB9
4FA6 15     ivar[15] = 0
4FAE 03     call S597D
4FB1 15     ivar[15] = 1

        L4FB9:
4FB9 15     _patchStartLoc = 0x0699
4FC1 0C     _curInt = RdPatchByte(_patchStartLoc)
4FC8 04     if (_Error != 0) call SBCA9
4FD1 15     ivar[13] = _curInt
4FD9 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
4FDB 18     show('                   Overprinting\r\n')
4FFE 2C     show('\n')
5000 18     show('What type of backspacing method does your printer use?\r\n')
503A 2C     show('\n')
503C 0D     if (_curInt == 0) goto L5081
5045 0D     if (_curInt == 1) goto L50B0
504E 18     show('Currently : Non-backspacing standard printer\r\n')
507E 0E     goto L50D1

        L5081:
5081 18     show('Currently : Backspacing standard printer\r\n')
50AD 0E     goto L50D1

        L50B0:
50B0 18     show('Currently : Specialty printer\r\n')

        L50D1:
50D1 03     call S5672
50D4 0D     if (_change == 0) goto L50F0
50DD 15     ivar[15] = 0
50E5 03     call S5B21
50E8 15     ivar[15] = 1

        L50F0:
50F0 03     call S5FDE
50F3 15     _patchLoc = 0x0778
50FB 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
50FD 0C     _curInt = RdPatchByte(_patchLoc)
5104 18     show('Communications protocol is currently : ')
512D 15     ivar[13] = _curInt
5135 04     if (_Error != 0) call SBCA9
513E 0D     if (_curInt == 1) goto L5164
5147 0D     if (_curInt == 2) goto L517D
5150 18     show(' No protocol \r\n')
5161 0E     goto L5196

        L5164:
5164 18     show(' ETX/ACK protocol \r\n')
517A 0E     goto L5196

        L517D:
517D 18     show(' X-ON/X-OFF protocol \r\n')

        L5196:
5196 03     call S5672
5199 0D     if (_change == 0) goto L51A5
51A2 03     call S7A82

        L51A5:
51A5 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
51A7 18     show('             Printer driver\r\n')
51C6 03     call S56E4
51C9 03     call S5672
51CC 0D     if (_change == 0) goto L51D8
51D5 03     call S7FC3

        L51D8:
51D8 0D     if (ivar[16] == 2) goto L5619
51E1 15     _patchStartLoc = 0x06E3
51E9 15     ivar[5] = 4
51F1 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
51F3 18     show('                 Ribbon selection\r\n')
5218 2C     show('\n\n')
521A 18     show('With these control sequences you specify alternate and\r\n')
5254 18     show('standard ribbon selection, if your printer allows. What\r\n')
528F 18     show('sequence of characters should be sent to the printer at\r\n')
52CA 18     show('"^PY" in your text?\r\n')
52E1 2C     show('\n\n')
52E3 1E     svar[10] = 'Alternate ribbon selection'
5301 03     call S3ECF
5304 15     _patchStartLoc = 0x06E8
530C 15     ivar[5] = 4
5314 2C     show('\n\n')
5316 1E     svar[10] = 'Standard ribbon selection'
5333 03     call S3ECF
5336 03     call S5672
5339 0D     if (_change == 0) goto L5355
5342 15     ivar[15] = 0
534A 03     call S6093
534D 15     ivar[15] = 1

        L5355:
5355 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
5357 18     show('                Vertical motion\r\n')
537A 2C     show('\n\n')
537C 03     call S56E4
537F 03     call S5672
5382 0D     if (_change == 0) goto L539E
538B 15     ivar[15] = 0
5393 03     call S62FB
5396 15     ivar[15] = 1

        L539E:
539E 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
53A0 18     show('             Horizontal motion\r\n')
53C2 2C     show('\n\n')
53C4 03     call S56E4
53C7 03     call S5672
53CA 0D     if (_change == 0) goto L53E6
53D3 15     ivar[15] = 0
53DB 03     call S66AD
53DE 15     ivar[15] = 1

        L53E6:
53E6 15     _patchStartLoc = 0x0792
53EE 15     ivar[5] = 4
53F6 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
53F8 18     show('               Print modes\r\n')
5416 2C     show('\n\n')
5418 18     show('If your printer is capable of both backward and forward\r\n')
5453 18     show('printing set both of the following features.\r\n')
5483 2C     show('\n\n')
5485 1E     svar[10] = 'Set forward print mode'
549F 03     call S3ECF
54A2 15     _patchStartLoc = 0x0797
54AA 15     ivar[5] = 4
54B2 2C     show('\n\n')
54B4 1E     svar[10] = 'Set backward print mode'
54CF 03     call S3ECF
54D2 03     call S5672
54D5 0D     if (_change == 0) goto L54F1
54DE 15     ivar[15] = 0
54E6 03     call S6B4F
54E9 15     ivar[15] = 1

        L54F1:
54F1 15     _patchStartLoc = 0x07B0
54F9 15     ivar[5] = 3
5501 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
5503 18     show('            Print phantom characters\r\n')
552B 2C     show('\n')
552D 18     show('These sequences specify the characters to be sent to the\r\n')
5569 18     show('printer to print its phantom space and phantom rubout\r\n')
55A2 18     show('characters.\r\n')
55B1 2C     show('\n\n')
55B3 1E     svar[10] = 'Print phantom space'
55CA 03     call S3ECF
55CD 15     _patchStartLoc = 0x07B4
55D5 15     ivar[5] = 3
55DD 2C     show('\n\n')
55DF 1E     svar[10] = 'Print phantom rubout'
55F7 03     call S3ECF
55FA 03     call S5672
55FD 0D     if (_change == 0) goto L5619
5606 15     ivar[15] = 0
560E 03     call S6D3C
5611 15     ivar[15] = 1

        L5619:
5619 0D     if (ivar[16] == 1) goto L5669
5622 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
5624 18     show('             Return / Line feed\r\n')
5647 03     call S56E4
564A 03     call S5672
564D 0D     if (_change == 0) goto L5669
5656 15     ivar[15] = 0
565E 03     call S6EF1
5661 15     ivar[15] = 1

        L5669:
5669 15     ivar[15] = 0
5671 1C     return 0

        S5672:
5672 2C     show('\n\n\n')
5674 18     show('    Enter "C" to change,\r\n')
5690 18     show('    or press <RETURN> to leave unchanged. ')
56BC 16     ***LIST***
            Select: <RETURN>
56BE 18       show('<RETURN>\r\n')
56CA 15       _change = 0
56D2 14       break
            Select: 'C'
56D5 18       show('C\r\n')
56DA 15       _change = 1
56E2 07       break
            ***END LIST***
56E3 1C     return 0

        S56E4:
56E4 2C     show('\n\n')
56E6 18     show('As there are a large number of values relating to this item,\r\n')
5726 18     show('these values are not displayed. If you wish to change or\r\n')
5762 18     show('view any of the current values enter C below and each item\r\n')
57A0 18     show('will be displayed individually.\r\n')
57C3 2C     show('\n\n')
57C5 1C     return 0

        S57C6:
57C6 15     _patchStartLoc = 0x01AE
57CE 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
57D0 18     show('          Printer Name (optional)\r\n')
57F5 0C     _curStr = RdPatchStr(_patchStartLoc)
57FC 04     if (_Error != 0) call SBCA9
5805 2C     show('\n')
5807 18     show('Current name is : ')
581B 19     show(_curStr)
581D 2C     show('\n\n\n')
581F 18     show('    Enter "C" to change,\r\n')
583B 18     show('    or press <RETURN> to leave unchanged. ')
5867 16     ***LIST***
            Select: <RETURN>
5869 15       _change = 0
5871 18       show('<RETURN>\r\n')
587D 14       break
            Select: 'c'
5880 15       _change = 1
5888 18       show('C\r\n')
588D 07       break
            ***END LIST***
588E 2C     show('\n\n')
5890 0D     if (_change == 1) goto L58D6
5899 0D     if (ivar[15] != 0) goto L597C
58A2 0C     _curStr = RdPatchStr(_patchStartLoc)
58A9 04     if (_Error != 0) call SBCA9
58B2 2C     show('\n\n')
58B4 18     show('Printer name now is : ')
58CC 19     show(_curStr)
58CE 2C     show('\n\n\n')
58D0 25     if (!Correct()) goto L58D6
58D3 0E     goto L597C

        L58D6:
58D6 2C     show('\n\n')
58D8 18     show('    New printer (maximum 34 characters) : ')
5904 09     _curStr = GetString()
5906 2C     show('\n\n')
5908 18     show('Printer name now is : ')
5920 19     show(_curStr)
5922 2C     show('\n\n\n')
5924 25     if (!Correct()) goto L58D6
5927 2C     show('\n\n')
5929 1E     _spaces = '                                  '
594F 17     Patch(_patchStartLoc, 34, _spaces)
5957 1E     _spaces = '                    '
596F 27     svar[13] = _curStr + _spaces + _spaces
5974 17     Patch(_patchStartLoc, 34, svar[13])

        L597C:
597C 1C     return 0

        S597D:
597D 15     _patchStartLoc = 0x06ED
5985 15     ivar[5] = 0x10
598D 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
598F 18     show('                   Printer initialization\r\n')
59BC 2C     show('\n')
59BE 18     show('This is the sequence transmitted to the printer at the start\r\n')
59FE 18     show('of printing.\r\n')
5A0E 2C     show('\n')
5A10 1E     svar[10] = 'Printer initialization'
5A2A 1E     svar[11] = 'printer initialization'
5A44 03     call S3E2C
5A47 15     _patchStartLoc = 0x06FE
5A4F 15     ivar[5] = 0x10
5A57 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
5A59 18     show('                Printer de-initialization\r\n')
5A86 2C     show('\n')
5A88 18     show('This is the sequence transmitted to the printer at the ')
5AC1 18     show('conclusion\r\n')
5ACF 18     show('of printing.\r\n')
5ADF 2C     show('\n')
5AE1 1E     svar[10] = 'Printer de-initialization'
5AFE 1E     svar[11] = 'printer de-initialization'
5B1B 03     call S3E2C
5B1E 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
5B20 1C     return 0

        S5B21:
5B21 15     _patchStartLoc = 0x0699
5B29 0C     _curInt = RdPatchByte(_patchStartLoc)
5B30 04     if (_Error != 0) call SBCA9
5B39 15     ivar[13] = _curInt
5B41 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
5B43 18     show('                   Overprinting\r\n')
5B66 2C     show('\n')
5B68 18     show('What type of backspacing method does your printer use?\r\n')
5BA2 2C     show('\n')
5BA4 0D     if (_curInt == 0) goto L5BE9
5BAD 0D     if (_curInt == 1) goto L5C18
5BB6 18     show('Currently : Non-backspacing standard printer\r\n')
5BE6 0E     goto L5C39

        L5BE9:
5BE9 18     show('Currently : Backspacing standard printer\r\n')
5C15 0E     goto L5C39

        L5C18:
5C18 18     show('Currently : Specialty printer\r\n')

        L5C39:
5C39 16     ***LIST***
            Select: <RETURN>
5C39 16       show('\n ')
5C3C 15       _curInt = ivar[13]
5C44 18       show(' \r\n')
5C49 0D       if (_curInt == 0) goto L5C88
5C52 0D       if (_curInt == 1) goto L5CB1
5C5B 18       show('Now : Non-backspacing standard printer\r\n')
5C85 0E       goto L5CCC

        L5C88:
5C88 18       show('Now : Backspacing standard printer\r\n')
5CAE 0E       goto L5CCC

        L5CB1:
5CB1 18       show('Now : Specialty printer\r\n')

        L5CCC:
5CCC 14       break
            Select: 'A'
              show('\nA   Specialty printer')
5CE3 01       show('\n    Printer is a daisy wheel or similar incremental printer')
5D20 01       show('\n      and can overprint using horizontal motion controls')
5D5A 01       show('\n ')
5D5D 2C       show('\n')
5D5F 18       show('Now : Specialty printer\r\n')
5D7A 2C       show('\n')
5D7C 15       _curInt = 1
5D84 17       Patch(_patchStartLoc, 1, _curInt)
5D8C 14       break
            Select: 'B'
              show('\nB   Backspacing standard printer')
5DAE 01       show('\n    Printer can overprint by backspacing as well as by')
5DE6 01       show('\n      using return without a line feed')
5E0E 01       show('\n ')
5E11 2C       show('\n')
5E13 18       show('Now : Backspacing standard printer\r\n')
5E39 2C       show('\n')
5E3B 15       _curInt = 0
5E43 17       Patch(_patchStartLoc, 1, _curInt)
5E4B 14       break
            Select: 'C'
              show('\nC   Non-backspacing standard printer')
5E71 01       show('\n    Printer can overprint only by using return without')
5EA9 01       show('\n      a line feed')
5EBC 01       show('\n ')
5EBF 01       show('\n    Enter the letter of your choice (A/B/C),')
5EED 01       show('\n    or press <RETURN> to leave unchanged. ')
5F19 2C       show('\n')
5F1B 18       show('Now : Non-backspacing standard printer\r\n')
5F45 2C       show('\n')
5F47 15       _curInt = 0xFF
5F4F 17       Patch(_patchStartLoc, 1, _curInt)
5F57 07       break
            ***END LIST***
5F58 15     ivar[13] = _curInt
5F60 2C     show('\n')
5F62 25     if (!Correct()) goto L5B21
5F65 0D     if (ivar[13] != 0) goto L5FDD
5F6E 15     _patchStartLoc = 0x06B5
5F76 15     ivar[5] = 5
5F7E 2C     show('\n\n\n\n')
5F80 18     show('You must now enter the backspacing control sequence.\r\n')
5FB8 2C     show('\n')
5FBA 1E     svar[10] = 'Backspacing'
5FC9 1E     svar[11] = 'backspacing'
5FD8 03     call S3E2C
5FDB 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')

        L5FDD:
5FDD 1C     return 0

        S5FDE:
5FDE 2B     inputMode = ASCII
5FE0 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
5FE2 18     show('                   Boldfacing\r\n')
6003 2C     show('\n')
6005 18     show('You may set the number of strikes for boldfacing. This\r\n')
603F 18     show('should be set to 2 for specialty printers.\r\n')
606D 15     _patchStartLoc = 0x069A
6075 2C     show('\n\n')
6077 1E     svar[10] = 'Boldfacing strikes'
608D 03     call S287A
6090 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6092 1C     return 0

        S6093:
6093 15     _patchStartLoc = 0x06E3
609B 15     ivar[5] = 4
60A3 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
60A5 18     show('            Alternate ribbon selection\r\n')
60CF 2C     show('\n')
60D1 18     show('With this control sequence you specify alternate ribbon\r\n')
610C 18     show('selection, if your printer allows. What sequence of characters\r\n')
614E 18     show('should be sent to the printer at the first "^PY" in your text?\r\n')
6190 2C     show('\n')
6192 1E     svar[10] = 'Alternate ribbon selection'
61B0 1E     svar[11] = 'alternate ribbon selection'
61CE 03     call S3E2C
61D1 15     _patchStartLoc = 0x06E8
61D9 15     ivar[5] = 4
61E1 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
61E3 18     show('              Standard ribbon selection\r\n')
620E 2C     show('\n')
6210 18     show('With this control sequence you specify standard ribbon\r\n')
624A 18     show('selection. What sequence of characters should be sent to\r\n')
6286 18     show('the printer at the second "^PY" in your text?\r\n')
62B7 2C     show('\n')
62B9 2C     show('\n\n')
62BB 1E     svar[10] = 'Standard ribbon selection'
62D8 1E     svar[11] = 'standard ribbon selection'
62F5 03     call S3E2C
62F8 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
62FA 1C     return 0

        S62FB:
62FB 15     _patchStartLoc = 0x077A
6303 15     ivar[5] = 4
630B 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
630D 18     show('                   Vertical motion\r\n')
6333 2C     show('\n\n')
6335 18     show(' What is the sequence of special characters sent by WordStar\r\n')
6375 18     show(' to tell the printer to accept the Vertical Motion Index')
63AF 18     show(' (VMI)?\r\n')
63BA 2C     show('\n')
63BC 1E     svar[10] = 'Your'
63C4 1E     svar[11] = 'this'
63CC 03     call S3E2C
63CF 15     _patchStartLoc = 0x077F
63D7 15     ivar[5] = 4
63DF 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
63E1 18     show(' What is the sequence of special characters sent by WordStar\r\n')
6421 18     show(' to the printer at the conclusion of printing in vertical\r\n')
645E 18     show(' increments? This sequence is not required for most printers.\r\n')
649F 2C     show('\n')
64A1 1E     svar[10] = 'Your'
64A9 1E     svar[11] = 'this'
64B1 03     call S3E2C
64B4 2B     inputMode = ASCII
64B6 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
64B8 18     show('What is the minimum value allowed for VMI?\r\n')
64E6 2C     show('\n')
64E8 15     _patchStartLoc = 0x0784
64F0 2C     show('\n\n')
64F2 1E     svar[10] = 'VMI minimum'
6501 15     ivar[17] = 1
6509 03     call S287A
650C 2B     inputMode = ASCII
650E 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6510 18     show('What is the range of valid VMI values?\r\n')
653A 2C     show('\n')
653C 18     show('NOTE : minimum value + range = maximum value\r\n')
656C 2C     show('\n')
656E 15     _patchStartLoc = 0x0786
6576 2C     show('\n\n')
6578 1E     svar[10] = 'VMI range'
6585 15     ivar[17] = 1
658D 15     ivar[19] = 1
6595 03     call S287A
6598 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
659A 15     _patchStartLoc = 0x07A6
65A2 15     ivar[5] = 4
65AA 2C     show('\n\n\n\n\n')
65AC 18     show('What is the function code sequence that causes a line feed\r\n')
65EA 18     show('at the current line height?\r\n')
6609 2C     show('\n')
660B 1E     svar[10] = 'Your'
6613 1E     svar[11] = 'this'
661B 03     call S3E2C
661E 15     _patchStartLoc = 0x07AB
6626 15     ivar[5] = 4
662E 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6630 18     show('What is the function code sequence that causes a reverse line\r\n')
6671 18     show('feed at the current line height?\r\n')
6695 2C     show('\n')
6697 1E     svar[10] = 'Your'
669F 1E     svar[11] = 'this'
66A7 03     call S3E2C
66AA 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
66AC 1C     return 0

        S66AD:
66AD 15     _patchStartLoc = 0x0788
66B5 15     ivar[5] = 4
66BD 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
66BF 18     show('                   Horizontal motion\r\n')
66E7 2C     show('\n')
66E9 18     show(' What is the sequence of special characters sent by WordStar\r\n')
6729 18     show(' to tell the printer to accept the Horizontal Motion Index')
6765 18     show(' (HMI)?\r\n')
6770 2C     show('\n')
6772 1E     svar[10] = 'Your'
677A 1E     svar[11] = 'this'
6782 03     call S3E2C

        L6785:
6785 15     _patchStartLoc = 0x078D
678D 0C     _curInt = RdPatchByte(_patchStartLoc)
6794 04     if (_Error != 0) call SBCA9
679D 15     ivar[13] = _curInt
67A5 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
67A7 18     show('What horizontal increment (in inches) does your printer use?\r\n')
67E7 2C     show('\n')
67E9 0D     if (_curInt == 0) goto L6850
67F2 18     show('Currently : 1/60 inch increments\r\n')
6816 2C     show('\n\n')
6818 18     show('    Enter "C" to change to 1/120 inch increments,\r\n')
684D 0E     goto L68AB

        L6850:
6850 18     show('Currently : 1/120 inch increments\r\n')
6875 2C     show('\n\n')
6877 18     show('    Enter "C" to change to 1/60 inch increments,\r\n')

        L68AB:
68AB 18     show('    or press <RETURN> to leave unchanged. ')
68D7 16     ***LIST***
            Select: <RETURN>
68D9 14       break
            Select: 'C'
68DC 0D       if (_curInt != 0) goto L68F0
68E5 15       _curInt = 0xFF
68ED 0E       goto L68F8

        L68F0:
68F0 15       _curInt = 0

        L68F8:
68F8 17       Patch(_patchStartLoc, 1, _curInt)
6900 07       break
            ***END LIST***
6901 2C     show('\n\n')
6903 0D     if (_curInt == 0) goto L692D
690C 18     show('Now : 1/60 inch increments\r\n')
692A 0E     goto L694C

        L692D:
692D 18     show('Now : 1/120 inch increments\r\n')

        L694C:
694C 2C     show('\n\n')
694E 25     if (!Correct()) goto L6785
6951 2B     inputMode = ASCII
6953 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6955 18     show('What is the minimum value allowed for HMI?\r\n')
6983 2C     show('\n')
6985 15     _patchStartLoc = 0x078E
698D 2C     show('\n\n')
698F 1E     svar[10] = 'HMI minimum'
699E 15     ivar[17] = 1
69A6 03     call S287A
69A9 2B     inputMode = ASCII
69AB 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
69AD 18     show('What is the range of valid HMI values?\r\n')
69D7 2C     show('\n')
69D9 18     show('NOTE : minimum value + range = maximum value\r\n')
6A09 2C     show('\n')
6A0B 15     _patchStartLoc = 0x0790
6A13 2C     show('\n\n')
6A15 1E     svar[10] = 'HMI range'
6A22 15     ivar[17] = 1
6A2A 15     ivar[19] = 1
6A32 03     call S287A
6A35 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6A37 15     _patchStartLoc = 0x079C
6A3F 15     ivar[5] = 4
6A47 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6A49 18     show('What is the function code sequence that causes a space\r\n')
6A83 18     show('forward at the current character width?\r\n')
6AAE 2C     show('\n')
6AB0 1E     svar[10] = 'Your'
6AB8 1E     svar[11] = 'this'
6AC0 03     call S3E2C
6AC3 15     _patchStartLoc = 0x07A1
6ACB 15     ivar[5] = 4
6AD3 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6AD5 18     show('What is the function code sequence that causes a back\r\n')
6B0E 18     show('space at the current character width?\r\n')
6B37 2C     show('\n')
6B39 1E     svar[10] = 'Your'
6B41 1E     svar[11] = 'this'
6B49 03     call S3E2C
6B4C 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6B4E 1C     return 0

        S6B4F:
6B4F 15     _patchStartLoc = 0x0792
6B57 15     ivar[5] = 4
6B5F 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6B61 18     show('               Print modes\r\n')
6B7F 2C     show('\n\n')
6B81 18     show('If your printer is capable of both backward and forward\r\n')
6BBC 18     show('printing set both of the following features.\r\n')
6BEC 2C     show('\n\n')
6BEE 18     show('            Set forward print mode\r\n')
6C14 2C     show('\n')
6C16 18     show('This sequence defines printing in a forward direction.\r\n')
6C50 2C     show('\n')
6C52 1E     svar[10] = 'Set forward print mode'
6C6C 1E     svar[11] = 'set forward print mode'
6C86 03     call S3E2C
6C89 15     _patchStartLoc = 0x0797
6C91 15     ivar[5] = 4
6C99 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6C9B 18     show('           Set backward print mode\r\n')
6CC1 2C     show('\n')
6CC3 18     show('This sequence defines printing in a backward direction.\r\n')
6CFE 2C     show('\n')
6D00 1E     svar[10] = 'Set backward print mode'
6D1B 1E     svar[11] = 'set backward print mode'
6D36 03     call S3E2C
6D39 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6D3B 1C     return 0

        S6D3C:
6D3C 15     _patchStartLoc = 0x07B0
6D44 15     ivar[5] = 3
6D4C 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6D4E 18     show('            Print phantom space\r\n')
6D71 2C     show('\n')
6D73 18     show('This sequence specifies the characters to be sent to the\r\n')
6DAF 18     show('printer to print its phantom space character.\r\n')
6DE0 2C     show('\n')
6DE2 1E     svar[10] = 'Print phantom space'
6DF9 1E     svar[11] = 'print phantom space'
6E10 03     call S3E2C
6E13 15     _patchStartLoc = 0x07B4
6E1B 15     ivar[5] = 3
6E23 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6E25 18     show('            Print phantom rubout\r\n')
6E49 2C     show('\n')
6E4B 18     show('This sequence specifies the characters to be sent to the\r\n')
6E87 18     show('printer to print its phantom rubout character.\r\n')
6EB9 2C     show('\n')
6EBB 1E     svar[10] = 'Print phantom rubout'
6ED3 1E     svar[11] = 'print phantom rubout'
6EEB 03     call S3E2C
6EEE 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6EF0 1C     return 0

        S6EF1:
6EF1 15     _patchStartLoc = 0x069C
6EF9 15     ivar[5] = 0xA
6F01 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6F03 18     show('         Return and line feed control sequence\r\n')
6F35 2C     show('\n')
6F37 1E     svar[10] = 'Return and line feed'
6F4F 1E     svar[11] = 'return and line feed'
6F67 03     call S3E2C
6F6A 15     _patchStartLoc = 0x06A7
6F72 15     ivar[5] = 6
6F7A 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6F7C 18     show('          Return (no line feed) control sequence\r\n')
6FB0 2C     show('\n')
6FB2 1E     svar[10] = 'Return (no line feed)'
6FCB 1E     svar[11] = 'return (no line feed)'
6FE4 03     call S3E2C
6FE7 15     _patchStartLoc = 0x06AE
6FEF 15     ivar[5] = 6
6FF7 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
6FF9 18     show('        Return and half line feed control sequence\r\n')
702F 2C     show('\n')
7031 1E     svar[10] = 'Return and half line feed'
704E 1E     svar[11] = 'return and half line feed'
706B 03     call S3E2C
706E 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
7070 1C     return 0

        S7071:
7071 15     _patchStartLoc = 0x06CF
7079 15     ivar[5] = 4
7081 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
7083 18     show('            User-defined functions\r\n')
70A9 2C     show('\n\n')
70AB 18     show('WordStar provides four print commands which the user may\r\n')
70E7 18     show('assign. When you include function characters (such as ^PW)\r\n')
7125 18     show('in your text, WordStar will perform actions, such as\r\n')
715D 18     show('changing to italic font. Check your printer manual for\r\n')
7197 18     show('special features available.\r\n')
71B6 2C     show('\n\n')
71B8 18     show('            User function #1\r\n')
71D8 2C     show('\n')
71DA 18     show('What sequence of characters should be sent to the printer\r\n')
7217 18     show('at "^PQ" in your text?\r\n')
7231 2C     show('\n')
7233 1E     svar[10] = '#1 User'
723E 1E     svar[11] = '#1 user'
7249 03     call S3E2C
724C 15     _patchStartLoc = 0x06D4
7254 15     ivar[5] = 4
725C 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
725E 18     show('            User function #2\r\n')
727E 2C     show('\n')
7280 18     show('What sequence of characters should be sent to the printer\r\n')
72BD 18     show('at "^PW" in your text?\r\n')
72D7 2C     show('\n')
72D9 1E     svar[10] = '#2 User'
72E4 1E     svar[11] = '#2 user'
72EF 03     call S3E2C
72F2 15     _patchStartLoc = 0x06D9
72FA 15     ivar[5] = 4
7302 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
7304 18     show('            User function #3\r\n')
7324 2C     show('\n')
7326 18     show('What sequence of characters should be sent to the printer\r\n')
7363 18     show('at "^PE" in your text?\r\n')
737D 2C     show('\n')
737F 1E     svar[10] = '#3 User'
738A 1E     svar[11] = '#3 user'
7395 03     call S3E2C
7398 15     _patchStartLoc = 0x06DE
73A0 15     ivar[5] = 4
73A8 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
73AA 18     show('            User function #4\r\n')
73CA 2C     show('\n')
73CC 18     show('What sequence of characters should be sent to the printer\r\n')
7409 18     show('at "^PR" in your text?\r\n')
7423 2C     show('\n')
7425 1E     svar[10] = '#4 User'
7430 1E     svar[11] = '#4 user'
743B 03     call S3E2C
743E 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
7440 1C     return 0

        S7441:
7441 15     _patchStartLoc = 0x06C5
7449 15     ivar[5] = 4
7451 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
7453 18     show('            Roll up carriage\r\n')
7473 2C     show('\n')
7475 18     show('Some WordStar features, such as superscripting, require that\r\n')
74B5 18     show('the carriage roll up a partial line. Check your printer\r\n')
74F0 18     show('manual for the special characters required to roll the\r\n')
752A 18     show('carriage up a partial line. What sequence of characters\r\n')
7565 18     show('should be sent to the printer at "^PT" in your text?\r\n')
759D 2C     show('\n')
759F 1E     svar[10] = 'Roll up carriage'
75B3 1E     svar[11] = 'roll up carriage'
75C7 03     call S3E2C
75CA 15     _patchStartLoc = 0x06CA
75D2 15     ivar[5] = 4
75DA 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
75DC 18     show('            Roll down carriage\r\n')
75FE 2C     show('\n')
7600 18     show('Some WordStar features, such as subscripting, require that\r\n')
763E 18     show('the carriage roll down a partial line. Check your printer\r\n')
767B 18     show('manual for the special characters required to roll the\r\n')
76B5 18     show('carriage down a partial line. What sequence of characters\r\n')
76F2 18     show('should be sent to the printer at "^PV" in your text?\r\n')
772A 2C     show('\n')
772C 1E     svar[10] = 'Roll down carriage'
7742 1E     svar[11] = 'roll down carriage'
7758 03     call S3E2C
775B 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
775D 1C     return 0

        S775E:
775E 15     _patchStartLoc = 0x06BB
7766 15     ivar[5] = 4
776E 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
7770 18     show('        Set alternate character pitch\r\n')
7799 2C     show('\n')
779B 18     show('If your printer allows, you can change the character pitch\r\n')
77D9 18     show('within a document. This sequence specifies the characters\r\n')
7816 18     show('required to set alternate character pitch. Check your printer\r\n')
7857 18     show('manual for code sequence. What sequence of characters should\r\n')
7897 18     show('be sent to the printer at "^PA" in your text?\r\n')
78C8 2C     show('\n')
78CA 1E     svar[10] = 'Set alternate character pitch'
78EB 1E     svar[11] = 'set alternate character pitch'
790C 03     call S3E2C
790F 15     _patchStartLoc = 0x06C0
7917 15     ivar[5] = 4
791F 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
7921 18     show('        Set standard character pitch\r\n')
7949 2C     show('\n')
794B 18     show('This code sequence provides the characters required to\r\n')
7985 18     show('set/reset standard character pitch. Check your printer manual\r\n')
79C6 18     show('for the specific characters. What sequence of characters\r\n')
7A02 18     show('should be sent to the printer at "^PN" in your text?\r\n')
7A3A 2C     show('\n')
7A3C 1E     svar[10] = 'Set standard character pitch'
7A5C 1E     svar[11] = 'set standard character pitch'
7A7C 03     call S3E2C
7A7F 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
7A81 1C     return 0

        S7A82:
7A82 15     _patchLoc = 0x0778
7A8A 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
7A8C 0C     _curInt = RdPatchByte(_patchLoc)
7A93 18     show('Communications protocol is currently : ')
7ABC 15     ivar[13] = _curInt
7AC4 04     if (_Error != 0) call SBCA9
7ACD 0D     if (_curInt == 1) goto L7AF3
7AD6 0D     if (_curInt == 2) goto L7B0C
7ADF 18     show(' No protocol \r\n')
7AF0 0E     goto L7B25

        L7AF3:
7AF3 18     show(' ETX/ACK protocol \r\n')
7B09 0E     goto L7B25

        L7B0C:
7B0C 18     show(' X-ON/X-OFF protocol \r\n')

        L7B25:
7B25 2C     show('\n')
7B27 16     ***LIST***
            Select: <RETURN>
7B27 16       show('\n     *****  COMMUNICATIONS PROTOCOL MENU  *****')
7B58 01       show('\n ')
7B5B 01       show('\n ')
7B5E 01       show('\n Some printers require special codes to regulate the flow of')
7B9C 01       show('\n information from the computer to the printer. If you do not')
7BDA 01       show('\n know whether you need one, see the installation manual.')
7C14 2C       show('\n\n')
7C16 15       _change = ivar[13]
7C1E 0D       if (_change == 1) goto L7C61
7C27 0D       if (_change == 2) goto L7C90
7C30 1E       _curStr = '    No communications protocol    '
7C56 17       Patch(0x01D2, 34, _curStr) -- PROTTX[0]
7C5E 0E       goto L7CBC

        L7C61:
7C61 1E       _curStr = '        ETX/ACK protocol        '
7C85 17       Patch(0x01D2, 34, _curStr) -- PROTTX[0]
7C8D 0E       goto L7CBC

        L7C90:
7C90 1E       _curStr = '      X-ON/X-OFF protocol       '
7CB4 17       Patch(0x01D2, 34, _curStr) -- PROTTX[0]

        L7CBC:
7CBC 2C       show('\n')
7CBE 14       break
            Select: 'A'
              show('\n A  NONE required (or handled outside of WordStar)')
7CF2 15       _change = 0
7CFA 15       ivar[6] = 0
7D02 17       Patch(_patchLoc, 1, _change)
7D0A 1E       _curStr = '    No communications protocol    '
7D30 17       Patch(0x01D2, 34, _curStr) -- PROTTX[0]
7D38 14       break
            Select: 'B'
              show('\n B  ETX/ACK protocol')
7D4E 15       _change = 1
7D56 15       ivar[6] = 1
7D5E 17       Patch(_patchLoc, 1, _change)
7D66 1E       _curStr = '         ETX/ACK protocol         '
7D8C 17       Patch(0x01D2, 34, _curStr) -- PROTTX[0]
7D94 14       break
            Select: 'C'
              show('\n C  X-ON/X-OFF protocol')
7DAD 01       show('\n ')
7DB0 01       show('\n ')
7DB3 01       show('\n    Enter the letter of your choice (A/B/C),')
7DE1 01       show('\n    or press <RETURN> to leave unchanged. ')
7E0D 15       _change = 2
7E15 15       ivar[6] = 1
7E1D 17       Patch(_patchLoc, 1, _change)
7E25 1E       _curStr = '       X-ON/X-OFF protocol        '
7E4B 17       Patch(0x01D2, 34, _curStr) -- PROTTX[0]
7E53 07       break
            ***END LIST***
7E54 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
7E56 18     show('Communications protocol is now : ')
7E79 0D     if (_change == 0) goto L7EA7
7E82 0D     if (_change == 1) goto L7EBB
7E8B 18     show(' X-ON/X-OFF protocol \r\n')
7EA4 0E     goto L7ED1

        L7EA7:
7EA7 18     show(' No protocol \r\n')
7EB8 0E     goto L7ED1

        L7EBB:
7EBB 18     show(' ETX/ACK protocol \r\n')

        L7ED1:
7ED1 2C     show('\n')
7ED3 25     if (!Correct()) goto L7A82
7ED6 2C     show('\n\n')
7ED8 0D     if (_change != 1) goto L7FC0
7EE1 2B     inputMode = ASCII
7EE3 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
7EE5 18     show('     ETX/ACK message length\r\n')
7F04 2C     show('\n')
7F06 18     show('This value should be equal to or less than one half of the\r\n')
7F44 18     show('printer buffer size. Refer to your printer manual for buffer\r\n')
7F84 18     show('size information.\r\n')
7F99 15     _patchStartLoc = 0x0779
7FA1 2C     show('\n\n')
7FA3 1E     svar[10] = 'ETX/ACK message length'
7FBD 03     call S287A

        L7FC0:
7FC0 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
7FC2 1C     return 0

        S7FC3:
7FC3 15     _patchLoc = 0x0717
7FCB 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
7FCD 0C     _curInt = RdPatchByte(_patchLoc)
7FD4 15     ivar[13] = _curInt
7FDC 18     show('Driver is currently : ')
7FF4 04     if (_Error != 0) call SBCA9
7FFD 0D     if (_curInt == 1) goto L8052
8006 0D     if (_curInt == 2) goto L8082
800F 0D     if (_curInt == 4) goto L8034
8018 18     show(' Primary list device \r\n')
8031 0E     goto L80A9

        L8034:
8034 18     show(' Secondary list device \r\n')
804F 0E     goto L80A9

        L8052:
8052 18     show(' Port Driver (direct I/O to 8-bit ports) \r\n')
807F 0E     goto L80A9

        L8082:
8082 18     show(' User-installed driver subroutines \r\n')

        L80A9:
80A9 2C     show('\n')
80AB 16     ***LIST***
            Select: <RETURN>
80AB 16       show('\n     *****  DRIVER MENU  *****')
80CB 01       show('\n ')
80CE 01       show('\n ')
80D1 01       show('\n In order for WordStar to work with the printer you must')
810B 01       show('\n select a printer driver, the part of a program that sends')
8147 01       show('\n information to the printer. If you do not know what kind')
8182 01       show('\n of printer driver you need, see the installation manual.')
81BD 01       show('\n ')
81C0 01       show('\n (With no protocol, the usual driver selection is A.)')
81F7 2C       show('\n\n\n')
81F9 15       _change = ivar[13]
8201 0D       if (_change == 1) goto L826E
820A 0D       if (_change == 2) goto L8297
8213 0D       if (_change == 4) goto L8245
821C 1E       _curStr = '       Primary list device        '
8242 0E       goto L82BD

        L8245:
8245 1E       _curStr = '      Secondary list device       '
826B 0E       goto L82BD

        L826E:
826E 1E       _curStr = ' Direct I/O to 8-bit port driver  '
8294 0E       goto L82BD

        L8297:
8297 1E       _curStr = 'User-installed driver subroutines '

        L82BD:
82BD 14       break
            Select: 'A'
              show('\n A  Operating system primary list device')
82E7 15       _change = 0
82EF 15       _patchStartLoc = 0x0717
82F7 17       Patch(_patchStartLoc, 1, _change)
82FF 15       _patchStartLoc = 0x0718
8307 17       Patch(_patchStartLoc, 1, _change)
830F 1E       _curStr = '       Primary list device        '
8335 14       break
            Select: 'B'
              show('\n B  Operating system secondary list device (CP/M only)')
836D 15       _change = 0
8375 15       _patchStartLoc = 0x0718
837D 17       Patch(_patchStartLoc, 1, _change)
8385 15       _change = 4
838D 15       _patchStartLoc = 0x0717
8395 17       Patch(_patchStartLoc, 1, _change)
839D 1E       _curStr = '      Secondary list device       '
83C3 14       break
            Select: 'C'
              show('\n C  Direct I/O to 8-bit port')
83E1 01       show('\n ')
83E4 01       show('\n ')
83E7 01       show('\n    Enter the letter of your choice (A/B/C),')
8415 01       show('\n    or press <RETURN> to leave unchanged. ')
8441 15       _change = 0xFF
8449 15       _patchStartLoc = 0x0718
8451 17       Patch(_patchStartLoc, 1, _change)
8459 15       _change = 1
8461 15       _patchStartLoc = 0x0717
8469 17       Patch(_patchStartLoc, 1, _change)
8471 1E       _curStr = ' Direct I/O to 8-bit port driver  '
8497 07       break
            ***END LIST***
8498 17     Patch(0x01F6, 34, _curStr) -- PDRVTX[0]
84A0 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
84A2 18     show(' Driver is now : ')
84B5 0D     if (_change == 0) goto L85E9
84BE 0D     if (_change == 4) goto L86A2
84C7 0D     if (_change == 1) goto L8A38
84D0 18     show(' User-installed driver subroutines\r\n')
84F6 2C     show('\n\n')
84F8 18     show(' See the Installation manual for details on coding and\r\n')
8532 18     show(' installing your custom printer busy test, printer output,\r\n')
8570 18     show(' and printer input routines.\r\n')
8590 18     show(' (The input routine is needed  only when a communications\r\n')
85CD 18     show(' protocol is in use.)\r\n')
85E6 0E     goto L97BD

        L85E9:
85E9 18     show(' Primary list device \r\n')
8602 2C     show('\n\n')
8604 0D     if (ivar[6] == 0) goto L97BD
860D 18     show('You have selected the list device with a protocol. You must\r\n')
864C 18     show('make special program modifications. See the installation\r\n')
8688 18     show('manual for details.\r\n')
869F 0E     goto L97BD

        L86A2:
86A2 18     show(' Secondary list device \r\n')
86BD 2C     show('\n\n')
86BF 18     show(' The secondary list device must be assigned to a physical')
86FA 18     show(' device. \r\n')
8707 2C     show('\n\n')
8709 25     if (!Correct()) goto L7FC3
870C 2C     show('\n\n')

        L870E:
870E 15     _patchLoc = 0x0774
8716 0C     _curInt = RdPatchByte(_patchLoc)
871D 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
871F 18     show(' Physical device is currently : ')
8741 15     ivar[13] = _curInt
8749 04     if (_Error != 0) call SBCA9
8752 0D     if (_curInt == 1) goto L8779
875B 0D     if (_curInt == 2) goto L8785
8764 0D     if (_curInt == 3) goto L8791
876D 18     show(' TTY \r\n')
8776 0E     goto L879A

        L8779:
8779 18     show(' CRT \r\n')
8782 0E     goto L879A

        L8785:
8785 18     show(' BAT \r\n')
878E 0E     goto L879A

        L8791:
8791 18     show(' UC1 \r\n')

        L879A:
879A 2C     show('\n\n')
879C 16     ***LIST***
            Select: <RETURN>
879C 16       show('\n Which of the four physical devices would you like to use as')
87DA 01       show('\n the secondary list device? (See your operating system manual,')
881A 01       show('\n or, if your system includes several devices, such as printers')
885A 01       show('\n and terminals, review the current set-up of the system.)')
8895 2C       show('\n\n')
8897 15       _change = ivar[13]
889F 14       break
            Select: 'A'
              show('\n A  TTY - console printer')
88BA 15       _change = 0
88C2 15       _patchStartLoc = 0x0774
88CA 17       Patch(_patchStartLoc, 1, _change)
88D2 14       break
            Select: 'B'
              show('\n B  CRT - CRT device')
88E8 15       _change = 1
88F0 15       _patchStartLoc = 0x0774
88F8 17       Patch(_patchStartLoc, 1, _change)
8900 14       break
            Select: 'C'
              show('\n C  BAT - batch mode')
8916 15       _change = 2
891E 15       _patchStartLoc = 0x0774
8926 17       Patch(_patchStartLoc, 1, _change)
892E 14       break
            Select: 'D'
              show('\n D  UC1 - user-defined console device')
8955 01       show('\n ')
8958 01       show('\n ')
895B 01       show('\n    Enter the letter of your choice (A/B/C/D),')
898B 01       show('\n    or press <RETURN> to leave unchanged. ')
89B7 15       _change = 3
89BF 15       _patchStartLoc = 0x0774
89C7 17       Patch(_patchStartLoc, 1, _change)
89CF 07       break
            ***END LIST***
89D0 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
89D2 18     show(' Physical device is now : ')
89EE 0D     if (_change == 0) goto L8A13
89F7 0D     if (_change == 1) goto L8A1D
8A00 0D     if (_change == 2) goto L8A27
8A09 18     show('UC1\r\n')
8A10 0E     goto L8A2E

        L8A13:
8A13 18     show('TTY\r\n')
8A1A 0E     goto L8A2E

        L8A1D:
8A1D 18     show('CRT\r\n')
8A24 0E     goto L8A2E

        L8A27:
8A27 18     show('BAT\r\n')

        L8A2E:
8A2E 2C     show('\n\n')
8A30 25     if (!Correct()) goto L870E
8A33 2C     show('\n\n')
8A35 0E     goto L97C4

        L8A38:
8A38 18     show(' Port Driver (direct I/O to 8-bit ports) \r\n')
8A65 2C     show('\n\n')
8A67 18     show(' Port Driver\r\n')
8A77 2C     show('\n\n')
8A79 18     show(' The port driver is normally used with serial printers and a\r\n')
8AB9 18     show(' protocol. Since hardware ports are very non-standard, you\r\n')
8AF7 18     show(' have to provide information to WordStar so that it can modify\r\n')
8B39 18     show(' the port driver and control the printer. Refer to your\r\n')
8B74 18     show(' computer manual for information about input and output ports.\r\n')
8BB6 2C     show('\n\n')
8BB8 25     if (!Correct()) goto L7FC3
8BBB 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
8BBD 18     show('     Output port information\r\n')
8BDD 18     show(' \r\n')
8BE2 18     show(' The port numbers must be input as a decimal number.\r\n')
8C1A 2B     inputMode = ASCII
8C1C 15     _patchStartLoc = 0x0733
8C24 0C     _curInt = RdPatchByte(_patchStartLoc)
8C2B 2C     show('\n\n')
8C2D 18     show('Your OUTPUT port number is currently ')
8C54 1A     showFmt(inputMode, _curInt)
8C57 18     show('.\r\n')
8C5C 2C     show('\n')
8C5E 18     show('    Enter "C" to change,\r\n')
8C7A 18     show('    or press <RETURN> to leave unchanged. ')
8CA6 16     ***LIST***
            Select: <RETURN>
8CA8 18       show('<RETURN>\r\n')
8CB4 15       _change = 0
8CBC 14       break
            Select: 'C'
8CBF 18       show('C\r\n')
8CC4 15       _change = 1
8CCC 07       break
            ***END LIST***
8CCD 0D     if (_change == 0) goto L8D09

        L8CD6:
8CD6 2C     show('\n\n')
8CD8 18     show('    What is the OUTPUT port number? ')
8CFE 21     _curInt = GetValue(HEX);
8D00 0D     if (_curInt == 0xFFFF) goto L8CD6

        L8D09:
8D09 2C     show('\n')
8D0B 18     show('Your OUTPUT port number is now ')
8D2C 1A     showFmt(inputMode, _curInt)
8D2F 18     show('.\r\n')
8D34 2C     show('\n')
8D36 25     if (!Correct()) goto L8CD6
8D39 17     Patch(_patchStartLoc, 1, _curInt)
8D41 15     _patchStartLoc = 0x0728
8D49 0C     _curInt = RdPatchByte(_patchStartLoc)
8D50 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
8D52 18     show('Your OUTPUT STATUS port number is currently ')
8D80 1A     showFmt(inputMode, _curInt)
8D83 18     show('.\r\n')
8D88 2C     show('\n')
8D8A 18     show('    Enter "C" to change,\r\n')
8DA6 18     show('    or press <RETURN> to leave unchanged. ')
8DD2 16     ***LIST***
            Select: <RETURN>
8DD4 18       show('<RETURN>\r\n')
8DE0 15       _change = 0
8DE8 14       break
            Select: 'C'
8DEB 18       show('C\r\n')
8DF0 15       _change = 1
8DF8 07       break
            ***END LIST***
8DF9 0D     if (_change == 0) goto L8E3C

        L8E02:
8E02 2C     show('\n\n')
8E04 18     show('    What is the OUTPUT STATUS port number? ')
8E31 21     _curInt = GetValue(HEX);
8E33 0D     if (_curInt == 0xFFFF) goto L8E02

        L8E3C:
8E3C 2C     show('\n')
8E3E 18     show('Your OUTPUT STATUS port number is now ')
8E66 1A     showFmt(inputMode, _curInt)
8E69 18     show('.\r\n')
8E6E 2C     show('\n')
8E70 25     if (!Correct()) goto L8E02
8E73 17     Patch(_patchStartLoc, 1, _curInt)
8E7B 2B     inputMode = DECIMAL
8E7D 15     _patchStartLoc = 0x072B
8E85 0C     _curInt = RdPatchByte(_patchStartLoc)
8E8C 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
8E8E 18     show('Which bits change at the OUTPUT STATUS port when the OUTPUT\r\n')
8ECD 18     show('port becomes ready to accept a character?  Use only a\r\n')
8F06 18     show('hexadecimal value.\r\n')
8F1C 2C     show('\n')
8F1E 18     show('Your current value is ')
8F36 1A     showFmt(inputMode, _curInt)
8F39 18     show('.\r\n')
8F3E 2C     show('\n')
8F40 18     show('    Enter "C" to change,\r\n')
8F5C 18     show('    or press <RETURN> to leave unchanged. ')
8F88 16     ***LIST***
            Select: <RETURN>
8F8A 18       show('<RETURN>\r\n')
8F96 15       _change = 0
8F9E 14       break
            Select: 'C'
8FA1 18       show('C\r\n')
8FA6 15       _change = 1
8FAE 07       break
            ***END LIST***
8FAF 0D     if (_change == 0) goto L8FE2

        L8FB8:
8FB8 2C     show('\n\n')
8FBA 18     show('    What is the new value? ')
8FD7 21     _curInt = GetValue(HEX);
8FD9 0D     if (_curInt == 0xFFFF) goto L8FB8

        L8FE2:
8FE2 2C     show('\n')
8FE4 18     show('This value is now ')
8FF8 1A     showFmt(inputMode, _curInt)
8FFB 18     show('.\r\n')
9000 2C     show('\n')
9002 25     if (!Correct()) goto L8FB8
9005 17     Patch(_patchStartLoc, 1, _curInt)
900D 15     _patchStartLoc = 0x072D
9015 0C     _curInt = RdPatchByte(_patchStartLoc)
901C 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
901E 18     show('Which bits change from off (0) to on (1) at the OUTPUT\r\n')
9058 18     show('STATUS port when the OUTPUT port becomes ready to accept\r\n')
9094 18     show('a character?  Use only a hexadecimal value.\r\n')
90C3 2C     show('\n')
90C5 18     show('Your current value is ')
90DD 1A     showFmt(inputMode, _curInt)
90E0 18     show('.\r\n')
90E5 2C     show('\n')
90E7 18     show('    Enter "C" to change,\r\n')
9103 18     show('    or press <RETURN> to leave unchanged. ')
912F 16     ***LIST***
            Select: <RETURN>
9131 18       show('<RETURN>\r\n')
913D 15       _change = 0
9145 14       break
            Select: 'C'
9148 18       show('C\r\n')
914D 15       _change = 1
9155 07       break
            ***END LIST***
9156 0D     if (_change == 0) goto L9189

        L915F:
915F 2C     show('\n\n')
9161 18     show('    What is the new value? ')
917E 21     _curInt = GetValue(HEX);
9180 0D     if (_curInt == 0xFFFF) goto L915F

        L9189:
9189 2C     show('\n')
918B 18     show('This value is now ')
919F 1A     showFmt(inputMode, _curInt)
91A2 18     show('.\r\n')
91A7 2C     show('\n')
91A9 25     if (!Correct()) goto L915F
91AC 17     Patch(_patchStartLoc, 1, _curInt)
91B4 15     _patchStartLoc = 0x0778
91BC 0C     _curInt = RdPatchByte(_patchStartLoc)
91C3 0D     if (_curInt == 0) goto L97C4
91CC 2B     inputMode = ASCII
91CE 15     _patchStartLoc = 0x0740
91D6 0C     _curInt = RdPatchByte(_patchStartLoc)
91DD 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
91DF 18     show('     Input port information\r\n')
91FE 18     show(' \r\n')
9203 18     show(' The port numbers must be input as a decimal number.\r\n')
923B 2C     show('\n\n')
923D 18     show('Your INPUT port number is currently ')
9263 1A     showFmt(inputMode, _curInt)
9266 18     show('.\r\n')
926B 2C     show('\n')
926D 18     show('    Enter "C" to change,\r\n')
9289 18     show('    or press <RETURN> to leave unchanged. ')
92B5 16     ***LIST***
            Select: <RETURN>
92B7 18       show('<RETURN>\r\n')
92C3 15       _change = 0
92CB 14       break
            Select: 'C'
92CE 18       show('C\r\n')
92D3 15       _change = 1
92DB 07       break
            ***END LIST***
92DC 0D     if (_change == 0) goto L9317

        L92E5:
92E5 2C     show('\n\n')
92E7 18     show('    What is the INPUT port number? ')
930C 21     _curInt = GetValue(HEX);
930E 0D     if (_curInt == 0xFFFF) goto L92E5

        L9317:
9317 2C     show('\n\n\n')
9319 18     show('Your INPUT port number is now ')
9339 1A     showFmt(inputMode, _curInt)
933C 18     show('.\r\n')
9341 2C     show('\n')
9343 25     if (!Correct()) goto L92E5
9346 17     Patch(_patchStartLoc, 1, _curInt)
934E 15     _patchStartLoc = 0x0737
9356 0C     _curInt = RdPatchByte(_patchStartLoc)
935D 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
935F 18     show('Your INPUT STATUS port number is currently ')
938C 1A     showFmt(inputMode, _curInt)
938F 18     show('.\r\n')
9394 2C     show('\n')
9396 18     show('    Enter "C" to change,\r\n')
93B2 18     show('    or press <RETURN> to leave unchanged. ')
93DE 16     ***LIST***
            Select: <RETURN>
93E0 18       show('<RETURN>\r\n')
93EC 15       _change = 0
93F4 14       break
            Select: 'C'
93F7 18       show('C\r\n')
93FC 15       _change = 1
9404 07       break
            ***END LIST***
9405 0D     if (_change == 0) goto L9447

        L940E:
940E 2C     show('\n\n')
9410 18     show('    What is the INPUT STATUS port number? ')
943C 21     _curInt = GetValue(HEX);
943E 0D     if (_curInt == 0xFFFF) goto L940E

        L9447:
9447 2C     show('\n')
9449 18     show('Your INPUT STATUS port number is now ')
9470 1A     showFmt(inputMode, _curInt)
9473 18     show('.\r\n')
9478 2C     show('\n')
947A 25     if (!Correct()) goto L940E
947D 17     Patch(_patchStartLoc, 1, _curInt)
9485 2B     inputMode = DECIMAL
9487 15     _patchStartLoc = 0x073A
948F 0C     _curInt = RdPatchByte(_patchStartLoc)
9496 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
9498 18     show('Which bits change at the INPUT STATUS port when the INPUT\r\n')
94D5 18     show('port becomes ready to accept a character?  Use only a\r\n')
950E 18     show('hexadecimal value.\r\n')
9524 2C     show('\n')
9526 18     show('Your current value is ')
953E 1A     showFmt(inputMode, _curInt)
9541 18     show('.\r\n')
9546 2C     show('\n')
9548 18     show('    Enter "C" to change,\r\n')
9564 18     show('    or press <RETURN> to leave unchanged. ')
9590 16     ***LIST***
            Select: <RETURN>
9592 18       show('<RETURN>\r\n')
959E 15       _change = 0
95A6 14       break
            Select: 'C'
95A9 18       show('C\r\n')
95AE 15       _change = 1
95B6 07       break
            ***END LIST***
95B7 0D     if (_change == 0) goto L95EA

        L95C0:
95C0 2C     show('\n\n')
95C2 18     show('    What is the new value? ')
95DF 21     _curInt = GetValue(HEX);
95E1 0D     if (_curInt == 0xFFFF) goto L95C0

        L95EA:
95EA 2C     show('\n')
95EC 18     show('This value is now ')
9600 1A     showFmt(inputMode, _curInt)
9603 18     show('.\r\n')
9608 2C     show('\n')
960A 25     if (!Correct()) goto L95C0
960D 17     Patch(_patchStartLoc, 1, _curInt)
9615 15     _patchStartLoc = 0x073C
961D 0C     _curInt = RdPatchByte(_patchStartLoc)
9624 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
9626 18     show('Which bits change from off (0) to on (1) at the INPUT\r\n')
965F 18     show('STATUS port when the INPUT port becomes ready to accept\r\n')
969A 18     show('a character?  Use only a hexadecimal value.\r\n')
96C9 2C     show('\n')
96CB 18     show('Your current value is ')
96E3 1A     showFmt(inputMode, _curInt)
96E6 18     show('.\r\n')
96EB 2C     show('\n')
96ED 18     show('    Enter "C" to change,\r\n')
9709 18     show('    or press <RETURN> to leave unchanged. ')
9735 16     ***LIST***
            Select: <RETURN>
9737 18       show('<RETURN>\r\n')
9743 15       _change = 0
974B 14       break
            Select: 'C'
974E 18       show('C\r\n')
9753 15       _change = 1
975B 07       break
            ***END LIST***
975C 0D     if (_change == 0) goto L978F

        L9765:
9765 2C     show('\n\n')
9767 18     show('    What is the new value? ')
9784 21     _curInt = GetValue(HEX);
9786 0D     if (_curInt == 0xFFFF) goto L9765

        L978F:
978F 2C     show('\n')
9791 18     show('This value is now ')
97A5 1A     showFmt(inputMode, _curInt)
97A8 18     show('.\r\n')
97AD 2C     show('\n')
97AF 25     if (!Correct()) goto L9765
97B2 17     Patch(_patchStartLoc, 1, _curInt)
97BA 0E     goto L97C4

        L97BD:
97BD 2C     show('\n\n')
97BF 25     if (!Correct()) goto L7FC3
97C2 2C     show('\n\n')

        L97C4:
97C4 1C     return 0

        S97C5:
97C5 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
97C7 18     show('     *****  MENU OF WORDSTAR FEATURES  *****\r\n')
97F7 18     show(' \r\n')
97FC 18     show('To modify a WordStar feature, select the appropriate letter,\r\n')
983C 18     show('choose the modification, then return to this menu to continue\r\n')
987D 18     show('or exit to the Installation Menu ("X").\r\n')
98A8 18     show(' \r\n')
98AD 18     show('A  Initial help level             K  Left margin\r\n')
98E1 18     show('B  Decimal point character        L  Right margin\r\n')
9916 18     show('C  Non-document mode              M  Number lines/page\r\n')
9950 18     show('D  Initial directory display      N  Page offset\r\n')
9984 18     show('E  Initial insertion toggle       O  Form feeds\r\n')
99B7 18     show('F  Justification toggle           P  Data field separator\r\n')
99F4 18     show('G  Hyphen help toggle             Q  Variable name symbol\r\n')
9A31 18     show('H  Omit-page-numbering toggle     R  Default disk drive\r\n')
9A6C 18     show('I  Top page margin\r\n')
9A82 18     show('J  Bottom page margin             X  Exit to INSTALLATION menu\r\n')
9AC4 18     show(' \r\n')
9AC9 18     show('   Enter the letter of your choice (A-R/X). ')

        L9AF7:
9AF7 16     ***LIST***
            Select: <RETURN>
9AF9 15       _menuAction = 2
9B01 14       break
            Select: 'A'
9B04 18       show('A\r\n')
9B09 03       call S9C7B
9B0C 15       _menuAction = 0
9B14 14       break
            Select: 'B'
9B17 18       show('B\r\n')
9B1C 03       call S9F11
9B1F 15       _menuAction = 0
9B27 14       break
            Select: 'C'
9B2A 18       show('C\r\n')
9B2F 03       call SA0E1
9B32 15       _menuAction = 0
9B3A 14       break
            Select: 'D'
9B3D 18       show('D\r\n')
9B42 03       call SA188
9B45 15       _menuAction = 0
9B4D 14       break
            Select: 'E'
9B50 18       show('E\r\n')
9B55 03       call SA236
9B58 15       _menuAction = 0
9B60 14       break
            Select: 'F'
9B63 18       show('F\r\n')
9B68 03       call SA304
9B6B 15       _menuAction = 0
9B73 14       break
            Select: 'G'
9B76 18       show('G\r\n')
9B7B 03       call SA3BB
9B7E 15       _menuAction = 0
9B86 14       break
            Select: 'H'
9B89 18       show('H\r\n')
9B8E 03       call SA56A
9B91 15       _menuAction = 0
9B99 14       break
            Select: 'I'
9B9C 18       show('I\r\n')
9BA1 03       call SA627
9BA4 15       _menuAction = 0
9BAC 14       break
            Select: 'J'
9BAF 18       show('J\r\n')
9BB4 03       call SA6E7
9BB7 15       _menuAction = 0
9BBF 14       break
            Select: 'K'
9BC2 18       show('K\r\n')
9BC7 03       call SA7AE
9BCA 15       _menuAction = 0
9BD2 14       break
            Select: 'L'
9BD5 18       show('L\r\n')
9BDA 03       call SA862
9BDD 15       _menuAction = 0
9BE5 14       break
            Select: 'M'
9BE8 18       show('M\r\n')
9BED 03       call SA916
9BF0 15       _menuAction = 0
9BF8 14       break
            Select: 'N'
9BFB 18       show('N\r\n')
9C00 03       call SA9F9
9C03 15       _menuAction = 0
9C0B 14       break
            Select: 'O'
9C0E 18       show('O\r\n')
9C13 03       call SABF6
9C16 15       _menuAction = 0
9C1E 14       break
            Select: 'P'
9C21 18       show('P\r\n')
9C26 03       call SACCB
9C29 15       _menuAction = 0
9C31 14       break
            Select: 'Q'
9C34 18       show('Q\r\n')
9C39 03       call SAD85
9C3C 15       _menuAction = 0
9C44 14       break
            Select: 'R'
9C47 18       show('R\r\n')
9C4C 03       call SAABE
9C4F 15       _menuAction = 0
9C57 14       break
            Select: 'X'
9C5A 18       show('X\r\n')
9C5F 15       _menuAction = 1
9C67 07       break
            ***END LIST***
9C68 0D     if (_menuAction == 0) goto L97C5
9C71 0D     if (_menuAction == 2) goto L9AF7
9C7A 1C     return 0

        S9C7B:
9C7B 15     _patchLoc = 0x034D
9C83 2B     inputMode = ASCII
9C85 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
9C87 18     show('               Initial help level\r\n')
9CAC 2C     show('\n')
9CAE 18     show('You can set the level of onscreen help to provide more or\r\n')
9CEB 18     show('less information as you need it. The help level is ')
9D20 18     show('currently ')
9D2C 0C     _curInt = RdPatchByte(_patchLoc)
9D33 04     if (_Error != 0) call SBCA9
9D3C 1A     showFmt(inputMode, _curInt)
9D3F 18     show('.\r\n')
9D44 16     ***LIST***
            Select: <RETURN>
9D44 16       show('\n ')
9D47 14       break
            Select: 'A'
              show('\nA  Help level 3')
9D58 01       show('\n   All menus and explanations displayed')
9D81 01       show('\n ')
9D84 15       _curInt = 3
9D8C 17       Patch(_patchLoc, 1, _curInt)
9D94 14       break
            Select: 'B'
              show('\nB  Help level 2')
9DA5 01       show('\n   Main editing menu (1-key commands) suppressed')
9DD7 01       show('\n ')
9DDA 15       _curInt = 2
9DE2 17       Patch(_patchLoc, 1, _curInt)
9DEA 14       break
            Select: 'C'
              show('\nC  Help level 1')
9DFB 01       show('\n   Prefix menus (2-key commands) also suppressed')
9E2D 01       show('\n ')
9E30 15       _curInt = 1
9E38 17       Patch(_patchLoc, 1, _curInt)
9E40 14       break
            Select: 'D'
              show('\nD  Help level 0')
9E51 01       show('\n   Command explanations also suppressed')
9E7A 01       show('\n ')
9E7D 01       show('\n ')
9E80 01       show('\n    Enter the letter of your choice (A/B/C/D),')
9EB0 01       show('\n    or press <RETURN> to leave unchanged. ')
9EDC 15       _curInt = 0
9EE4 17       Patch(_patchLoc, 1, _curInt)
9EEC 07       break
            ***END LIST***
9EED 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
9EEF 18     show('Help level is now ')
9F03 1A     showFmt(inputMode, _curInt)
9F06 18     show('.\r\n')
9F0B 2C     show('\n\n')
9F0D 25     if (!Correct()) goto L9C7B
9F10 1C     return 0

        S9F11:
9F11 15     _patchLoc = 0x037A
9F19 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
9F1B 18     show('           Decimal point character\r\n')
9F41 2C     show('\n\n')
9F43 0C     _curInt = RdPatchByte(_patchLoc)
9F4A 04     if (_Error != 0) call SBCA9
9F53 18     show('Currently a ')
9F61 0D     if (_curInt == 0x2E) goto L9F79
9F6A 18     show('comma (,) ')
9F76 0E     goto L9F86

        L9F79:
9F79 18     show('period (.) ')

        L9F86:
9F86 18     show('is used as the decimal point\r\n')
9FA6 18     show('character. For European notation, use a comma (,).\r\n')
9FDC 2C     show('\n\n')
9FDE 18     show('    Enter "C" to change to a ')
9FFD 0D     if (_curInt == 0x2E) goto LA018
A006 18     show('period (.),\r\n')
A015 0E     goto LA026

        LA018:
A018 18     show('comma (,),\r\n')

        LA026:
A026 18     show('    or press <RETURN> to leave unchanged. ')
A052 16     ***LIST***
            Select: <RETURN>
A054 18       show('<RETURN>\r\n')
A060 14       break
            Select: 'C'
A063 18       show('C\r\n')
A068 0D       if (_curInt == 0x2E) goto LA07C
A071 15       _curInt = 0x2E
A079 0E       goto LA084

        LA07C:
A07C 15       _curInt = 0x2C

        LA084:
A084 17       Patch(_patchLoc, 1, _curInt)
A08C 07       break
            ***END LIST***
A08D 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
A08F 18     show('Decimal point character is now a ')
A0B2 0D     if (_curInt == 0x2E) goto LA0CC
A0BB 18     show('comma (,).\r\n')
A0C9 0E     goto LA0DB

        LA0CC:
A0CC 18     show('period (.).\r\n')

        LA0DB:
A0DB 2C     show('\n\n')
A0DD 25     if (!Correct()) goto L9F11
A0E0 1C     return 0

        SA0E1:
A0E1 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
A0E3 18     show('                Non-document mode\r\n')
A108 2C     show('\n\n')
A10A 18     show('Set WordStar to begin in non-document mode ("N") rather than\r\n')
A14A 18     show('document mode ("D").\r\n')

        LA162:
A162 15     _patchLoc = 0x0378
A16A 2C     show('\n\n')
A16C 1E     svar[10] = 'Non-document mode'
A181 03     call SAE5C
A184 25     if (!Correct()) goto LA162
A187 1C     return 0

        SA188:
A188 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
A18A 18     show('      Initial Opening Menu directory display\r\n')
A1BA 2C     show('\n\n')
A1BC 18     show('Displays the directory of the logged disk drive at the\r\n')
A1F6 18     show('WordStar Opening Menu.\r\n')

        LA210:
A210 15     _patchLoc = 0x0350
A218 2C     show('\n\n')
A21A 1E     svar[10] = 'Directory display'
A22F 03     call SAE5C
A232 25     if (!Correct()) goto LA210
A235 1C     return 0

        SA236:
A236 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
A238 18     show('              Initial insertion toggle\r\n')
A262 2C     show('\n\n')
A264 18     show('This sets WordStar to start with insertion on, meaning that\r\n')
A2A3 18     show('previously typed text will be moved right for new characters.\r\n')

        LA2E4:
A2E4 15     _patchLoc = 0x034F
A2EC 2C     show('\n\n')
A2EE 1E     svar[10] = 'Insert mode'
A2FD 03     call SAE5C
A300 25     if (!Correct()) goto LA2E4
A303 1C     return 0

        SA304:
A304 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
A306 18     show('                 Justification toggle\r\n')
A32F 2C     show('\n\n')
A331 18     show('This sets WordStar to start with justification on. Your text\r\n')
A371 18     show('will be right justified as you type.\r\n')

        LA399:
A399 15     _patchLoc = 0x036D + 1
A3A1 2C     show('\n\n')
A3A3 1E     svar[10] = 'Justification'
A3B4 03     call SAE5C
A3B7 25     if (!Correct()) goto LA399
A3BA 1C     return 0

        SA3BB:
A3BB 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
A3BD 18     show('                 Hyphen help toggle\r\n')
A3E4 2C     show('\n\n')
A3E6 18     show('This sets WordStar to start with hyphen help on. As you\r\n')
A421 18     show('re-form a paragraph, WordStar will automatically stop at\r\n')
A45D 18     show('an appropriate point and you can choose whether to ')
A492 18     show('hyphenate.\r\n')

        LA4A0:
A4A0 15     _patchLoc = 0x036D + 4
A4A8 2C     show('\n\n')
A4AA 1E     svar[10] = 'Hyphen help'
A4B9 03     call SAE5C
A4BC 25     if (!Correct()) goto LA4A0
A4BF 1C     return 0
A4C0 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
A4C2 18     show('           Hyphenization word length\r\n')
A4EA 2C     show('\n\n')
A4EC 18     show('You can adjust the minimum number of letters in a word\r\n')
A526 18     show('to be hyphenated.\r\n')
A53B 2B     inputMode = ASCII
A53D 15     _patchStartLoc = 0x03C9
A545 2C     show('\n\n')
A547 1E     svar[10] = 'Hyphenization word length'
A564 03     call SAFA7
A567 2C     show('\n\n')
A569 1C     return 0

        SA56A:
A56A 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
A56C 18     show('            Omit-page-numbering toggle\r\n')
A596 2C     show('\n\n')
A598 18     show('This sets WordStar to start with page numbering off; pages\r\n')
A5D6 18     show('will be printed without page numbers.\r\n')

        LA5FF:
A5FF 15     _patchLoc = 0x03FD
A607 2C     show('\n\n')
A609 1E     svar[10] = 'Omit-page-numbering'
A620 03     call SAE5C
A623 25     if (!Correct()) goto LA5FF
A626 1C     return 0

        SA627:
A627 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
A629 18     show('                 Top page margin\r\n')
A64D 2C     show('\n\n')
A64F 18     show('You can adjust the number of lines left blank at the top\r\n')
A68B 18     show('of the printed page.\r\n')
A6A3 2B     inputMode = ASCII
A6A5 15     _patchStartLoc = 0x0351 + 5
A6AD 2C     show('\n\n')
A6AF 1E     svar[10] = 'Top page margin'
A6C2 03     call SAFA7
A6C5 2C     show('\n\n')
A6C7 0C     _curInt = RdPatchByte(_patchStartLoc)
A6CE 15     _curInt = _curInt * 8
A6D6 15     _patchStartLoc = _patchStartLoc + 1
A6DE 17     Patch(_patchStartLoc, 2, _curInt)
A6E6 1C     return 0

        SA6E7:
A6E7 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
A6E9 18     show('               Bottom page margin\r\n')
A70E 2C     show('\n\n')
A710 18     show('You can adjust the number of lines left blank at the\r\n')
A748 18     show('bottom of the printed page.\r\n')
A767 2B     inputMode = ASCII
A769 15     _patchStartLoc = 0x0351 + 0xD
A771 2C     show('\n\n')
A773 1E     svar[10] = 'Bottom page margin'
A789 03     call SAFA7
A78C 2C     show('\n\n')
A78E 0C     _curInt = RdPatchByte(_patchStartLoc)
A795 15     _curInt = _curInt * 8
A79D 15     _patchStartLoc = _patchStartLoc + 1
A7A5 17     Patch(_patchStartLoc, 2, _curInt)
A7AD 1C     return 0

        SA7AE:
A7AE 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
A7B0 18     show('                   Left margin\r\n')
A7D2 2C     show('\n\n')
A7D4 18     show('You can specify the column number where the first character\r\n')
A813 18     show('on the line should appear.\r\n')
A831 2B     inputMode = ASCII
A833 15     _patchStartLoc = 0x036A
A83B 2C     show('\n\n')
A83D 1E     svar[10] = 'Left margin'
A84C 15     ivar[19] = 0xFFFF
A854 15     ivar[22] = 1
A85C 03     call SAFA7
A85F 2C     show('\n\n')
A861 1C     return 0

        SA862:
A862 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
A864 18     show('                  Right margin\r\n')
A886 2C     show('\n\n')
A888 18     show('You can specify the column number where the last character\r\n')
A8C6 18     show('on the line should appear.\r\n')
A8E4 2B     inputMode = ASCII
A8E6 15     _patchStartLoc = 0x036B
A8EE 2C     show('\n\n')
A8F0 1E     svar[10] = 'Right margin'
A900 15     ivar[19] = 0xFFFF
A908 15     ivar[22] = 1
A910 03     call SAFA7
A913 2C     show('\n\n')
A915 1C     return 0

        SA916:
A916 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
A918 18     show('                Number lines/page\r\n')
A93D 2C     show('\n\n')
A93F 18     show('You can adjust the number of lines allowed per printed page\r\n')
A97E 18     show('to fit the paper you are using. 11" = 66 lines\r\n')
A9B0 2B     inputMode = ASCII
A9B2 15     _patchStartLoc = 0x0351 + 1
A9BA 2C     show('\n\n')
A9BC 1E     svar[10] = 'Number of lines/page'
A9D4 03     call SAFA7
A9D7 2C     show('\n\n')
A9D9 0C     _curInt = RdPatchByte(_patchStartLoc)
A9E0 15     _curInt = _curInt * 8
A9E8 15     _patchStartLoc = _patchStartLoc + 1
A9F0 17     Patch(_patchStartLoc, 2, _curInt)
A9F8 1C     return 0

        SA9F9:
A9F9 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
A9FB 18     show('                    Page offset\r\n')
AA1E 2C     show('\n\n')
AA20 18     show('You can adjust the number of columns left blank (in addition\r\n')
AA60 18     show('to the left margin) at the left side of the printed page.\r\n')
AA9D 2B     inputMode = ASCII
AA9F 15     _patchStartLoc = 0x0351 + 0x18
AAA7 2C     show('\n\n')
AAA9 1E     svar[10] = 'Page offset'
AAB8 03     call SAFA7
AABB 2C     show('\n\n')
AABD 1C     return 0

        SAABE:
AABE 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
AAC0 18     show('                    System disk drive\r\n')
AAE9 2C     show('\n\n')
AAEB 18     show('You can store your message (WSMSGS.OVR) and overlay (.OVR)\r\n')
AB29 18     show('files on any disk drive.  WordStar must know where to find\r\n')
AB67 18     show('these files.\r\n')
AB77 18     show('\r\n')
AB7B 18     show('Using a number, enter the appropriate disk drive, where\r\n')
ABB6 18     show('A is 1, B is 2, etc.\r\n')
ABCE 2B     inputMode = ASCII
ABD0 15     _patchStartLoc = 0x02B9
ABD8 2C     show('\n\n')
ABDA 1E     svar[10] = 'System disk drive '
ABF0 03     call SAFA7
ABF3 2C     show('\n\n')
ABF5 1C     return 0

        SABF6:
ABF6 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
ABF8 18     show('                  Form feeds toggle\r\n')
AC1F 2C     show('\n\n')
AC21 18     show('You can elect to send a form-feed character, instead of\r\n')
AC5C 18     show('multiple line feeds, before the first page and between\r\n')
AC96 18     show('other pages.\r\n')

        LACA6:
ACA6 15     _patchLoc = 0x03F8 + 1
ACAE 2C     show('\n\n')
ACB0 1E     svar[10] = 'Form feed toggle'
ACC4 03     call SAE5C
ACC7 25     if (!Correct()) goto LACA6
ACCA 1C     return 0

        SACCB:
ACCB 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
ACCD 18     show('              Data field separator\r\n')
ACF3 2C     show('\n\n')
ACF5 18     show('MailMerge recognizes the defined character as the one used\r\n')
AD33 18     show('to separate data fields in a datafile.\r\n')
AD5D 15     _patchStartLoc = 0x0389
AD65 2C     show('\n\n')
AD67 1E     svar[10] = 'Data field separator'
AD7F 03     call SB149
AD82 2C     show('\n\n')
AD84 1C     return 0

        SAD85:
AD85 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
AD87 18     show('               Variable name symbol\r\n')
ADAE 2C     show('\n\n')
ADB0 18     show('MailMerge requires that a specific character be used before\r\n')
ADEF 18     show('and after variable names inserted in text.\r\n')
AE1D 15     _patchStartLoc = 0x038E
AE25 2C     show('\n\n')
AE27 1E     svar[10] = 'Variable name symbol'
AE3F 03     call SB149
AE42 2C     show('\n\n')
AE44 0C     _curInt = RdPatchByte(_patchStartLoc)
AE4B 15     _patchStartLoc = 0x038F
AE53 17     Patch(_patchStartLoc, 1, _curInt)
AE5B 1C     return 0

        SAE5C:
AE5C 0C     _curInt = RdPatchByte(_patchLoc)
AE63 04     if (_Error != 0) call SBCA9
AE6C 2C     show('\n\n')
AE6E 19     show(svar[10])
AE70 18     show(' feature is currently ')
AE88 0D     if (_curInt == 0) goto LAEC8
AE91 18     show('ON.\r\n')
AE98 2C     show('\n\n')
AE9A 18     show('    Enter "C" to change to OFF,\r\n')
AEBD 15     _change = 1
AEC5 0E     goto LAEFC

        LAEC8:
AEC8 18     show('OFF.\r\n')
AED0 2C     show('\n\n')
AED2 18     show('    Enter "C" to change to ON,\r\n')
AEF4 15     _change = 0

        LAEFC:
AEFC 18     show('    or press <RETURN> to leave unchanged. ')
AF28 16     ***LIST***
            Select: <RETURN>
AF2A 18       show('<RETURN>\r\n')
AF36 14       break
            Select: 'C'
AF39 18       show('C\r\n')
AF3E 0D       if (_change == 1) goto LAF5A
AF47 15       _change = 1
AF4F 15       _curInt = 0xFF
AF57 0E       goto LAF6A

        LAF5A:
AF5A 15       _change = 0
AF62 15       _curInt = 0

        LAF6A:
AF6A 07       break
            ***END LIST***
AF6B 17     Patch(_patchLoc, 1, _curInt)
AF73 2C     show('\n\n')
AF75 19     show(svar[10])
AF77 18     show(' feature is now ')
AF89 0D     if (_change == 0) goto LAF9C
AF92 18     show('ON.\r\n')
AF99 0E     goto LAFA4

        LAF9C:
AF9C 18     show('OFF.\r\n')

        LAFA4:
AFA4 2C     show('\n\n')
AFA6 1C     return 0

        SAFA7:
AFA7 15     _patchLoc = _patchStartLoc
AFAF 0C     _curInt = RdPatchByte(_patchLoc)
AFB6 04     if (_Error != 0) call SBCA9
AFBF 15     _curInt = _curInt - ivar[19]
AFC7 2C     show('\n\n')
AFC9 19     show(svar[10])
AFCB 18     show(' value is currently ')
AFE1 1A     showFmt(inputMode, _curInt)
AFE4 18     show('.\r\n')
AFE9 2C     show('\n\n\n')
AFEB 18     show('    Enter "C" to change,\r\n')
B007 18     show('    or press <RETURN> to leave unchanged. ')
B033 16     ***LIST***
            Select: <RETURN>
B035 15       _change = 0
B03D 18       show('<RETURN>\r\n')
B049 14       break
            Select: 'c'
B04C 15       _change = 1
B054 18       show('C\r\n')
B059 07       break
            ***END LIST***
B05A 0D     if (_change == 1) goto LB0A7
B063 15     _patchLoc = _patchStartLoc
B06B 0C     _curInt = RdPatchByte(_patchLoc)
B072 04     if (_Error != 0) call SBCA9
B07B 2C     show('\n\n')
B07D 19     show(svar[10])
B07F 18     show(' value is now ')
B08F 15     _curInt = _curInt - ivar[19]
B097 1A     showFmt(inputMode, _curInt)
B09A 18     show('.\r\n')
B09F 2C     show('\n\n\n')
B0A1 25     if (!Correct()) goto LB0A7
B0A4 0E     goto LB138

        LB0A7:
B0A7 2C     show('\n\n')
B0A9 18     show('    Enter new value : ')
B0C1 21     ivar[0] = GetValue(HEX);
B0C3 0D     if (ivar[0] == 0xFFFF) goto LB0A7
B0CC 0D     if (ivar[0] >= ivar[22]) goto LB107
B0D5 2C     show('\n\n')
B0D7 18     show(' *** INVALID *** Please re-enter value.\r\n')
B102 2C     show('\n\n')
B104 0E     goto LB0A7

        LB107:
B107 15     _curInt = ivar[0] + ivar[19]
B10F 17     Patch(_patchLoc, 1, _curInt)
B117 2C     show('\n\n')
B119 19     show(svar[10])
B11B 18     show(' value is now ')
B12B 1A     showFmt(inputMode, ivar[0])
B12E 18     show('.\r\n')
B133 2C     show('\n\n\n')
B135 25     if (!Correct()) goto LB0A7

        LB138:
B138 15     ivar[19] = 0
B140 15     ivar[22] = 0
B148 1C     return 0

        SB149:
B149 2B     inputMode =
B14B 15     _patchLoc = _patchStartLoc
B153 0C     _curInt = RdPatchByte(_patchLoc)
B15A 04     if (_Error != 0) call SBCA9
B163 15     _curInt = _curInt - ivar[19]
B16B 2C     show('\n\n')
B16D 19     show(svar[10])
B16F 18     show(' value is currently ')
B185 18     show('(')
B188 1A     showFmt(inputMode, _curInt)
B18B 18     show(')')
B18E 2C     show('\n\n\n')
B190 18     show('    Enter "C" to change,\r\n')
B1AC 18     show('    or press <RETURN> to leave unchanged. ')
B1D8 16     ***LIST***
            Select: <RETURN>
B1DA 15       _change = 0
B1E2 18       show('<RETURN>\r\n')
B1EE 14       break
            Select: 'c'
B1F1 15       _change = 1
B1F9 18       show('C\r\n')
B1FE 07       break
            ***END LIST***
B1FF 0D     if (_change == 1) goto LB24D
B208 15     _patchLoc = _patchStartLoc
B210 0C     _curInt = RdPatchByte(_patchLoc)
B217 04     if (_Error != 0) call SBCA9
B220 2C     show('\n\n')
B222 19     show(svar[10])
B224 18     show(' value is now ')
B234 15     _curInt = _curInt - ivar[19]
B23C 18     show('(')
B23F 1A     showFmt(inputMode, _curInt)
B242 18     show(')')
B245 2C     show('\n\n\n')
B247 25     if (!Correct()) goto LB24D
B24A 0E     goto LB2C3

        LB24D:
B24D 2C     show('\n\n')
B24F 18     show('    Enter the character of your choice, then press <RETURN> : ')
B28F 2D     inputMode = ASCII; ivar[0] = GetRawAscii(1)
B291 15     _curInt = ivar[0] + ivar[19]
B299 17     Patch(_patchLoc, 1, _curInt)
B2A1 2C     show('\n\n')
B2A3 19     show(svar[10])
B2A5 18     show(' value is now ')
B2B5 18     show('(')
B2B8 1A     showFmt(inputMode, ivar[0])
B2BB 18     show(')')
B2BE 2C     show('\n\n\n')
B2C0 25     if (!Correct()) goto LB24D

        LB2C3:
B2C3 15     ivar[19] = 0
B2CB 2B     inputMode = DECIMAL
B2CD 1C     return 0

        SB2CE:
B2CE 15     _patchStartLoc = 0x02B8
B2D6 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
B2D8 18     show('Is this to be installed on an MP/M system?\r\n')
B306 2C     show('\n\n')
B308 0C     _curInt = RdPatchByte(_patchStartLoc)
B30F 04     if (_Error != 0) call SBCA9
B318 0D     if (_curInt != 0) goto LB368
B321 18     show('Currently ... NO (it is not)\r\n')
B341 2C     show('\n\n')
B343 18     show('   Enter "C" to change to YES,\r\n')
B365 0E     goto LB3A8

        LB368:
B368 18     show('Currently ... YES (it is)\r\n')
B385 2C     show('\n\n')
B387 18     show('   Enter "C" to change to NO,\r\n')

        LB3A8:
B3A8 18     show('   or press <RETURN> to leave unchanged. ')
B3D3 16     ***LIST***
            Select: <RETURN>
B3D5 18       show('<RETURN>\r\n')
B3E1 15       _change = 0
B3E9 14       break
            Select: 'C'
B3EC 18       show('C\r\n')
B3F1 15       _change = 1
B3F9 0D       if (_curInt != 0) goto LB40D
B402 15       _curInt = 0xFF
B40A 0E       goto LB415

        LB40D:
B40D 15       _curInt = 0

        LB415:
B415 17       Patch(_patchStartLoc, 1, _curInt)
B41D 07       break
            ***END LIST***
B41E 2C     show('\n\n')
B420 0D     if (_curInt == 0) goto LB443
B429 18     show('Now ... YES (it is)\r\n')
B440 0E     goto LB45D

        LB443:
B443 18     show('Now ... NO (it is not)\r\n')

        LB45D:
B45D 2C     show('\n\n')
B45F 25     if (!Correct()) goto LB2CE
B462 1C     return 0

        SB463:
B463 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
B465 18     show('                 Custom Modification routine.\r\n')
B496 18     show(' \r\n')
B49B 18     show('This routine allows you to modify bytes within the WORDSTAR\r\n')
B4DA 18     show('"user" area. For a description of the contents of the "user"\r\n')
B51A 18     show('area consult your WORDSTAR Installation manual.\r\n')
B54D 18     show(' \r\n')
B552 03     call SB576
B555 16     ***LIST***
            Select: <RETURN>
B557 18       show('<RETURN>\r\n')
B563 03       call SB5D4
B566 2C       show('\n')
B568 03       call SB576
B56B 1B       return 1
B56C 14       break
            Select: 'X'
B56F 18       show('X\r\n')
B574 07       break
            ***END LIST***
B575 1C     return 0

        SB576:
B576 18     show(' \r\n')
B57B 18     show('    Enter "X" to exit the modification routine,\r\n')
B5AE 18     show('    or press <RETURN> to continue. ')
B5D3 1C     return 0

        SB5D4:
B5D4 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
B5D6 18     show('The address may be input either as a hexadecimal number ')
B610 18     show('(with an\r\n')
B61C 18     show('  optional "h" appended) or as a WORDSTAR symbol.\r\n')
B651 18     show(' \r\n')
B656 18     show('A WORDSTAR symbol may be specified by preceding your ')
B68D 18     show('input with\r\n')
B69B 18     show('  a ":" (eg. :HITE). This may optionally be followed by a "+"\r\n')
B6DC 18     show('  and a number (eg. :HITE+2).\r\n')
B6FD 18     show(' \r\n')
B702 18     show('    Enter starting address : ')
B721 2B     inputMode = DECIMAL
B723 2A     _patchStartLoc = GetValue(ASCII)
B727 2B     inputMode = DECIMAL
B729 2C     show('\n')
B72B 0D     if (_patchStartLoc < _startPatchArea) goto LB740
B734 0D     if (_patchStartLoc > _endPatchArea) goto LB740
B73D 0E     goto LB7F9

        LB740:
B740 18     show('*** INVALID *** Address not in user-patchable area.\r\n')
B777 18     show('                Beginning of user-patchable area : ')
B7AC 1A     showFmt(inputMode, _startPatchArea)
B7AF 18     show('.\r\n')
B7B4 18     show('                End of user-patchable area       : ')
B7E9 1A     showFmt(inputMode, _endPatchArea)
B7EC 18     show('.\r\n')
B7F1 18     show(' \r\n')
B7F6 0E     goto LBC95

        LB7F9:
B7F9 15     ivar[12] = _endPatchArea - 0xE
B801 0D     if (_patchStartLoc < ivar[12]) goto LB81D
B80A 15     ivar[0] = _endPatchArea - _patchStartLoc
B812 15     _change = ivar[0] + 1
B81A 0E     goto LB82D

        LB81D:
B81D 15     ivar[0] = 0xF
B825 15     _change = 0x10

        LB82D:
B82D 2C     show('\n')
B82F 1A     showFmt(inputMode, _patchStartLoc)
B832 18     show(' ')
B835 18     show('and the next ')
B844 1A     showFmt(DECIMAL, ivar[0])
B847 18     show(' characters\r\n')
B856 15     _patchLen = _change
B85E 15     _patchLoc = _patchStartLoc - 1

        LB866:
B866 15     _patchLoc = _patchLoc + 1
B86E 0C     _curInt = RdPatchByte(_patchLoc)
B875 04     if (_Error != 0) call SBCA9
B87E 1A     showFmt(inputMode, _curInt)
B881 18     show(' ')
B884 15     _patchLen = _patchLen - 1
B88C 0D     if (_patchLen > 0) goto LB866
B895 2C     show('\n\n\n')
B897 18     show('    Is this the address you require (Y/N)? ')
B8C4 16     ***LIST***
            Select: <RETURN>
B8C6 1B       return 1
B8C7 14       break
            Select: 'Y'
B8CA 18       show('Y\r\n')
B8CF 15       _change = 1
B8D7 14       break
            Select: 'N'
B8DA 18       show('N\r\n')
B8DF 15       _change = 0
B8E7 07       break
            ***END LIST***
B8E8 0D     if (_change == 0) goto LBC95
B8F1 2C     show('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
B8F3 18     show('You can enter a value in ASCII, decimal, or hexadecimal\r\n')
B92E 18     show('codes. Precede each entry with these prefixes:\r\n')
B960 2C     show('\n')
B962 18     show('ASCII         :    (:^A enters ASCII ^A, a single value)\r\n')
B99E 18     show('Hexadecimal   ,    (,41 enters hexadecimal 41)\r\n')
B9D0 18     show('Decimal       #    (#61 enters decimal 61)\r\n')
B9FE 2C     show('\n')
BA00 18     show('To enter a sequence of characters, enter each one separately,\r\n')
BA41 18     show('followed by <RETURN>.\r\n')
BA5A 2C     show('\n')
BA5C 18     show('Press <RETURN> to leave a value unchanged.\r\n')
BA8A 18     show('Enter a period (.) and press <RETURN> to terminate a sequence\r\n')
BACB 18     show('    and to eliminate all subsequent values.\r\n')
BAFA 2C     show('\n')
BAFC 18     show('These special characters require hexadecimal input:\r\n')
BB33 18     show('<RETURN> (^M)            ,0D\r\n')
BB53 18     show('Period (.)               ,2E\r\n')
BB73 18     show('^H (backspace: ^H)       ,08\r\n')
BB93 2C     show('\n')
BB95 18     show('address   current         new\r\n')
BBB6 18     show('          value           value\r\n')
BBD9 18     show('...............................\r\n')
BBFC 2C     show('\n')
BBFE 15     _patchLoc = _patchStartLoc - 1
BC06 2B     inputMode = DECIMAL

        LBC08:
BC08 15     _patchLoc = _patchLoc + 1
BC10 0C     _curInt = RdPatchByte(_patchLoc)
BC17 04     if (_Error != 0) call SBCA9
BC20 1A     showFmt(HEX, _patchLoc)
BC23 18     show('       ')
BC2C 0D     if (_curInt > 0xF) goto LBC38
BC35 18     show('0')

        LBC38:
BC38 1A     showFmt(HEX, _curInt)
BC3B 18     show('           ')
BC48 21     ivar[0] = GetValue(HEX);
BC4A 0D     if (ivar[0] != 0xFFFF) goto LBC79
BC53 0D     if (_curInt > 0xF) goto LBC5F
BC5C 18     show('0')

        LBC5F:
BC5F 1A     showFmt(HEX, _curInt)
BC62 18     show(' ... (unchanged)\r\n')
BC76 0E     goto LBC08

        LBC79:
BC79 15     _curInt = ivar[0]
BC81 0D     if (_curInt == 0x0101) goto LBC95
BC8A 17     Patch(_patchLoc, 1, _curInt)
BC92 0E     goto LBC08

        LBC95:
BC95 2B     inputMode = DECIMAL
BC97 1C     return 0
BC98 0C     _curInt = RdPatchByte(_patchLoc)
BC9F 04     if (_Error != 0) call SBCA9
BCA8 1C     return 0

        SBCA9:
BCA9 18     show(' \r\n')
BCAE 18     show('There was an error ')
BCC3 0D     if (_OpenError != 1) goto LBCDF
BCCC 18     show('opening a file.\r\n')

        LBCDF:
BCDF 0D     if (_ReadError != 1) goto LBD02
BCE8 18     show('reading the disk file.\r\n')

        LBD02:
BD02 0D     if (_NameError != 1) goto LBD36
BD0B 18     show('because a bad file name was being used.\r\n')

        LBD36:
BD36 0D     if (_CreateError != 1) goto LBD5F
BD3F 18     show('trying to create a new file.\r\n')

        LBD5F:
BD5F 0D     if (_DiskFull != 1) goto LBD97
BD68 18     show('the disk is full. Please delete some files.\r\n')

        LBD97:
BD97 0D     if (_SelectionDone != 1) goto LBDB7
BDA0 18     show('selecting the data.\r\n')

        LBDB7:
BDB7 0D     if (_WriteError != 1) goto LBDDC
BDC0 18     show('while writing to the file.')

        LBDDC:
BDDC 05     exit()
BDDD 1C     return 0

DATA
BDDE Patch info for 'ADDS Regent 20/25'
     BDDE Patch(0x018A, 34, '        ADDS Regent 20/25         ') -- IDTEX[0]
     BDEF Ignore [00]
     BDF0 Patch(0x0232, 1, [18]) -- HITE
     BDF1 Patch(0x0233, 1, [50]) -- WID
     BDF2 Patch(0x0275, 1, [00]) -- TRMINI[0]
     BDF3 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     BDF4 Ignore [00]
     BDF5 Patch(0x028E, 1, [0A]) -- DELCUS
     BDF6 Patch(0x028F, 1, [05]) -- DELMIS
     BDF7 Ignore [00]
     BDF8 Patch(0x0234, 3, [02 1B 59]) -- CLEAD1[0]
     BDFB Patch(0x023D, 1, [00]) -- CLEAD2[0]
     BDFC Patch(0x0242, 1, [00]) -- CTRAIL[0]
     BDFD Patch(0x0247, 1, [00]) -- CB4LFG
     BDFE Patch(0x0248, 1, [20]) -- LINOFF
     BDFF Patch(0x0249, 1, [20]) -- COLOFF
     BE00 Patch(0x024A, 1, [00]) -- ASCUR
     BE01 Patch(0x0250, 3, [02 1B 4B]) -- ERAEOL[0]
     BE04 Patch(0x0257, 1, [00]) -- LINDEL[0]
     BE05 Patch(0x025E, 1, [00]) -- LININS[0]
     BE06 Patch(0x0267, 1, [00]) -- IVON[0]
     BE07 Patch(0x026E, 1, [00]) -- IVOFF[0]
     BE08 Patch(0x028D, 1, [00]) -- USELST
     BE09 Patch(0x0290, 1, [00]) -- MEMAPV
     BE0A Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     BE0C Patch(0x0293, 1, [00]) -- HIBIV
     BE0D Patch(0x0294, 1, [00]) -- HIBCUR
     BE0E Patch(0x0295, 1, [00]) -- CRBLIV
     BE0F Msg ''
     BE10 Msg ''
     BE11 Msg ''
     BE12 Msg ''
     BE13 Msg ''
     BE14 Msg ''
     BE15 Msg ''

BE17 Patch info for 'ADDS Regent 40/60'
     BE17 Patch(0x018A, 34, '        ADDS Regent 40/60         ') -- IDTEX[0]
     BE28 Ignore [00]
     BE29 Patch(0x0232, 1, [18]) -- HITE
     BE2A Patch(0x0233, 1, [50]) -- WID
     BE2B Patch(0x0275, 1, [00]) -- TRMINI[0]
     BE2C Patch(0x027E, 1, [00]) -- TRMUNI[0]
     BE2D Ignore [00]
     BE2E Patch(0x028E, 1, [0A]) -- DELCUS
     BE2F Patch(0x028F, 1, [05]) -- DELMIS
     BE30 Ignore [00]
     BE31 Patch(0x0234, 3, [02 1B 59]) -- CLEAD1[0]
     BE34 Patch(0x023D, 1, [00]) -- CLEAD2[0]
     BE35 Patch(0x0242, 1, [00]) -- CTRAIL[0]
     BE36 Patch(0x0247, 1, [00]) -- CB4LFG
     BE37 Patch(0x0248, 1, [20]) -- LINOFF
     BE38 Patch(0x0249, 1, [20]) -- COLOFF
     BE39 Patch(0x024A, 1, [00]) -- ASCUR
     BE3A Patch(0x0250, 3, [02 1B 4B]) -- ERAEOL[0]
     BE3D Patch(0x0257, 3, [02 1B 6C]) -- LINDEL[0]
     BE40 Patch(0x025E, 3, [02 1B 4D]) -- LININS[0]
     BE43 Patch(0x0267, 1, [00]) -- IVON[0]
     BE44 Patch(0x026E, 1, [00]) -- IVOFF[0]
     BE45 Patch(0x028D, 1, [00]) -- USELST
     BE46 Patch(0x0290, 1, [00]) -- MEMAPV
     BE47 Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     BE49 Patch(0x0293, 1, [00]) -- HIBIV
     BE4A Patch(0x0294, 1, [00]) -- HIBCUR
     BE4B Patch(0x0295, 1, [00]) -- CRBLIV
     BE4C Msg ''
     BE4D Msg ''
     BE4E Msg ''
     BE4F Msg ''
     BE50 Msg ''
     BE51 Msg ''
     BE52 Msg ''

BE54 Patch info for 'ADDS Viewpoint'
     BE54 Patch(0x018A, 34, '          ADDS Viewpoint          ') -- IDTEX[0]
     BE62 Ignore [00]
     BE63 Patch(0x0232, 1, [18]) -- HITE
     BE64 Patch(0x0233, 1, [50]) -- WID
     BE65 Patch(0x0275, 4, [03 1B 30 41]) -- TRMINI[0]
     BE69 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     BE6A Ignore [00]
     BE6B Patch(0x028E, 1, [0A]) -- DELCUS
     BE6C Patch(0x028F, 1, [05]) -- DELMIS
     BE6D Ignore [00]
     BE6E Patch(0x0234, 3, [02 1B 59]) -- CLEAD1[0]
     BE71 Patch(0x023D, 1, [00]) -- CLEAD2[0]
     BE72 Patch(0x0242, 1, [00]) -- CTRAIL[0]
     BE73 Patch(0x0247, 1, [00]) -- CB4LFG
     BE74 Patch(0x0248, 1, [20]) -- LINOFF
     BE75 Patch(0x0249, 1, [20]) -- COLOFF
     BE76 Patch(0x024A, 1, [00]) -- ASCUR
     BE77 Patch(0x0250, 3, [02 1B 4B]) -- ERAEOL[0]
     BE7A Patch(0x0257, 1, [00]) -- LINDEL[0]
     BE7B Patch(0x025E, 1, [00]) -- LININS[0]
     BE7C Patch(0x0267, 2, [01 0E]) -- IVON[0]
     BE7E Patch(0x026E, 2, [01 0F]) -- IVOFF[0]
     BE80 Patch(0x028D, 1, [00]) -- USELST
     BE81 Patch(0x0290, 1, [00]) -- MEMAPV
     BE82 Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     BE84 Patch(0x0293, 1, [00]) -- HIBIV
     BE85 Patch(0x0294, 1, [00]) -- HIBCUR
     BE86 Patch(0x0295, 1, [00]) -- CRBLIV
     BE87 Msg ''
     BE88 Msg ''
     BE89 Msg ''
     BE8A Msg ''
     BE8B Msg ''
     BE8C Msg ''
     BE8D Msg ''

BE8F Patch info for 'Ann Arbor Ambassador'
     BE8F Patch(0x018A, 34, '       Ann Arbor Ambassador       ') -- IDTEX[0]
     BEA3 Ignore [00]
     BEA4 Patch(0x0232, 1, [3C]) -- HITE
     BEA5 Patch(0x0233, 1, [3C]) -- WID
     BEA6 Patch(0x0275, 1, [00]) -- TRMINI[0]
     BEA7 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     BEA8 Ignore [00]
     BEA9 Patch(0x028E, 1, [0A]) -- DELCUS
     BEAA Patch(0x028F, 1, [05]) -- DELMIS
     BEAB Ignore [00]
     BEAC Patch(0x0234, 3, [02 1B 5B]) -- CLEAD1[0]
     BEAF Patch(0x023D, 2, [01 3B]) -- CLEAD2[0]
     BEB1 Patch(0x0242, 2, [01 48]) -- CTRAIL[0]
     BEB3 Patch(0x0247, 1, [00]) -- CB4LFG
     BEB4 Patch(0x0248, 1, [01]) -- LINOFF
     BEB5 Patch(0x0249, 1, [01]) -- COLOFF
     BEB6 Patch(0x024A, 1, [02]) -- ASCUR
     BEB7 Patch(0x0250, 4, [03 1B 5B 4B]) -- ERAEOL[0]
     BEBB Patch(0x0257, 4, [03 1B 5B 4D]) -- LINDEL[0]
     BEBF Patch(0x025E, 1, [00]) -- LININS[0]
     BEC0 Patch(0x0267, 5, [04 1B 5B 37 6D]) -- IVON[0]
     BEC5 Patch(0x026E, 5, [04 1B 5B 30 6D]) -- IVOFF[0]
     BECA Patch(0x028D, 1, [00]) -- USELST
     BECB Patch(0x0290, 1, [00]) -- MEMAPV
     BECC Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     BECE Patch(0x0293, 1, [00]) -- HIBIV
     BECF Patch(0x0294, 1, [00]) -- HIBCUR
     BED0 Patch(0x0295, 1, [00]) -- CRBLIV
     BED1 Msg ''
     BED2 Msg ''
     BED3 Msg ''
     BED4 Msg ''
     BED5 Msg ''
     BED6 Msg ''
     BED7 Msg ''

BED9 Patch info for 'Beehive 150 / Cromemco 3100'
     BED9 Patch(0x018A, 34, '   Beehive 150 / Cromemco 3100    ') -- IDTEX[0]
     BEF4 Ignore [00]
     BEF5 Patch(0x0232, 1, [18]) -- HITE
     BEF6 Patch(0x0233, 1, [50]) -- WID
     BEF7 Patch(0x0275, 1, [00]) -- TRMINI[0]
     BEF8 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     BEF9 Ignore [00]
     BEFA Patch(0x028E, 1, [0A]) -- DELCUS
     BEFB Patch(0x028F, 1, [05]) -- DELMIS
     BEFC Ignore [00]
     BEFD Patch(0x0234, 3, [02 1B 46]) -- CLEAD1[0]
     BF00 Patch(0x023D, 1, [00]) -- CLEAD2[0]
     BF01 Patch(0x0242, 1, [00]) -- CTRAIL[0]
     BF02 Patch(0x0247, 1, [00]) -- CB4LFG
     BF03 Patch(0x0248, 1, [20]) -- LINOFF
     BF04 Patch(0x0249, 1, [20]) -- COLOFF
     BF05 Patch(0x024A, 1, [00]) -- ASCUR
     BF06 Patch(0x0250, 1, [00]) -- ERAEOL[0]
     BF07 Patch(0x0257, 1, [00]) -- LINDEL[0]
     BF08 Patch(0x025E, 1, [00]) -- LININS[0]
     BF09 Patch(0x0267, 1, [00]) -- IVON[0]
     BF0A Patch(0x026E, 1, [00]) -- IVOFF[0]
     BF0B Patch(0x028D, 1, [00]) -- USELST
     BF0C Patch(0x0290, 1, [00]) -- MEMAPV
     BF0D Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     BF0F Patch(0x0293, 1, [00]) -- HIBIV
     BF10 Patch(0x0294, 1, [00]) -- HIBCUR
     BF11 Patch(0x0295, 1, [00]) -- CRBLIV
     BF12 Msg ''
     BF13 Msg ''
     BF14 Msg ''
     BF15 Msg ''
     BF16 Msg ''
     BF17 Msg ''
     BF18 Msg ''

BF1A Patch info for 'DEC VT-100'
     BF1A Patch(0x018A, 34, '            DEC VT-100            ') -- IDTEX[0]
     BF24 Ignore [00]
     BF25 Patch(0x0232, 1, [18]) -- HITE
     BF26 Patch(0x0233, 1, [50]) -- WID
     BF27 Patch(0x0275, 1, [00]) -- TRMINI[0]
     BF28 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     BF29 Ignore [00]
     BF2A Patch(0x028E, 1, [0A]) -- DELCUS
     BF2B Patch(0x028F, 1, [05]) -- DELMIS
     BF2C Ignore [00]
     BF2D Patch(0x0234, 3, [02 1B 5B]) -- CLEAD1[0]
     BF30 Patch(0x023D, 2, [01 3B]) -- CLEAD2[0]
     BF32 Patch(0x0242, 2, [01 48]) -- CTRAIL[0]
     BF34 Patch(0x0247, 1, [00]) -- CB4LFG
     BF35 Patch(0x0248, 1, [01]) -- LINOFF
     BF36 Patch(0x0249, 1, [01]) -- COLOFF
     BF37 Patch(0x024A, 1, [02]) -- ASCUR
     BF38 Patch(0x0250, 4, [03 1B 5B 4B]) -- ERAEOL[0]
     BF3C Patch(0x0257, 1, [00]) -- LINDEL[0]
     BF3D Patch(0x025E, 1, [00]) -- LININS[0]
     BF3E Patch(0x0267, 5, [04 1B 5B 37 6D]) -- IVON[0]
     BF43 Patch(0x026E, 4, [03 1B 5B 6D]) -- IVOFF[0]
     BF47 Patch(0x028D, 1, [FF]) -- USELST
     BF48 Patch(0x0290, 1, [00]) -- MEMAPV
     BF49 Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     BF4B Patch(0x0293, 1, [00]) -- HIBIV
     BF4C Patch(0x0294, 1, [00]) -- HIBCUR
     BF4D Patch(0x0295, 1, [00]) -- CRBLIV
     BF4E Msg 'Your terminal should be set up in 80'
     BF73 Msg 'column mode. The highlighting effects'
     BF99 Msg 'will only work if your terminal has the'
     BFC1 Msg 'AVO (Advanced Video Option) installed.'
     BFE8 Msg ''
     BFE9 Msg ''
     BFEA Msg ''

BFEC Patch info for 'DataVue DisplayMaster 132C'
     BFEC Patch(0x018A, 34, '    DataVue DisplayMaster 132C    ') -- IDTEX[0]
     C006 Ignore [00]
     C007 Patch(0x0232, 1, [18]) -- HITE
     C008 Patch(0x0233, 1, [84]) -- WID
     C009 Patch(0x0275, 1, [00]) -- TRMINI[0]
     C00A Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C00B Ignore [00]
     C00C Patch(0x028E, 1, [0A]) -- DELCUS
     C00D Patch(0x028F, 1, [05]) -- DELMIS
     C00E Ignore [00]
     C00F Patch(0x0234, 3, [02 1B 3D]) -- CLEAD1[0]
     C012 Patch(0x023D, 2, [01 3B]) -- CLEAD2[0]
     C014 Patch(0x0242, 2, [01 0D]) -- CTRAIL[0]
     C016 Patch(0x0247, 1, [00]) -- CB4LFG
     C017 Patch(0x0248, 1, [00]) -- LINOFF
     C018 Patch(0x0249, 1, [00]) -- COLOFF
     C019 Patch(0x024A, 1, [03]) -- ASCUR
     C01A Patch(0x0250, 3, [02 1B 54]) -- ERAEOL[0]
     C01D Patch(0x0257, 3, [02 1B 52]) -- LINDEL[0]
     C020 Patch(0x025E, 3, [02 1B 45]) -- LININS[0]
     C023 Patch(0x0267, 1, [00]) -- IVON[0]
     C024 Patch(0x026E, 1, [00]) -- IVOFF[0]
     C025 Patch(0x028D, 1, [00]) -- USELST
     C026 Patch(0x0290, 1, [00]) -- MEMAPV
     C027 Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C029 Patch(0x0293, 1, [00]) -- HIBIV
     C02A Patch(0x0294, 1, [00]) -- HIBCUR
     C02B Patch(0x0295, 1, [00]) -- CRBLIV
     C02C Msg ''
     C02D Msg ''
     C02E Msg ''
     C02F Msg ''
     C030 Msg ''
     C031 Msg ''
     C032 Msg ''

C034 Patch info for 'Flashwriter I/Mindless'
     C034 Patch(0x018A, 34, '      Flashwriter I/Mindless      ') -- IDTEX[0]
     C04A Ignore [00]
     C04B Patch(0x0232, 1, [10]) -- HITE
     C04C Patch(0x0233, 1, [40]) -- WID
     C04D Patch(0x0275, 1, [00]) -- TRMINI[0]
     C04E Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C04F Ignore [00]
     C050 Patch(0x028E, 1, [0A]) -- DELCUS
     C051 Patch(0x028F, 1, [05]) -- DELMIS
     C052 Ignore [00]
     C053 Patch(0x0234, 1, [00]) -- CLEAD1[0]
     C054 Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C055 Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C056 Patch(0x0247, 1, [00]) -- CB4LFG
     C057 Patch(0x0248, 1, [FF]) -- LINOFF
     C058 Patch(0x0249, 1, [FF]) -- COLOFF
     C059 Patch(0x024A, 1, [00]) -- ASCUR
     C05A Patch(0x0250, 1, [00]) -- ERAEOL[0]
     C05B Patch(0x0257, 1, [00]) -- LINDEL[0]
     C05C Patch(0x025E, 1, [00]) -- LININS[0]
     C05D Patch(0x0267, 1, [00]) -- IVON[0]
     C05E Patch(0x026E, 1, [00]) -- IVOFF[0]
     C05F Patch(0x028D, 1, [00]) -- USELST
     C060 Patch(0x0290, 1, [FF]) -- MEMAPV
     C061 Patch(0x0291, 2, [00 F0]) -- MEMADR[0]
     C063 Patch(0x0293, 1, [FF]) -- HIBIV
     C064 Patch(0x0294, 1, [FF]) -- HIBCUR
     C065 Patch(0x0295, 1, [FF]) -- CRBLIV
     C066 Msg 'Flashwriter must be addressed at F000H.'
     C08E Msg ''
     C08F Msg ''
     C090 Msg ''
     C091 Msg ''
     C092 Msg ''
     C093 Msg ''

C095 Patch info for 'Flashwriter II/Mindless'
     C095 Patch(0x018A, 34, '     Flashwriter II/Mindless      ') -- IDTEX[0]
     C0AC Ignore [00]
     C0AD Patch(0x0232, 1, [18]) -- HITE
     C0AE Patch(0x0233, 1, [50]) -- WID
     C0AF Patch(0x0275, 1, [00]) -- TRMINI[0]
     C0B0 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C0B1 Ignore [00]
     C0B2 Patch(0x028E, 1, [0A]) -- DELCUS
     C0B3 Patch(0x028F, 1, [05]) -- DELMIS
     C0B4 Ignore [00]
     C0B5 Patch(0x0234, 1, [00]) -- CLEAD1[0]
     C0B6 Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C0B7 Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C0B8 Patch(0x0247, 1, [00]) -- CB4LFG
     C0B9 Patch(0x0248, 1, [FF]) -- LINOFF
     C0BA Patch(0x0249, 1, [FF]) -- COLOFF
     C0BB Patch(0x024A, 1, [00]) -- ASCUR
     C0BC Patch(0x0250, 1, [00]) -- ERAEOL[0]
     C0BD Patch(0x0257, 1, [00]) -- LINDEL[0]
     C0BE Patch(0x025E, 1, [00]) -- LININS[0]
     C0BF Patch(0x0267, 1, [00]) -- IVON[0]
     C0C0 Patch(0x026E, 1, [00]) -- IVOFF[0]
     C0C1 Patch(0x028D, 1, [00]) -- USELST
     C0C2 Patch(0x0290, 1, [FF]) -- MEMAPV
     C0C3 Patch(0x0291, 2, [00 F0]) -- MEMADR[0]
     C0C5 Patch(0x0293, 1, [FF]) -- HIBIV
     C0C6 Patch(0x0294, 1, [FF]) -- HIBCUR
     C0C7 Patch(0x0295, 1, [FF]) -- CRBLIV
     C0C8 Msg 'Flashwriter must be addressed at F000H.'
     C0F0 Msg ''
     C0F1 Msg ''
     C0F2 Msg ''
     C0F3 Msg ''
     C0F4 Msg ''
     C0F5 Msg ''

C0F7 Patch info for 'Hazeltine 1420'
     C0F7 Patch(0x018A, 34, '          Hazeltine 1420          ') -- IDTEX[0]
     C105 Ignore [00]
     C106 Patch(0x0232, 1, [18]) -- HITE
     C107 Patch(0x0233, 1, [50]) -- WID
     C108 Patch(0x0275, 3, [02 7E 1F]) -- TRMINI[0]
     C10B Patch(0x027E, 3, [02 7E 19]) -- TRMUNI[0]
     C10E Ignore [00]
     C10F Patch(0x028E, 1, [20]) -- DELCUS
     C110 Patch(0x028F, 1, [2A]) -- DELMIS
     C111 Ignore [00]
     C112 Patch(0x0234, 3, [02 7E 11]) -- CLEAD1[0]
     C115 Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C116 Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C117 Patch(0x0247, 1, [FF]) -- CB4LFG
     C118 Patch(0x0248, 1, [00]) -- LINOFF
     C119 Patch(0x0249, 1, [00]) -- COLOFF
     C11A Patch(0x024A, 1, [00]) -- ASCUR
     C11B Patch(0x0250, 3, [02 7E 0F]) -- ERAEOL[0]
     C11E Patch(0x0257, 3, [02 7E 13]) -- LINDEL[0]
     C121 Patch(0x025E, 3, [02 7E 1A]) -- LININS[0]
     C124 Patch(0x0267, 3, [02 7E 19]) -- IVON[0]
     C127 Patch(0x026E, 3, [02 7E 1F]) -- IVOFF[0]
     C12A Patch(0x028D, 1, [00]) -- USELST
     C12B Patch(0x0290, 1, [00]) -- MEMAPV
     C12C Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C12E Patch(0x0293, 1, [00]) -- HIBIV
     C12F Patch(0x0294, 1, [00]) -- HIBCUR
     C130 Patch(0x0295, 1, [00]) -- CRBLIV
     C131 Msg 'The AUTO LF switch (under the little'
     C156 Msg 'cover above the keyboard) must be OFF'
     C17C Msg 'for proper operation.'
     C192 Msg ''
     C193 Msg ''
     C194 Msg ''
     C195 Msg ''

C197 Patch info for 'Hazeltine 1500'
     C197 Patch(0x018A, 34, '          Hazeltine 1500          ') -- IDTEX[0]
     C1A5 Ignore [00]
     C1A6 Patch(0x0232, 1, [18]) -- HITE
     C1A7 Patch(0x0233, 1, [50]) -- WID
     C1A8 Patch(0x0275, 3, [02 7E 1F]) -- TRMINI[0]
     C1AB Patch(0x027E, 3, [02 7E 19]) -- TRMUNI[0]
     C1AE Ignore [00]
     C1AF Patch(0x028E, 1, [0A]) -- DELCUS
     C1B0 Patch(0x028F, 1, [05]) -- DELMIS
     C1B1 Ignore [00]
     C1B2 Patch(0x0234, 3, [02 7E 11]) -- CLEAD1[0]
     C1B5 Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C1B6 Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C1B7 Patch(0x0247, 1, [FF]) -- CB4LFG
     C1B8 Patch(0x0248, 1, [00]) -- LINOFF
     C1B9 Patch(0x0249, 1, [00]) -- COLOFF
     C1BA Patch(0x024A, 1, [00]) -- ASCUR
     C1BB Patch(0x0250, 3, [02 7E 0F]) -- ERAEOL[0]
     C1BE Patch(0x0257, 3, [02 7E 13]) -- LINDEL[0]
     C1C1 Patch(0x025E, 3, [02 7E 1A]) -- LININS[0]
     C1C4 Patch(0x0267, 3, [02 7E 19]) -- IVON[0]
     C1C7 Patch(0x026E, 3, [02 7E 1F]) -- IVOFF[0]
     C1CA Patch(0x028D, 1, [00]) -- USELST
     C1CB Patch(0x0290, 1, [00]) -- MEMAPV
     C1CC Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C1CE Patch(0x0293, 1, [00]) -- HIBIV
     C1CF Patch(0x0294, 1, [00]) -- HIBCUR
     C1D0 Patch(0x0295, 1, [00]) -- CRBLIV
     C1D1 Msg 'The AUTO LF switch (under the little'
     C1F6 Msg 'cover above the keyboard) must be OFF'
     C21C Msg 'for proper operation.'
     C232 Msg ''
     C233 Msg ''
     C234 Msg ''
     C235 Msg ''

C237 Patch info for 'Heath/Zenith H89/19'
     C237 Patch(0x018A, 34, '       Heath/Zenith H89/19        ') -- IDTEX[0]
     C24A Ignore [00]
     C24B Patch(0x0232, 1, [18]) -- HITE
     C24C Patch(0x0233, 1, [50]) -- WID
     C24D Patch(0x0275, 1, [00]) -- TRMINI[0]
     C24E Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C24F Ignore [00]
     C250 Patch(0x028E, 1, [0A]) -- DELCUS
     C251 Patch(0x028F, 1, [05]) -- DELMIS
     C252 Ignore [00]
     C253 Patch(0x0234, 3, [02 1B 59]) -- CLEAD1[0]
     C256 Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C257 Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C258 Patch(0x0247, 1, [00]) -- CB4LFG
     C259 Patch(0x0248, 1, [20]) -- LINOFF
     C25A Patch(0x0249, 1, [20]) -- COLOFF
     C25B Patch(0x024A, 1, [00]) -- ASCUR
     C25C Patch(0x0250, 3, [02 1B 4B]) -- ERAEOL[0]
     C25F Patch(0x0257, 3, [02 1B 4D]) -- LINDEL[0]
     C262 Patch(0x025E, 3, [02 1B 4C]) -- LININS[0]
     C265 Patch(0x0267, 3, [02 1B 70]) -- IVON[0]
     C268 Patch(0x026E, 3, [02 1B 71]) -- IVOFF[0]
     C26B Patch(0x028D, 1, [00]) -- USELST
     C26C Patch(0x0290, 1, [00]) -- MEMAPV
     C26D Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C26F Patch(0x0293, 1, [00]) -- HIBIV
     C270 Patch(0x0294, 1, [00]) -- HIBCUR
     C271 Patch(0x0295, 1, [00]) -- CRBLIV
     C272 Msg ''
     C273 Msg ''
     C274 Msg ''
     C275 Msg ''
     C276 Msg ''
     C277 Msg ''
     C278 Msg ''

C27A Patch info for 'Hewlett-Packard 2621 A/P'
     C27A Patch(0x018A, 34, '     Hewlett-Packard 2621 A/P     ') -- IDTEX[0]
     C292 Ignore [00]
     C293 Patch(0x0232, 1, [18]) -- HITE
     C294 Patch(0x0233, 1, [50]) -- WID
     C295 Patch(0x0275, 1, [00]) -- TRMINI[0]
     C296 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C297 Ignore [00]
     C298 Patch(0x028E, 1, [0A]) -- DELCUS
     C299 Patch(0x028F, 1, [05]) -- DELMIS
     C29A Ignore [00]
     C29B Patch(0x0234, 4, [03 1B 26 61]) -- CLEAD1[0]
     C29F Patch(0x023D, 2, [01 79]) -- CLEAD2[0]
     C2A1 Patch(0x0242, 2, [01 43]) -- CTRAIL[0]
     C2A3 Patch(0x0247, 1, [00]) -- CB4LFG
     C2A4 Patch(0x0248, 1, [00]) -- LINOFF
     C2A5 Patch(0x0249, 1, [00]) -- COLOFF
     C2A6 Patch(0x024A, 1, [02]) -- ASCUR
     C2A7 Patch(0x0250, 3, [02 1B 4B]) -- ERAEOL[0]
     C2AA Patch(0x0257, 1, [00]) -- LINDEL[0]
     C2AB Patch(0x025E, 1, [00]) -- LININS[0]
     C2AC Patch(0x0267, 5, [04 1B 26 64 41]) -- IVON[0]
     C2B1 Patch(0x026E, 5, [04 1B 26 64 40]) -- IVOFF[0]
     C2B6 Patch(0x028D, 1, [00]) -- USELST
     C2B7 Patch(0x0290, 1, [00]) -- MEMAPV
     C2B8 Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C2BA Patch(0x0293, 1, [00]) -- HIBIV
     C2BB Patch(0x0294, 1, [00]) -- HIBCUR
     C2BC Patch(0x0295, 1, [00]) -- CRBLIV
     C2BD Msg ''
     C2BE Msg ''
     C2BF Msg ''
     C2C0 Msg ''
     C2C1 Msg ''
     C2C2 Msg ''
     C2C3 Msg ''

C2C5 Patch info for 'IBM 3101'
     C2C5 Patch(0x018A, 34, '             IBM 3101             ') -- IDTEX[0]
     C2CD Ignore [00]
     C2CE Patch(0x0232, 1, [18]) -- HITE
     C2CF Patch(0x0233, 1, [50]) -- WID
     C2D0 Patch(0x0275, 1, [00]) -- TRMINI[0]
     C2D1 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C2D2 Ignore [00]
     C2D3 Patch(0x028E, 1, [0A]) -- DELCUS
     C2D4 Patch(0x028F, 1, [05]) -- DELMIS
     C2D5 Ignore [00]
     C2D6 Patch(0x0234, 3, [02 1B 59]) -- CLEAD1[0]
     C2D9 Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C2DA Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C2DB Patch(0x0247, 1, [00]) -- CB4LFG
     C2DC Patch(0x0248, 1, [20]) -- LINOFF
     C2DD Patch(0x0249, 1, [20]) -- COLOFF
     C2DE Patch(0x024A, 1, [00]) -- ASCUR
     C2DF Patch(0x0250, 1, [00]) -- ERAEOL[0]
     C2E0 Patch(0x0257, 1, [00]) -- LINDEL[0]
     C2E1 Patch(0x025E, 1, [00]) -- LININS[0]
     C2E2 Patch(0x0267, 1, [00]) -- IVON[0]
     C2E3 Patch(0x026E, 1, [00]) -- IVOFF[0]
     C2E4 Patch(0x028D, 1, [00]) -- USELST
     C2E5 Patch(0x0290, 1, [00]) -- MEMAPV
     C2E6 Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C2E8 Patch(0x0293, 1, [00]) -- HIBIV
     C2E9 Patch(0x0294, 1, [00]) -- HIBCUR
     C2EA Patch(0x0295, 1, [00]) -- CRBLIV
     C2EB Msg ''
     C2EC Msg ''
     C2ED Msg ''
     C2EE Msg ''
     C2EF Msg ''
     C2F0 Msg ''
     C2F1 Msg ''

C2F3 Patch info for 'Imsai VIO'
     C2F3 Patch(0x018A, 34, '            Imsai VIO             ') -- IDTEX[0]
     C2FC Ignore [00]
     C2FD Patch(0x0232, 1, [18]) -- HITE
     C2FE Patch(0x0233, 1, [50]) -- WID
     C2FF Patch(0x0275, 1, [00]) -- TRMINI[0]
     C300 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C301 Ignore [00]
     C302 Patch(0x028E, 1, [0A]) -- DELCUS
     C303 Patch(0x028F, 1, [05]) -- DELMIS
     C304 Ignore [00]
     C305 Patch(0x0234, 3, [02 1B 3D]) -- CLEAD1[0]
     C308 Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C309 Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C30A Patch(0x0247, 1, [00]) -- CB4LFG
     C30B Patch(0x0248, 1, [20]) -- LINOFF
     C30C Patch(0x0249, 1, [20]) -- COLOFF
     C30D Patch(0x024A, 1, [00]) -- ASCUR
     C30E Patch(0x0250, 1, [00]) -- ERAEOL[0]
     C30F Patch(0x0257, 1, [00]) -- LINDEL[0]
     C310 Patch(0x025E, 1, [00]) -- LININS[0]
     C311 Patch(0x0267, 1, [00]) -- IVON[0]
     C312 Patch(0x026E, 1, [00]) -- IVOFF[0]
     C313 Patch(0x028D, 1, [00]) -- USELST
     C314 Patch(0x0290, 1, [FF]) -- MEMAPV
     C315 Patch(0x0291, 2, [00 F0]) -- MEMADR[0]
     C317 Patch(0x0293, 1, [FF]) -- HIBIV
     C318 Patch(0x0294, 1, [FF]) -- HIBCUR
     C319 Patch(0x0295, 1, [FF]) -- CRBLIV
     C31A Msg 'For IMSAI VDP-40, VDP-80 and other'
     C33D Msg 'systems with IMSAI VIO-C or VIO-D'
     C35F Msg '(with firmware) at F000H. Accesses'
     C382 Msg 'Video RAM directly.'
     C396 Msg ''
     C397 Msg '24 * 80 format must be selected before'
     C3BE Msg 'WordStar is invoked.'

C3D4 Patch info for 'Infoton I-100'
     C3D4 Patch(0x018A, 34, '          Infoton I-100           ') -- IDTEX[0]
     C3E1 Ignore [00]
     C3E2 Patch(0x0232, 1, [18]) -- HITE
     C3E3 Patch(0x0233, 1, [50]) -- WID
     C3E4 Patch(0x0275, 1, [00]) -- TRMINI[0]
     C3E5 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C3E6 Ignore [00]
     C3E7 Patch(0x028E, 1, [0A]) -- DELCUS
     C3E8 Patch(0x028F, 1, [05]) -- DELMIS
     C3E9 Ignore [00]
     C3EA Patch(0x0234, 3, [02 1B 66]) -- CLEAD1[0]
     C3ED Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C3EE Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C3EF Patch(0x0247, 1, [FF]) -- CB4LFG
     C3F0 Patch(0x0248, 1, [20]) -- LINOFF
     C3F1 Patch(0x0249, 1, [20]) -- COLOFF
     C3F2 Patch(0x024A, 1, [00]) -- ASCUR
     C3F3 Patch(0x0250, 1, [00]) -- ERAEOL[0]
     C3F4 Patch(0x0257, 3, [02 1B 4C]) -- LINDEL[0]
     C3F7 Patch(0x025E, 3, [02 1B 4D]) -- LININS[0]
     C3FA Patch(0x0267, 3, [02 1B 34]) -- IVON[0]
     C3FD Patch(0x026E, 3, [02 1B 33]) -- IVOFF[0]
     C400 Patch(0x028D, 1, [FF]) -- USELST
     C401 Patch(0x0290, 1, [00]) -- MEMAPV
     C402 Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C404 Patch(0x0293, 1, [00]) -- HIBIV
     C405 Patch(0x0294, 1, [00]) -- HIBCUR
     C406 Patch(0x0295, 1, [00]) -- CRBLIV
     C407 Msg ''
     C408 Msg ''
     C409 Msg ''
     C40A Msg ''
     C40B Msg ''
     C40C Msg ''
     C40D Msg ''

C40F Patch info for 'Lear Siegler ADM-31'
     C40F Patch(0x018A, 34, '       Lear Siegler ADM-31        ') -- IDTEX[0]
     C422 Ignore [00]
     C423 Patch(0x0232, 1, [18]) -- HITE
     C424 Patch(0x0233, 1, [50]) -- WID
     C425 Patch(0x0275, 3, [02 1B 27]) -- TRMINI[0]
     C428 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C429 Ignore [00]
     C42A Patch(0x028E, 1, [0A]) -- DELCUS
     C42B Patch(0x028F, 1, [05]) -- DELMIS
     C42C Ignore [00]
     C42D Patch(0x0234, 3, [02 1B 3D]) -- CLEAD1[0]
     C430 Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C431 Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C432 Patch(0x0247, 1, [00]) -- CB4LFG
     C433 Patch(0x0248, 1, [20]) -- LINOFF
     C434 Patch(0x0249, 1, [20]) -- COLOFF
     C435 Patch(0x024A, 1, [00]) -- ASCUR
     C436 Patch(0x0250, 3, [02 1B 54]) -- ERAEOL[0]
     C439 Patch(0x0257, 3, [02 1B 52]) -- LINDEL[0]
     C43C Patch(0x025E, 3, [02 1B 45]) -- LININS[0]
     C43F Patch(0x0267, 3, [02 1B 29]) -- IVON[0]
     C442 Patch(0x026E, 3, [02 1B 28]) -- IVOFF[0]
     C445 Patch(0x028D, 1, [00]) -- USELST
     C446 Patch(0x0290, 1, [00]) -- MEMAPV
     C447 Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C449 Patch(0x0293, 1, [00]) -- HIBIV
     C44A Patch(0x0294, 1, [00]) -- HIBCUR
     C44B Patch(0x0295, 1, [00]) -- CRBLIV
     C44C Msg ''
     C44D Msg ''
     C44E Msg ''
     C44F Msg ''
     C450 Msg ''
     C451 Msg ''
     C452 Msg ''

C454 Patch info for 'Lear Siegler ADM-3A'
     C454 Patch(0x018A, 34, '       Lear Siegler ADM-3A        ') -- IDTEX[0]
     C467 Ignore [00]
     C468 Patch(0x0232, 1, [18]) -- HITE
     C469 Patch(0x0233, 1, [50]) -- WID
     C46A Patch(0x0275, 1, [00]) -- TRMINI[0]
     C46B Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C46C Ignore [00]
     C46D Patch(0x028E, 1, [0A]) -- DELCUS
     C46E Patch(0x028F, 1, [05]) -- DELMIS
     C46F Ignore [00]
     C470 Patch(0x0234, 3, [02 1B 3D]) -- CLEAD1[0]
     C473 Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C474 Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C475 Patch(0x0247, 1, [00]) -- CB4LFG
     C476 Patch(0x0248, 1, [20]) -- LINOFF
     C477 Patch(0x0249, 1, [20]) -- COLOFF
     C478 Patch(0x024A, 1, [00]) -- ASCUR
     C479 Patch(0x0250, 1, [00]) -- ERAEOL[0]
     C47A Patch(0x0257, 1, [00]) -- LINDEL[0]
     C47B Patch(0x025E, 1, [00]) -- LININS[0]
     C47C Patch(0x0267, 1, [00]) -- IVON[0]
     C47D Patch(0x026E, 1, [00]) -- IVOFF[0]
     C47E Patch(0x028D, 1, [FF]) -- USELST
     C47F Patch(0x0290, 1, [00]) -- MEMAPV
     C480 Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C482 Patch(0x0293, 1, [00]) -- HIBIV
     C483 Patch(0x0294, 1, [00]) -- HIBCUR
     C484 Patch(0x0295, 1, [00]) -- CRBLIV
     C485 Msg 'Make sure the AUTO NEW LINE switch'
     C4A8 Msg '(under the little cover next to the'
     C4CC Msg 'keyboard) is off.'
     C4DE Msg ''
     C4DF Msg ''
     C4E0 Msg ''
     C4E1 Msg ''

C4E3 Patch info for 'MicroTerm ACT-IV'
     C4E3 Patch(0x018A, 34, '         MicroTerm ACT-IV         ') -- IDTEX[0]
     C4F3 Ignore [00]
     C4F4 Patch(0x0232, 1, [18]) -- HITE
     C4F5 Patch(0x0233, 1, [50]) -- WID
     C4F6 Patch(0x0275, 1, [00]) -- TRMINI[0]
     C4F7 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C4F8 Ignore [00]
     C4F9 Patch(0x028E, 1, [0A]) -- DELCUS
     C4FA Patch(0x028F, 1, [05]) -- DELMIS
     C4FB Ignore [00]
     C4FC Patch(0x0234, 2, [01 14]) -- CLEAD1[0]
     C4FE Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C4FF Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C500 Patch(0x0247, 1, [00]) -- CB4LFG
     C501 Patch(0x0248, 1, [00]) -- LINOFF
     C502 Patch(0x0249, 1, [00]) -- COLOFF
     C503 Patch(0x024A, 1, [00]) -- ASCUR
     C504 Patch(0x0250, 2, [01 1E]) -- ERAEOL[0]
     C506 Patch(0x0257, 1, [00]) -- LINDEL[0]
     C507 Patch(0x025E, 1, [00]) -- LININS[0]
     C508 Patch(0x0267, 2, [01 0E]) -- IVON[0]
     C50A Patch(0x026E, 2, [01 0E]) -- IVOFF[0]
     C50C Patch(0x028D, 1, [00]) -- USELST
     C50D Patch(0x0290, 1, [00]) -- MEMAPV
     C50E Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C510 Patch(0x0293, 1, [00]) -- HIBIV
     C511 Patch(0x0294, 1, [00]) -- HIBCUR
     C512 Patch(0x0295, 1, [00]) -- CRBLIV
     C513 Msg ''
     C514 Msg ''
     C515 Msg ''
     C516 Msg ''
     C517 Msg ''
     C518 Msg ''
     C519 Msg ''

C51B Patch info for 'North Star Advantage'
     C51B Patch(0x018A, 34, '       North Star Advantage       ') -- IDTEX[0]
     C52F Ignore [00]
     C530 Patch(0x0232, 1, [18]) -- HITE
     C531 Patch(0x0233, 1, [50]) -- WID
     C532 Patch(0x0275, 1, [00]) -- TRMINI[0]
     C533 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C534 Ignore [00]
     C535 Patch(0x028E, 1, [0A]) -- DELCUS
     C536 Patch(0x028F, 1, [05]) -- DELMIS
     C537 Ignore [00]
     C538 Patch(0x0234, 3, [02 1B 3D]) -- CLEAD1[0]
     C53B Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C53C Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C53D Patch(0x0247, 1, [00]) -- CB4LFG
     C53E Patch(0x0248, 1, [20]) -- LINOFF
     C53F Patch(0x0249, 1, [20]) -- COLOFF
     C540 Patch(0x024A, 1, [00]) -- ASCUR
     C541 Patch(0x0250, 3, [02 1B 54]) -- ERAEOL[0]
     C544 Patch(0x0257, 1, [00]) -- LINDEL[0]
     C545 Patch(0x025E, 1, [00]) -- LININS[0]
     C546 Patch(0x0267, 3, [02 1B 29]) -- IVON[0]
     C549 Patch(0x026E, 3, [02 1B 28]) -- IVOFF[0]
     C54C Patch(0x028D, 1, [00]) -- USELST
     C54D Patch(0x0290, 1, [00]) -- MEMAPV
     C54E Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C550 Patch(0x0293, 1, [00]) -- HIBIV
     C551 Patch(0x0294, 1, [00]) -- HIBCUR
     C552 Patch(0x0295, 1, [00]) -- CRBLIV
     C553 Msg ''
     C554 Msg ''
     C555 Msg ''
     C556 Msg ''
     C557 Msg ''
     C558 Msg ''
     C559 Msg ''

C55B Patch info for 'Perkin-Elmer (Bantam) 550'
     C55B Patch(0x018A, 34, '    Perkin-Elmer (Bantam) 550     ') -- IDTEX[0]
     C574 Ignore [00]
     C575 Patch(0x0232, 1, [18]) -- HITE
     C576 Patch(0x0233, 1, [50]) -- WID
     C577 Patch(0x0275, 1, [00]) -- TRMINI[0]
     C578 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C579 Ignore [00]
     C57A Patch(0x028E, 1, [0A]) -- DELCUS
     C57B Patch(0x028F, 1, [05]) -- DELMIS
     C57C Ignore [00]
     C57D Patch(0x0234, 3, [02 1B 58]) -- CLEAD1[0]
     C580 Patch(0x023D, 3, [02 1B 59]) -- CLEAD2[0]
     C583 Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C584 Patch(0x0247, 1, [00]) -- CB4LFG
     C585 Patch(0x0248, 1, [20]) -- LINOFF
     C586 Patch(0x0249, 1, [20]) -- COLOFF
     C587 Patch(0x024A, 1, [00]) -- ASCUR
     C588 Patch(0x0250, 3, [02 1B 49]) -- ERAEOL[0]
     C58B Patch(0x0257, 1, [00]) -- LINDEL[0]
     C58C Patch(0x025E, 1, [00]) -- LININS[0]
     C58D Patch(0x0267, 1, [00]) -- IVON[0]
     C58E Patch(0x026E, 1, [00]) -- IVOFF[0]
     C58F Patch(0x028D, 1, [00]) -- USELST
     C590 Patch(0x0290, 1, [00]) -- MEMAPV
     C591 Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C593 Patch(0x0293, 1, [00]) -- HIBIV
     C594 Patch(0x0294, 1, [00]) -- HIBCUR
     C595 Patch(0x0295, 1, [00]) -- CRBLIV
     C596 Msg ''
     C597 Msg ''
     C598 Msg ''
     C599 Msg ''
     C59A Msg ''
     C59B Msg ''
     C59C Msg ''

C59E Patch info for 'Sirius 9000'
     C59E Patch(0x018A, 34, '           Sirius 9000            ') -- IDTEX[0]
     C5A9 Ignore [00]
     C5AA Patch(0x0232, 1, [18]) -- HITE
     C5AB Patch(0x0233, 1, [50]) -- WID
     C5AC Patch(0x0275, 8, [07 1B 7B 1B 34 33 0E 00]) -- TRMINI[0]
     C5B4 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C5B5 Ignore [00]
     C5B6 Patch(0x028E, 1, [00]) -- DELCUS
     C5B7 Patch(0x028F, 1, [00]) -- DELMIS
     C5B8 Ignore [00]
     C5B9 Patch(0x0234, 3, [02 1B 59]) -- CLEAD1[0]
     C5BC Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C5BD Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C5BE Patch(0x0247, 1, [00]) -- CB4LFG
     C5BF Patch(0x0248, 1, [20]) -- LINOFF
     C5C0 Patch(0x0249, 1, [20]) -- COLOFF
     C5C1 Patch(0x024A, 1, [00]) -- ASCUR
     C5C2 Patch(0x0250, 3, [02 1B 4B]) -- ERAEOL[0]
     C5C5 Patch(0x0257, 3, [02 1B 4D]) -- LINDEL[0]
     C5C8 Patch(0x025E, 3, [02 1B 4C]) -- LININS[0]
     C5CB Patch(0x0267, 3, [02 1B 70]) -- IVON[0]
     C5CE Patch(0x026E, 3, [02 1B 71]) -- IVOFF[0]
     C5D1 Patch(0x028D, 1, [00]) -- USELST
     C5D2 Patch(0x0290, 1, [00]) -- MEMAPV
     C5D3 Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C5D5 Patch(0x0293, 1, [00]) -- HIBIV
     C5D6 Patch(0x0294, 1, [00]) -- HIBCUR
     C5D7 Patch(0x0295, 1, [00]) -- CRBLIV
     C5D8 Msg 'For proper operation on the Sirius'
     C5FB Msg '9000, the AUTO LF and AUTO carriage'
     C61F Msg 'return modes must be disabled.'
     C63E Msg ''
     C63F Msg ''
     C640 Msg ''
     C641 Msg ''

C643 Patch info for 'Soroc IQ-120/140'
     C643 Patch(0x018A, 34, '         Soroc IQ-120/140         ') -- IDTEX[0]
     C653 Ignore [00]
     C654 Patch(0x0232, 1, [18]) -- HITE
     C655 Patch(0x0233, 1, [50]) -- WID
     C656 Patch(0x0275, 1, [00]) -- TRMINI[0]
     C657 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C658 Ignore [00]
     C659 Patch(0x028E, 1, [0A]) -- DELCUS
     C65A Patch(0x028F, 1, [05]) -- DELMIS
     C65B Ignore [00]
     C65C Patch(0x0234, 3, [02 1B 3D]) -- CLEAD1[0]
     C65F Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C660 Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C661 Patch(0x0247, 1, [00]) -- CB4LFG
     C662 Patch(0x0248, 1, [20]) -- LINOFF
     C663 Patch(0x0249, 1, [20]) -- COLOFF
     C664 Patch(0x024A, 1, [00]) -- ASCUR
     C665 Patch(0x0250, 3, [02 1B 54]) -- ERAEOL[0]
     C668 Patch(0x0257, 1, [00]) -- LINDEL[0]
     C669 Patch(0x025E, 1, [00]) -- LININS[0]
     C66A Patch(0x0267, 3, [02 1B 29]) -- IVON[0]
     C66D Patch(0x026E, 3, [02 1B 28]) -- IVOFF[0]
     C670 Patch(0x028D, 1, [00]) -- USELST
     C671 Patch(0x0290, 1, [00]) -- MEMAPV
     C672 Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C674 Patch(0x0293, 1, [00]) -- HIBIV
     C675 Patch(0x0294, 1, [00]) -- HIBCUR
     C676 Patch(0x0295, 1, [00]) -- CRBLIV
     C677 Msg ''
     C678 Msg ''
     C679 Msg ''
     C67A Msg ''
     C67B Msg ''
     C67C Msg ''
     C67D Msg ''

C67F Patch info for 'TeleVideo 910'
     C67F Patch(0x018A, 34, '          TeleVideo 910           ') -- IDTEX[0]
     C68C Ignore [00]
     C68D Patch(0x0232, 1, [18]) -- HITE
     C68E Patch(0x0233, 1, [50]) -- WID
     C68F Patch(0x0275, 3, [02 1B 27]) -- TRMINI[0]
     C692 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C693 Ignore [00]
     C694 Patch(0x028E, 1, [0A]) -- DELCUS
     C695 Patch(0x028F, 1, [05]) -- DELMIS
     C696 Ignore [00]
     C697 Patch(0x0234, 3, [02 1B 3D]) -- CLEAD1[0]
     C69A Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C69B Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C69C Patch(0x0247, 1, [00]) -- CB4LFG
     C69D Patch(0x0248, 1, [20]) -- LINOFF
     C69E Patch(0x0249, 1, [20]) -- COLOFF
     C69F Patch(0x024A, 1, [00]) -- ASCUR
     C6A0 Patch(0x0250, 3, [02 1B 54]) -- ERAEOL[0]
     C6A3 Patch(0x0257, 1, [00]) -- LINDEL[0]
     C6A4 Patch(0x025E, 1, [00]) -- LININS[0]
     C6A5 Patch(0x0267, 3, [02 1B 29]) -- IVON[0]
     C6A8 Patch(0x026E, 3, [02 1B 28]) -- IVOFF[0]
     C6AB Patch(0x028D, 1, [00]) -- USELST
     C6AC Patch(0x0290, 1, [00]) -- MEMAPV
     C6AD Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C6AF Patch(0x0293, 1, [00]) -- HIBIV
     C6B0 Patch(0x0294, 1, [00]) -- HIBCUR
     C6B1 Patch(0x0295, 1, [00]) -- CRBLIV
     C6B2 Msg 'Ensure that your terminal switches are'
     C6D9 Msg 'set for either 910 or ADM 3A mode.'
     C6FC Msg ''
     C6FD Msg ''
     C6FE Msg ''
     C6FF Msg ''
     C700 Msg ''

C702 Patch info for 'TeleVideo 912/920'
     C702 Patch(0x018A, 34, '        TeleVideo 912/920         ') -- IDTEX[0]
     C713 Ignore [00]
     C714 Patch(0x0232, 1, [18]) -- HITE
     C715 Patch(0x0233, 1, [50]) -- WID
     C716 Patch(0x0275, 9, [08 1B 71 1B 77 1B 43 1B 2C]) -- TRMINI[0]
     C71F Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C720 Ignore [00]
     C721 Patch(0x028E, 1, [0A]) -- DELCUS
     C722 Patch(0x028F, 1, [05]) -- DELMIS
     C723 Ignore [00]
     C724 Patch(0x0234, 3, [02 1B 3D]) -- CLEAD1[0]
     C727 Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C728 Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C729 Patch(0x0247, 1, [00]) -- CB4LFG
     C72A Patch(0x0248, 1, [20]) -- LINOFF
     C72B Patch(0x0249, 1, [20]) -- COLOFF
     C72C Patch(0x024A, 1, [00]) -- ASCUR
     C72D Patch(0x0250, 1, [00]) -- ERAEOL[0]
     C72E Patch(0x0257, 1, [00]) -- LINDEL[0]
     C72F Patch(0x025E, 1, [00]) -- LININS[0]
     C730 Patch(0x0267, 3, [02 1B 29]) -- IVON[0]
     C733 Patch(0x026E, 3, [02 1B 28]) -- IVOFF[0]
     C736 Patch(0x028D, 1, [00]) -- USELST
     C737 Patch(0x0290, 1, [00]) -- MEMAPV
     C738 Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C73A Patch(0x0293, 1, [00]) -- HIBIV
     C73B Patch(0x0294, 1, [00]) -- HIBCUR
     C73C Patch(0x0295, 1, [00]) -- CRBLIV
     C73D Msg ''
     C73E Msg ''
     C73F Msg ''
     C740 Msg ''
     C741 Msg ''
     C742 Msg ''
     C743 Msg ''

C745 Patch info for 'TeleVideo 925/950'
     C745 Patch(0x018A, 34, '        TeleVideo 925/950         ') -- IDTEX[0]
     C756 Ignore [00]
     C757 Patch(0x0232, 1, [18]) -- HITE
     C758 Patch(0x0233, 1, [50]) -- WID
     C759 Patch(0x0275, 9, [08 1B 3E 1B 77 1B 43 1B 4E]) -- TRMINI[0]
     C762 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C763 Ignore [00]
     C764 Patch(0x028E, 1, [00]) -- DELCUS
     C765 Patch(0x028F, 1, [00]) -- DELMIS
     C766 Ignore [00]
     C767 Patch(0x0234, 3, [02 1B 3D]) -- CLEAD1[0]
     C76A Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C76B Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C76C Patch(0x0247, 1, [00]) -- CB4LFG
     C76D Patch(0x0248, 1, [20]) -- LINOFF
     C76E Patch(0x0249, 1, [20]) -- COLOFF
     C76F Patch(0x024A, 1, [00]) -- ASCUR
     C770 Patch(0x0250, 3, [02 1B 54]) -- ERAEOL[0]
     C773 Patch(0x0257, 3, [02 1B 52]) -- LINDEL[0]
     C776 Patch(0x025E, 3, [02 1B 45]) -- LININS[0]
     C779 Patch(0x0267, 3, [02 1B 29]) -- IVON[0]
     C77C Patch(0x026E, 3, [02 1B 28]) -- IVOFF[0]
     C77F Patch(0x028D, 1, [00]) -- USELST
     C780 Patch(0x0290, 1, [00]) -- MEMAPV
     C781 Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C783 Patch(0x0293, 1, [00]) -- HIBIV
     C784 Patch(0x0294, 1, [00]) -- HIBCUR
     C785 Patch(0x0295, 1, [00]) -- CRBLIV
     C786 Msg ''
     C787 Msg ''
     C788 Msg ''
     C789 Msg ''
     C78A Msg ''
     C78B Msg ''
     C78C Msg ''

C78E Patch info for 'Visual 200'
     C78E Patch(0x018A, 34, '            Visual 200            ') -- IDTEX[0]
     C798 Ignore [00]
     C799 Patch(0x0232, 1, [18]) -- HITE
     C79A Patch(0x0233, 1, [50]) -- WID
     C79B Patch(0x0275, 1, [00]) -- TRMINI[0]
     C79C Patch(0x027E, 1, [00]) -- TRMUNI[0]
     C79D Ignore [00]
     C79E Patch(0x028E, 1, [0A]) -- DELCUS
     C79F Patch(0x028F, 1, [05]) -- DELMIS
     C7A0 Ignore [00]
     C7A1 Patch(0x0234, 3, [02 1B 59]) -- CLEAD1[0]
     C7A4 Patch(0x023D, 1, [00]) -- CLEAD2[0]
     C7A5 Patch(0x0242, 1, [00]) -- CTRAIL[0]
     C7A6 Patch(0x0247, 1, [00]) -- CB4LFG
     C7A7 Patch(0x0248, 1, [20]) -- LINOFF
     C7A8 Patch(0x0249, 1, [20]) -- COLOFF
     C7A9 Patch(0x024A, 1, [00]) -- ASCUR
     C7AA Patch(0x0250, 3, [02 1B 78]) -- ERAEOL[0]
     C7AD Patch(0x0257, 3, [02 1B 4D]) -- LINDEL[0]
     C7B0 Patch(0x025E, 3, [02 1B 4C]) -- LININS[0]
     C7B3 Patch(0x0267, 3, [02 1B 34]) -- IVON[0]
     C7B6 Patch(0x026E, 3, [02 1B 33]) -- IVOFF[0]
     C7B9 Patch(0x028D, 1, [00]) -- USELST
     C7BA Patch(0x0290, 1, [00]) -- MEMAPV
     C7BB Patch(0x0291, 2, [00 00]) -- MEMADR[0]
     C7BD Patch(0x0293, 1, [00]) -- HIBIV
     C7BE Patch(0x0294, 1, [00]) -- HIBCUR
     C7BF Patch(0x0295, 1, [00]) -- CRBLIV
     C7C0 Msg ''
     C7C1 Msg ''
     C7C2 Msg ''
     C7C3 Msg ''
     C7C4 Msg ''
     C7C5 Msg ''
     C7C6 Msg ''

C7C9 Patch info for 'C. Itoh/TEC Starwriter/F10'
     C7C9 Patch(0x01AE, 34, '    C. Itoh/TEC Starwriter/F10    ') -- PIDTEX[0]
     C7E3 Patch(0x06ED, 4, [03 1B 1A 49]) -- PSINIT[0]
     C7E7 Patch(0x06FE, 4, [03 1B 1A 49]) -- PSFINI[0]
     C7EB Patch(0x0699, 1, [01]) -- POSMTH
     C7EC Patch(0x0717, 1, [00]) -- CSWTCH
     C7ED Patch(0x069A, 1, [02]) -- BLDSTR
     C7EE Patch(0x0718, 1, [00]) -- HAVBSY
     C7EF Patch(0x0778, 1, [00]) -- PROTCL
     C7F0 Patch(0x0779, 1, [6F]) -- EAKBSZ
     C7F1 Patch(0x06E3, 3, [02 1B 41]) -- RIBBON[0]
     C7F4 Patch(0x06E8, 3, [02 1B 42]) -- RIBOFF[0]
     C7F7 Patch(0x06CF, 1, [00]) -- USR1[0]
     C7F8 Patch(0x06D4, 1, [00]) -- USR2[0]
     C7F9 Patch(0x06D9, 1, [00]) -- USR3[0]
     C7FA Patch(0x06DE, 1, [00]) -- USR4[0]
     C7FB Patch(0x069C, 1, [00]) -- PSCRLF[0]
     C7FC Patch(0x06A7, 1, [00]) -- PSCR[0]
     C7FD Patch(0x06AE, 1, [00]) -- PSHALF[0]
     C7FE Patch(0x06C5, 1, [00]) -- ROLUP[0]
     C7FF Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     C800 Patch(0x06B5, 1, [00]) -- PBACKS[0]
     C801 Patch(0x06BB, 1, [00]) -- PALT[0]
     C802 Patch(0x06C0, 1, [00]) -- PSTD[0]
     C803 Patch(0x077A, 3, [02 1B 1E]) -- DVMILE[0]
     C806 Ignore [00]
     C807 Patch(0x0784, 2, [01 00]) -- DVMMIN[0]
     C809 Patch(0x0786, 2, [63 00]) -- DVMRNG[0]
     C80B Patch(0x0788, 3, [02 1B 1F]) -- DHMILE[0]
     C80E Patch(0x078D, 1, [00]) -- DHMIFG
     C80F Patch(0x078E, 2, [01 00]) -- DHMIN[0]
     C811 Patch(0x0790, 2, [63 00]) -- DHRNG[0]
     C813 Patch(0x0792, 3, [02 1B 35]) -- DFWD[0]
     C816 Patch(0x0797, 3, [02 1B 36]) -- DBAK[0]
     C819 Patch(0x079C, 2, [01 20]) -- DSP[0]
     C81B Patch(0x07A1, 2, [01 08]) -- DBS[0]
     C81D Patch(0x07A6, 2, [01 0A]) -- DLF[0]
     C81F Patch(0x07AB, 3, [02 1B 0A]) -- DRLF[0]
     C822 Patch(0x07B0, 3, [02 1B 20]) -- DPHSPC[0]
     C825 Patch(0x07B4, 3, [02 1B 2F]) -- DPHRUB[0]
     C828 Ignore [FF]
     C829 Ignore [FF]
     C82A Ignore [FF]
     C82B Ignore [FF]
     C82C Ignore [FF]
     C82D Ignore [FF]
     C82E Ignore [FF]
     C82F Ignore [FF]
     C830 Ignore [FF]
     C831 Ignore [FF]
     C832 Ignore [FF]
     C833 Msg 'Make sure any automatic or local line feed switches on the '
     C86F Msg 'printer are off.'
     C880 Msg 'Dip switches on the F10 must be set as follows:'
     C8B0 Msg 'Left bank - Switches 1,4,6,7,8 closed, remainder open;'
     C8E7 Msg 'Right bank - Switches 3,4,5,8 closed, remainder open.'
     C91D Msg ''
     C91E Msg ''
     C91F Msg ''
     C920 Msg ''
     C921 Msg ''
     C922 Msg ''

C924 Patch info for 'Centronics 353'
     C924 Patch(0x01AE, 34, '          Centronics 353          ') -- PIDTEX[0]
     C932 Patch(0x06ED, 2, [01 0D]) -- PSINIT[0]
     C934 Patch(0x06FE, 1, [00]) -- PSFINI[0]
     C935 Patch(0x0699, 1, [FF]) -- POSMTH
     C936 Patch(0x0717, 1, [00]) -- CSWTCH
     C937 Patch(0x069A, 1, [03]) -- BLDSTR
     C938 Patch(0x0718, 1, [00]) -- HAVBSY
     C939 Patch(0x0778, 1, [00]) -- PROTCL
     C93A Patch(0x0779, 1, [7F]) -- EAKBSZ
     C93B Patch(0x06E3, 1, [00]) -- RIBBON[0]
     C93C Patch(0x06E8, 1, [00]) -- RIBOFF[0]
     C93D Patch(0x06CF, 1, [00]) -- USR1[0]
     C93E Patch(0x06D4, 1, [00]) -- USR2[0]
     C93F Patch(0x06D9, 1, [00]) -- USR3[0]
     C940 Patch(0x06DE, 1, [00]) -- USR4[0]
     C941 Patch(0x069C, 3, [02 0D 0A]) -- PSCRLF[0]
     C944 Patch(0x06A7, 3, [02 0D 00]) -- PSCR[0]
     C947 Patch(0x06AE, 1, [00]) -- PSHALF[0]
     C948 Patch(0x06C5, 1, [00]) -- ROLUP[0]
     C949 Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     C94A Patch(0x06B5, 1, [00]) -- PBACKS[0]
     C94B Patch(0x06BB, 1, [00]) -- PALT[0]
     C94C Patch(0x06C0, 1, [00]) -- PSTD[0]
     C94D Patch(0x077A, 1, [00]) -- DVMILE[0]
     C94E Ignore [00]
     C94F Patch(0x0784, 2, [FF FF]) -- DVMMIN[0]
     C951 Patch(0x0786, 2, [FF FF]) -- DVMRNG[0]
     C953 Patch(0x0788, 1, [00]) -- DHMILE[0]
     C954 Patch(0x078D, 1, [00]) -- DHMIFG
     C955 Patch(0x078E, 2, [FF FF]) -- DHMIN[0]
     C957 Patch(0x0790, 2, [FF FF]) -- DHRNG[0]
     C959 Patch(0x0792, 1, [00]) -- DFWD[0]
     C95A Patch(0x0797, 1, [00]) -- DBAK[0]
     C95B Patch(0x079C, 1, [00]) -- DSP[0]
     C95C Patch(0x07A1, 1, [00]) -- DBS[0]
     C95D Patch(0x07A6, 1, [00]) -- DLF[0]
     C95E Patch(0x07AB, 1, [00]) -- DRLF[0]
     C95F Patch(0x07B0, 1, [00]) -- DPHSPC[0]
     C960 Patch(0x07B4, 1, [00]) -- DPHRUB[0]
     C961 Ignore [FF]
     C962 Ignore [FF]
     C963 Ignore [FF]
     C964 Ignore [FF]
     C965 Ignore [FF]
     C966 Ignore [FF]
     C967 Ignore [FF]
     C968 Ignore [FF]
     C969 Ignore [FF]
     C96A Ignore [FF]
     C96B Ignore [FF]
     C96C Msg 'Make sure any automatic line feed or local line feed'
     C9A1 Msg 'switches on your printer are OFF.'
     C9C3 Msg ''
     C9C4 Msg ''
     C9C5 Msg ''
     C9C6 Msg ''
     C9C7 Msg ''
     C9C8 Msg ''
     C9C9 Msg ''
     C9CA Msg ''
     C9CB Msg ''

C9CD Patch info for 'Centronics 739'
     C9CD Patch(0x01AE, 34, '          Centronics 739          ') -- PIDTEX[0]
     C9DB Patch(0x06ED, 2, [01 0D]) -- PSINIT[0]
     C9DD Patch(0x06FE, 1, [00]) -- PSFINI[0]
     C9DE Patch(0x0699, 1, [FF]) -- POSMTH
     C9DF Patch(0x0717, 1, [00]) -- CSWTCH
     C9E0 Patch(0x069A, 1, [03]) -- BLDSTR
     C9E1 Patch(0x0718, 1, [00]) -- HAVBSY
     C9E2 Patch(0x0778, 1, [00]) -- PROTCL
     C9E3 Patch(0x0779, 1, [7F]) -- EAKBSZ
     C9E4 Patch(0x06E3, 1, [00]) -- RIBBON[0]
     C9E5 Patch(0x06E8, 1, [00]) -- RIBOFF[0]
     C9E6 Patch(0x06CF, 1, [00]) -- USR1[0]
     C9E7 Patch(0x06D4, 1, [00]) -- USR2[0]
     C9E8 Patch(0x06D9, 1, [00]) -- USR3[0]
     C9E9 Patch(0x06DE, 1, [00]) -- USR4[0]
     C9EA Patch(0x069C, 3, [02 0D 0A]) -- PSCRLF[0]
     C9ED Patch(0x06A7, 3, [02 0D 00]) -- PSCR[0]
     C9F0 Patch(0x06AE, 1, [00]) -- PSHALF[0]
     C9F1 Patch(0x06C5, 1, [00]) -- ROLUP[0]
     C9F2 Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     C9F3 Patch(0x06B5, 1, [00]) -- PBACKS[0]
     C9F4 Patch(0x06BB, 1, [00]) -- PALT[0]
     C9F5 Patch(0x06C0, 1, [00]) -- PSTD[0]
     C9F6 Patch(0x077A, 1, [00]) -- DVMILE[0]
     C9F7 Ignore [00]
     C9F8 Patch(0x0784, 2, [FF FF]) -- DVMMIN[0]
     C9FA Patch(0x0786, 2, [FF FF]) -- DVMRNG[0]
     C9FC Patch(0x0788, 1, [00]) -- DHMILE[0]
     C9FD Patch(0x078D, 1, [00]) -- DHMIFG
     C9FE Patch(0x078E, 2, [FF FF]) -- DHMIN[0]
     CA00 Patch(0x0790, 2, [FF FF]) -- DHRNG[0]
     CA02 Patch(0x0792, 1, [00]) -- DFWD[0]
     CA03 Patch(0x0797, 1, [00]) -- DBAK[0]
     CA04 Patch(0x079C, 1, [00]) -- DSP[0]
     CA05 Patch(0x07A1, 1, [00]) -- DBS[0]
     CA06 Patch(0x07A6, 1, [00]) -- DLF[0]
     CA07 Patch(0x07AB, 1, [00]) -- DRLF[0]
     CA08 Patch(0x07B0, 1, [00]) -- DPHSPC[0]
     CA09 Patch(0x07B4, 1, [00]) -- DPHRUB[0]
     CA0A Ignore [FF]
     CA0B Ignore [FF]
     CA0C Ignore [FF]
     CA0D Ignore [FF]
     CA0E Ignore [FF]
     CA0F Ignore [FF]
     CA10 Ignore [FF]
     CA11 Ignore [FF]
     CA12 Ignore [FF]
     CA13 Ignore [FF]
     CA14 Ignore [FF]
     CA15 Msg 'Make sure any automatic line feed or local line feed'
     CA4A Msg 'switches on your printer are OFF. '
     CA6D Msg ''
     CA6E Msg ''
     CA6F Msg ''
     CA70 Msg ''
     CA71 Msg ''
     CA72 Msg ''
     CA73 Msg ''
     CA74 Msg ''
     CA75 Msg ''

CA77 Patch info for 'Diablo 630'
     CA77 Patch(0x01AE, 34, '            Diablo 630            ') -- PIDTEX[0]
     CA81 Patch(0x06ED, 4, [03 1B 0D 50]) -- PSINIT[0]
     CA85 Patch(0x06FE, 5, [04 0D 1B 0D 50]) -- PSFINI[0]
     CA8A Patch(0x0699, 1, [01]) -- POSMTH
     CA8B Patch(0x0717, 1, [00]) -- CSWTCH
     CA8C Patch(0x069A, 1, [02]) -- BLDSTR
     CA8D Patch(0x0718, 1, [00]) -- HAVBSY
     CA8E Patch(0x0778, 1, [00]) -- PROTCL
     CA8F Patch(0x0779, 1, [7F]) -- EAKBSZ
     CA90 Patch(0x06E3, 3, [02 1B 41]) -- RIBBON[0]
     CA93 Patch(0x06E8, 3, [02 1B 42]) -- RIBOFF[0]
     CA96 Patch(0x06CF, 1, [00]) -- USR1[0]
     CA97 Patch(0x06D4, 1, [00]) -- USR2[0]
     CA98 Patch(0x06D9, 1, [00]) -- USR3[0]
     CA99 Patch(0x06DE, 1, [00]) -- USR4[0]
     CA9A Patch(0x069C, 1, [00]) -- PSCRLF[0]
     CA9B Patch(0x06A7, 1, [00]) -- PSCR[0]
     CA9C Patch(0x06AE, 1, [00]) -- PSHALF[0]
     CA9D Patch(0x06C5, 1, [00]) -- ROLUP[0]
     CA9E Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     CA9F Patch(0x06B5, 1, [00]) -- PBACKS[0]
     CAA0 Patch(0x06BB, 1, [00]) -- PALT[0]
     CAA1 Patch(0x06C0, 1, [00]) -- PSTD[0]
     CAA2 Patch(0x077A, 3, [02 1B 1E]) -- DVMILE[0]
     CAA5 Ignore [00]
     CAA6 Patch(0x0784, 2, [01 00]) -- DVMMIN[0]
     CAA8 Patch(0x0786, 2, [7E 00]) -- DVMRNG[0]
     CAAA Patch(0x0788, 3, [02 1B 1F]) -- DHMILE[0]
     CAAD Patch(0x078D, 1, [00]) -- DHMIFG
     CAAE Patch(0x078E, 2, [01 00]) -- DHMIN[0]
     CAB0 Patch(0x0790, 2, [7E 00]) -- DHRNG[0]
     CAB2 Patch(0x0792, 3, [02 1B 35]) -- DFWD[0]
     CAB5 Patch(0x0797, 3, [02 1B 36]) -- DBAK[0]
     CAB8 Patch(0x079C, 2, [01 20]) -- DSP[0]
     CABA Patch(0x07A1, 2, [01 08]) -- DBS[0]
     CABC Patch(0x07A6, 2, [01 0A]) -- DLF[0]
     CABE Patch(0x07AB, 3, [02 1B 0A]) -- DRLF[0]
     CAC1 Patch(0x07B0, 3, [02 1B 59]) -- DPHSPC[0]
     CAC4 Patch(0x07B4, 3, [02 1B 5A]) -- DPHRUB[0]
     CAC7 Ignore [FF]
     CAC8 Ignore [FF]
     CAC9 Ignore [FF]
     CACA Ignore [FF]
     CACB Ignore [FF]
     CACC Ignore [FF]
     CACD Ignore [FF]
     CACE Ignore [FF]
     CACF Ignore [FF]
     CAD0 Ignore [FF]
     CAD1 Ignore [FF]
     CAD2 Msg 'Make sure any automatic line feed or local line feed        '
     CB0F Msg 'switches on the printer are OFF.  There are several versions'
     CB4C Msg 'of the Diablo 630.  If your printer does not print correctly'
     CB89 Msg 'you may have to upgrade the printer firmware.  For further'
     CBC4 Msg 'information contact Diablo Systems at 415-786-5140.'
     CBF8 Msg ''
     CBF9 Msg ''
     CBFA Msg ''
     CBFB Msg ''
     CBFC Msg ''
     CBFD Msg ''

CBFF Patch info for 'Diablo/Xerox 1610/1620'
     CBFF Patch(0x01AE, 34, '      Diablo/Xerox 1610/1620      ') -- PIDTEX[0]
     CC15 Patch(0x06ED, 12, [0B 00 1B 34 1B 42 1B 1E 09 1B 1F 0D]) -- PSINIT[0]
     CC21 Patch(0x06FE, 12, [0B 0D 1B 34 1B 42 1B 1E 09 1B 1F 0D]) -- PSFINI[0]
     CC2D Patch(0x0699, 1, [01]) -- POSMTH
     CC2E Patch(0x0717, 1, [00]) -- CSWTCH
     CC2F Patch(0x069A, 1, [02]) -- BLDSTR
     CC30 Patch(0x0718, 1, [00]) -- HAVBSY
     CC31 Patch(0x0778, 1, [00]) -- PROTCL
     CC32 Patch(0x0779, 1, [4E]) -- EAKBSZ
     CC33 Patch(0x06E3, 3, [02 1B 41]) -- RIBBON[0]
     CC36 Patch(0x06E8, 3, [02 1B 42]) -- RIBOFF[0]
     CC39 Patch(0x06CF, 1, [00]) -- USR1[0]
     CC3A Patch(0x06D4, 1, [00]) -- USR2[0]
     CC3B Patch(0x06D9, 1, [00]) -- USR3[0]
     CC3C Patch(0x06DE, 1, [00]) -- USR4[0]
     CC3D Patch(0x069C, 1, [00]) -- PSCRLF[0]
     CC3E Patch(0x06A7, 1, [00]) -- PSCR[0]
     CC3F Patch(0x06AE, 1, [00]) -- PSHALF[0]
     CC40 Patch(0x06C5, 1, [00]) -- ROLUP[0]
     CC41 Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     CC42 Patch(0x06B5, 1, [00]) -- PBACKS[0]
     CC43 Patch(0x06BB, 1, [00]) -- PALT[0]
     CC44 Patch(0x06C0, 1, [00]) -- PSTD[0]
     CC45 Patch(0x077A, 3, [02 1B 1E]) -- DVMILE[0]
     CC48 Ignore [00]
     CC49 Patch(0x0784, 2, [01 00]) -- DVMMIN[0]
     CC4B Patch(0x0786, 2, [7E 00]) -- DVMRNG[0]
     CC4D Patch(0x0788, 3, [02 1B 1F]) -- DHMILE[0]
     CC50 Patch(0x078D, 1, [00]) -- DHMIFG
     CC51 Patch(0x078E, 2, [01 00]) -- DHMIN[0]
     CC53 Patch(0x0790, 2, [7E 00]) -- DHRNG[0]
     CC55 Patch(0x0792, 3, [02 1B 35]) -- DFWD[0]
     CC58 Patch(0x0797, 3, [02 1B 36]) -- DBAK[0]
     CC5B Patch(0x079C, 2, [01 20]) -- DSP[0]
     CC5D Patch(0x07A1, 2, [01 08]) -- DBS[0]
     CC5F Patch(0x07A6, 2, [01 0A]) -- DLF[0]
     CC61 Patch(0x07AB, 3, [02 1B 0A]) -- DRLF[0]
     CC64 Patch(0x07B0, 1, [00]) -- DPHSPC[0]
     CC65 Patch(0x07B4, 1, [00]) -- DPHRUB[0]
     CC66 Ignore [FF]
     CC67 Ignore [FF]
     CC68 Ignore [FF]
     CC69 Ignore [FF]
     CC6A Ignore [FF]
     CC6B Ignore [FF]
     CC6C Ignore [FF]
     CC6D Ignore [FF]
     CC6E Ignore [FF]
     CC6F Ignore [FF]
     CC70 Ignore [FF]
     CC71 Msg 'Make sure automatic line feed or local line feed'
     CCA2 Msg 'switches on the printer are OFF.'
     CCC3 Msg ''
     CCC4 Msg ''
     CCC5 Msg ''
     CCC6 Msg ''
     CCC7 Msg ''
     CCC8 Msg ''
     CCC9 Msg ''
     CCCA Msg ''
     CCCB Msg ''

CCCD Patch info for 'Diablo/Xerox 1640/1650'
     CCCD Patch(0x01AE, 34, '      Diablo/Xerox 1640/1650      ') -- PIDTEX[0]
     CCE3 Patch(0x06ED, 4, [03 1B 0D 50]) -- PSINIT[0]
     CCE7 Patch(0x06FE, 12, [0B 0D 1B 34 1B 42 1B 1E 09 1B 1F 0D]) -- PSFINI[0]
     CCF3 Patch(0x0699, 1, [01]) -- POSMTH
     CCF4 Patch(0x0717, 1, [00]) -- CSWTCH
     CCF5 Patch(0x069A, 1, [02]) -- BLDSTR
     CCF6 Patch(0x0718, 1, [00]) -- HAVBSY
     CCF7 Patch(0x0778, 1, [00]) -- PROTCL
     CCF8 Patch(0x0779, 1, [7F]) -- EAKBSZ
     CCF9 Patch(0x06E3, 3, [02 1B 41]) -- RIBBON[0]
     CCFC Patch(0x06E8, 3, [02 1B 42]) -- RIBOFF[0]
     CCFF Patch(0x06CF, 1, [00]) -- USR1[0]
     CD00 Patch(0x06D4, 1, [00]) -- USR2[0]
     CD01 Patch(0x06D9, 1, [00]) -- USR3[0]
     CD02 Patch(0x06DE, 1, [00]) -- USR4[0]
     CD03 Patch(0x069C, 1, [00]) -- PSCRLF[0]
     CD04 Patch(0x06A7, 1, [00]) -- PSCR[0]
     CD05 Patch(0x06AE, 1, [00]) -- PSHALF[0]
     CD06 Patch(0x06C5, 1, [00]) -- ROLUP[0]
     CD07 Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     CD08 Patch(0x06B5, 1, [00]) -- PBACKS[0]
     CD09 Patch(0x06BB, 1, [00]) -- PALT[0]
     CD0A Patch(0x06C0, 1, [00]) -- PSTD[0]
     CD0B Patch(0x077A, 3, [02 1B 1E]) -- DVMILE[0]
     CD0E Ignore [00]
     CD0F Patch(0x0784, 2, [01 00]) -- DVMMIN[0]
     CD11 Patch(0x0786, 2, [7E 00]) -- DVMRNG[0]
     CD13 Patch(0x0788, 3, [02 1B 1F]) -- DHMILE[0]
     CD16 Patch(0x078D, 1, [00]) -- DHMIFG
     CD17 Patch(0x078E, 2, [01 00]) -- DHMIN[0]
     CD19 Patch(0x0790, 2, [7E 00]) -- DHRNG[0]
     CD1B Patch(0x0792, 3, [02 1B 35]) -- DFWD[0]
     CD1E Patch(0x0797, 3, [02 1B 36]) -- DBAK[0]
     CD21 Patch(0x079C, 2, [01 20]) -- DSP[0]
     CD23 Patch(0x07A1, 2, [01 08]) -- DBS[0]
     CD25 Patch(0x07A6, 2, [01 0A]) -- DLF[0]
     CD27 Patch(0x07AB, 3, [02 1B 0A]) -- DRLF[0]
     CD2A Patch(0x07B0, 3, [02 1B 59]) -- DPHSPC[0]
     CD2D Patch(0x07B4, 3, [02 1B 5A]) -- DPHRUB[0]
     CD30 Ignore [FF]
     CD31 Ignore [FF]
     CD32 Ignore [FF]
     CD33 Ignore [FF]
     CD34 Ignore [FF]
     CD35 Ignore [FF]
     CD36 Ignore [FF]
     CD37 Ignore [FF]
     CD38 Ignore [FF]
     CD39 Ignore [FF]
     CD3A Ignore [FF]
     CD3B Msg 'Make sure automatic line feed or local line feed switches   '
     CD78 Msg 'on the printer are OFF.  '
     CD92 Msg ''
     CD93 Msg ''
     CD94 Msg ''
     CD95 Msg ''
     CD96 Msg ''
     CD97 Msg ''
     CD98 Msg ''
     CD99 Msg ''
     CD9A Msg ''

CD9C Patch info for 'Epson MX80/100-no Graftrax'
     CD9C Patch(0x01AE, 34, '    Epson MX80/100-no Graftrax    ') -- PIDTEX[0]
     CDB6 Patch(0x06ED, 2, [01 0D]) -- PSINIT[0]
     CDB8 Patch(0x06FE, 1, [00]) -- PSFINI[0]
     CDB9 Patch(0x0699, 1, [FF]) -- POSMTH
     CDBA Patch(0x0717, 1, [00]) -- CSWTCH
     CDBB Patch(0x069A, 1, [03]) -- BLDSTR
     CDBC Patch(0x0718, 1, [00]) -- HAVBSY
     CDBD Patch(0x0778, 1, [00]) -- PROTCL
     CDBE Patch(0x0779, 1, [7F]) -- EAKBSZ
     CDBF Patch(0x06E3, 1, [00]) -- RIBBON[0]
     CDC0 Patch(0x06E8, 1, [00]) -- RIBOFF[0]
     CDC1 Patch(0x06CF, 1, [00]) -- USR1[0]
     CDC2 Patch(0x06D4, 1, [00]) -- USR2[0]
     CDC3 Patch(0x06D9, 1, [00]) -- USR3[0]
     CDC4 Patch(0x06DE, 1, [00]) -- USR4[0]
     CDC5 Patch(0x069C, 3, [02 0D 0A]) -- PSCRLF[0]
     CDC8 Patch(0x06A7, 3, [02 0D 00]) -- PSCR[0]
     CDCB Patch(0x06AE, 1, [00]) -- PSHALF[0]
     CDCC Patch(0x06C5, 1, [00]) -- ROLUP[0]
     CDCD Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     CDCE Patch(0x06B5, 1, [00]) -- PBACKS[0]
     CDCF Patch(0x06BB, 1, [00]) -- PALT[0]
     CDD0 Patch(0x06C0, 1, [00]) -- PSTD[0]
     CDD1 Patch(0x077A, 1, [00]) -- DVMILE[0]
     CDD2 Ignore [00]
     CDD3 Patch(0x0784, 2, [FF FF]) -- DVMMIN[0]
     CDD5 Patch(0x0786, 2, [FF FF]) -- DVMRNG[0]
     CDD7 Patch(0x0788, 1, [00]) -- DHMILE[0]
     CDD8 Patch(0x078D, 1, [00]) -- DHMIFG
     CDD9 Patch(0x078E, 2, [FF FF]) -- DHMIN[0]
     CDDB Patch(0x0790, 2, [FF FF]) -- DHRNG[0]
     CDDD Patch(0x0792, 1, [00]) -- DFWD[0]
     CDDE Patch(0x0797, 1, [00]) -- DBAK[0]
     CDDF Patch(0x079C, 1, [00]) -- DSP[0]
     CDE0 Patch(0x07A1, 1, [00]) -- DBS[0]
     CDE1 Patch(0x07A6, 1, [00]) -- DLF[0]
     CDE2 Patch(0x07AB, 1, [00]) -- DRLF[0]
     CDE3 Patch(0x07B0, 1, [00]) -- DPHSPC[0]
     CDE4 Patch(0x07B4, 1, [00]) -- DPHRUB[0]
     CDE5 Ignore [FF]
     CDE6 Ignore [FF]
     CDE7 Ignore [FF]
     CDE8 Ignore [FF]
     CDE9 Ignore [FF]
     CDEA Ignore [FF]
     CDEB Ignore [FF]
     CDEC Ignore [FF]
     CDED Ignore [FF]
     CDEE Ignore [FF]
     CDEF Ignore [FF]
     CDF0 Msg 'Make sure any automatic line feed or local line feed'
     CE25 Msg 'switches on your printer are OFF.'
     CE47 Msg ''
     CE48 Msg ''
     CE49 Msg ''
     CE4A Msg ''
     CE4B Msg ''
     CE4C Msg ''
     CE4D Msg ''
     CE4E Msg ''
     CE4F Msg ''

CE51 Patch info for 'Half line feed printer'
     CE51 Patch(0x01AE, 34, '      Half line feed printer      ') -- PIDTEX[0]
     CE67 Patch(0x06ED, 2, [01 0D]) -- PSINIT[0]
     CE69 Patch(0x06FE, 1, [00]) -- PSFINI[0]
     CE6A Patch(0x0699, 1, [00]) -- POSMTH
     CE6B Patch(0x0717, 1, [00]) -- CSWTCH
     CE6C Patch(0x069A, 1, [03]) -- BLDSTR
     CE6D Patch(0x0718, 1, [00]) -- HAVBSY
     CE6E Patch(0x0778, 1, [00]) -- PROTCL
     CE6F Patch(0x0779, 1, [7F]) -- EAKBSZ
     CE70 Patch(0x06E3, 1, [00]) -- RIBBON[0]
     CE71 Patch(0x06E8, 1, [00]) -- RIBOFF[0]
     CE72 Patch(0x06CF, 1, [00]) -- USR1[0]
     CE73 Patch(0x06D4, 1, [00]) -- USR2[0]
     CE74 Patch(0x06D9, 1, [00]) -- USR3[0]
     CE75 Patch(0x06DE, 1, [00]) -- USR4[0]
     CE76 Patch(0x069C, 5, [04 0D 0A 0D 0A]) -- PSCRLF[0]
     CE7B Patch(0x06A7, 3, [02 0D 00]) -- PSCR[0]
     CE7E Patch(0x06AE, 3, [02 0D 0A]) -- PSHALF[0]
     CE81 Patch(0x06C5, 1, [00]) -- ROLUP[0]
     CE82 Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     CE83 Patch(0x06B5, 2, [01 08]) -- PBACKS[0]
     CE85 Patch(0x06BB, 1, [00]) -- PALT[0]
     CE86 Patch(0x06C0, 1, [00]) -- PSTD[0]
     CE87 Patch(0x077A, 1, [00]) -- DVMILE[0]
     CE88 Ignore [00]
     CE89 Patch(0x0784, 2, [FF FF]) -- DVMMIN[0]
     CE8B Patch(0x0786, 2, [FF FF]) -- DVMRNG[0]
     CE8D Patch(0x0788, 1, [00]) -- DHMILE[0]
     CE8E Patch(0x078D, 1, [00]) -- DHMIFG
     CE8F Patch(0x078E, 2, [FF FF]) -- DHMIN[0]
     CE91 Patch(0x0790, 2, [FF FF]) -- DHRNG[0]
     CE93 Patch(0x0792, 1, [00]) -- DFWD[0]
     CE94 Patch(0x0797, 1, [00]) -- DBAK[0]
     CE95 Patch(0x079C, 1, [00]) -- DSP[0]
     CE96 Patch(0x07A1, 1, [00]) -- DBS[0]
     CE97 Patch(0x07A6, 1, [00]) -- DLF[0]
     CE98 Patch(0x07AB, 1, [00]) -- DRLF[0]
     CE99 Patch(0x07B0, 1, [00]) -- DPHSPC[0]
     CE9A Patch(0x07B4, 1, [00]) -- DPHRUB[0]
     CE9B Ignore [FF]
     CE9C Ignore [FF]
     CE9D Ignore [FF]
     CE9E Ignore [FF]
     CE9F Ignore [FF]
     CEA0 Ignore [FF]
     CEA1 Ignore [FF]
     CEA2 Ignore [FF]
     CEA3 Ignore [FF]
     CEA4 Ignore [FF]
     CEA5 Ignore [FF]
     CEA6 Msg 'This choice is for printers that can advance in half-line '
     CEE1 Msg 'units but cannot roll carriage return upward, such as a '
     CF1A Msg 'Selectric with a half-line ratchet. '
     CF3F Msg 'Use of this choice causes subscripts and superscripts to be '
     CF7C Msg 'printed offset by half a line. Backspacing is also assumed. '
     CFB9 Msg 'Be sure to complete option "N" on the Printer Installation '
     CFF5 Msg 'menu. '
     CFFC Msg ''
     CFFD Msg ''
     CFFE Msg ''
     CFFF Msg ''

D001 Patch info for 'IBM Parallel printer'
     D001 Patch(0x01AE, 34, '       IBM Parallel printer       ') -- PIDTEX[0]
     D015 Patch(0x06ED, 2, [01 0D]) -- PSINIT[0]
     D017 Patch(0x06FE, 1, [00]) -- PSFINI[0]
     D018 Patch(0x0699, 1, [FF]) -- POSMTH
     D019 Patch(0x0717, 1, [00]) -- CSWTCH
     D01A Patch(0x069A, 1, [02]) -- BLDSTR
     D01B Patch(0x0718, 1, [FF]) -- HAVBSY
     D01C Patch(0x0778, 1, [00]) -- PROTCL
     D01D Patch(0x0779, 1, [7F]) -- EAKBSZ
     D01E Patch(0x06E3, 1, [00]) -- RIBBON[0]
     D01F Patch(0x06E8, 1, [00]) -- RIBOFF[0]
     D020 Patch(0x06CF, 1, [00]) -- USR1[0]
     D021 Patch(0x06D4, 1, [00]) -- USR2[0]
     D022 Patch(0x06D9, 1, [00]) -- USR3[0]
     D023 Patch(0x06DE, 1, [00]) -- USR4[0]
     D024 Patch(0x069C, 3, [02 0D 0A]) -- PSCRLF[0]
     D027 Patch(0x06A7, 3, [02 0D 00]) -- PSCR[0]
     D02A Patch(0x06AE, 1, [00]) -- PSHALF[0]
     D02B Patch(0x06C5, 1, [00]) -- ROLUP[0]
     D02C Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     D02D Patch(0x06B5, 2, [01 00]) -- PBACKS[0]
     D02F Patch(0x06BB, 1, [00]) -- PALT[0]
     D030 Patch(0x06C0, 1, [00]) -- PSTD[0]
     D031 Patch(0x077A, 1, [00]) -- DVMILE[0]
     D032 Ignore [00]
     D033 Patch(0x0784, 2, [FF FF]) -- DVMMIN[0]
     D035 Patch(0x0786, 2, [FF FF]) -- DVMRNG[0]
     D037 Patch(0x0788, 1, [00]) -- DHMILE[0]
     D038 Patch(0x078D, 1, [00]) -- DHMIFG
     D039 Patch(0x078E, 2, [FF FF]) -- DHMIN[0]
     D03B Patch(0x0790, 2, [FF FF]) -- DHRNG[0]
     D03D Patch(0x0792, 1, [00]) -- DFWD[0]
     D03E Patch(0x0797, 1, [00]) -- DBAK[0]
     D03F Patch(0x079C, 1, [00]) -- DSP[0]
     D040 Patch(0x07A1, 1, [00]) -- DBS[0]
     D041 Patch(0x07A6, 1, [00]) -- DLF[0]
     D042 Patch(0x07AB, 1, [00]) -- DRLF[0]
     D043 Patch(0x07B0, 1, [00]) -- DPHSPC[0]
     D044 Patch(0x07B4, 1, [00]) -- DPHRUB[0]
     D045 Ignore [FF]
     D046 Ignore [FF]
     D047 Ignore [FF]
     D048 Ignore [FF]
     D049 Ignore [FF]
     D04A Ignore [FF]
     D04B Ignore [FF]
     D04C Ignore [FF]
     D04D Ignore [FF]
     D04E Ignore [FF]
     D04F Ignore [FF]
     D050 Msg ''
     D051 Msg ''
     D052 Msg ''
     D053 Msg ''
     D054 Msg ''
     D055 Msg ''
     D056 Msg ''
     D057 Msg ''
     D058 Msg ''
     D059 Msg ''
     D05A Msg ''

D05C Patch info for 'MPI 88G/99G'
     D05C Patch(0x01AE, 34, '           MPI 88G/99G            ') -- PIDTEX[0]
     D067 Patch(0x06ED, 2, [01 0D]) -- PSINIT[0]
     D069 Patch(0x06FE, 1, [00]) -- PSFINI[0]
     D06A Patch(0x0699, 1, [FF]) -- POSMTH
     D06B Patch(0x0717, 1, [00]) -- CSWTCH
     D06C Patch(0x069A, 1, [03]) -- BLDSTR
     D06D Patch(0x0718, 1, [00]) -- HAVBSY
     D06E Patch(0x0778, 1, [00]) -- PROTCL
     D06F Patch(0x0779, 1, [7F]) -- EAKBSZ
     D070 Patch(0x06E3, 1, [00]) -- RIBBON[0]
     D071 Patch(0x06E8, 1, [00]) -- RIBOFF[0]
     D072 Patch(0x06CF, 1, [00]) -- USR1[0]
     D073 Patch(0x06D4, 1, [00]) -- USR2[0]
     D074 Patch(0x06D9, 1, [00]) -- USR3[0]
     D075 Patch(0x06DE, 1, [00]) -- USR4[0]
     D076 Patch(0x069C, 3, [02 0D 0A]) -- PSCRLF[0]
     D079 Patch(0x06A7, 3, [02 0D 00]) -- PSCR[0]
     D07C Patch(0x06AE, 1, [00]) -- PSHALF[0]
     D07D Patch(0x06C5, 1, [00]) -- ROLUP[0]
     D07E Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     D07F Patch(0x06B5, 1, [00]) -- PBACKS[0]
     D080 Patch(0x06BB, 1, [00]) -- PALT[0]
     D081 Patch(0x06C0, 1, [00]) -- PSTD[0]
     D082 Patch(0x077A, 1, [00]) -- DVMILE[0]
     D083 Ignore [00]
     D084 Patch(0x0784, 2, [FF FF]) -- DVMMIN[0]
     D086 Patch(0x0786, 2, [FF FF]) -- DVMRNG[0]
     D088 Patch(0x0788, 1, [00]) -- DHMILE[0]
     D089 Patch(0x078D, 1, [00]) -- DHMIFG
     D08A Patch(0x078E, 2, [FF FF]) -- DHMIN[0]
     D08C Patch(0x0790, 2, [FF FF]) -- DHRNG[0]
     D08E Patch(0x0792, 1, [00]) -- DFWD[0]
     D08F Patch(0x0797, 1, [00]) -- DBAK[0]
     D090 Patch(0x079C, 1, [00]) -- DSP[0]
     D091 Patch(0x07A1, 1, [00]) -- DBS[0]
     D092 Patch(0x07A6, 1, [00]) -- DLF[0]
     D093 Patch(0x07AB, 1, [00]) -- DRLF[0]
     D094 Patch(0x07B0, 1, [00]) -- DPHSPC[0]
     D095 Patch(0x07B4, 1, [00]) -- DPHRUB[0]
     D096 Ignore [FF]
     D097 Ignore [FF]
     D098 Ignore [FF]
     D099 Ignore [FF]
     D09A Ignore [FF]
     D09B Ignore [FF]
     D09C Ignore [FF]
     D09D Ignore [FF]
     D09E Ignore [FF]
     D09F Ignore [FF]
     D0A0 Ignore [FF]
     D0A1 Msg 'Make sure any automatic line feed or local line feed'
     D0D6 Msg 'switches on your printer are OFF.'
     D0F8 Msg ''
     D0F9 Msg ''
     D0FA Msg ''
     D0FB Msg ''
     D0FC Msg ''
     D0FD Msg ''
     D0FE Msg ''
     D0FF Msg ''
     D100 Msg ''

D102 Patch info for 'NEC 8023A matrix printer'
     D102 Patch(0x01AE, 34, '     NEC 8023A matrix printer     ') -- PIDTEX[0]
     D11A Patch(0x06ED, 2, [01 0D]) -- PSINIT[0]
     D11C Patch(0x06FE, 1, [00]) -- PSFINI[0]
     D11D Patch(0x0699, 1, [FF]) -- POSMTH
     D11E Patch(0x0717, 1, [00]) -- CSWTCH
     D11F Patch(0x069A, 1, [03]) -- BLDSTR
     D120 Patch(0x0718, 1, [00]) -- HAVBSY
     D121 Patch(0x0778, 1, [00]) -- PROTCL
     D122 Patch(0x0779, 1, [7F]) -- EAKBSZ
     D123 Patch(0x06E3, 1, [00]) -- RIBBON[0]
     D124 Patch(0x06E8, 1, [00]) -- RIBOFF[0]
     D125 Patch(0x06CF, 1, [00]) -- USR1[0]
     D126 Patch(0x06D4, 1, [00]) -- USR2[0]
     D127 Patch(0x06D9, 1, [00]) -- USR3[0]
     D128 Patch(0x06DE, 1, [00]) -- USR4[0]
     D129 Patch(0x069C, 3, [02 0D 0A]) -- PSCRLF[0]
     D12C Patch(0x06A7, 3, [02 0D 00]) -- PSCR[0]
     D12F Patch(0x06AE, 1, [00]) -- PSHALF[0]
     D130 Patch(0x06C5, 1, [00]) -- ROLUP[0]
     D131 Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     D132 Patch(0x06B5, 1, [00]) -- PBACKS[0]
     D133 Patch(0x06BB, 1, [00]) -- PALT[0]
     D134 Patch(0x06C0, 1, [00]) -- PSTD[0]
     D135 Patch(0x077A, 1, [00]) -- DVMILE[0]
     D136 Ignore [00]
     D137 Patch(0x0784, 2, [FF FF]) -- DVMMIN[0]
     D139 Patch(0x0786, 2, [FF FF]) -- DVMRNG[0]
     D13B Patch(0x0788, 1, [00]) -- DHMILE[0]
     D13C Patch(0x078D, 1, [00]) -- DHMIFG
     D13D Patch(0x078E, 2, [FF FF]) -- DHMIN[0]
     D13F Patch(0x0790, 2, [FF FF]) -- DHRNG[0]
     D141 Patch(0x0792, 1, [00]) -- DFWD[0]
     D142 Patch(0x0797, 1, [00]) -- DBAK[0]
     D143 Patch(0x079C, 1, [00]) -- DSP[0]
     D144 Patch(0x07A1, 1, [00]) -- DBS[0]
     D145 Patch(0x07A6, 1, [00]) -- DLF[0]
     D146 Patch(0x07AB, 1, [00]) -- DRLF[0]
     D147 Patch(0x07B0, 1, [00]) -- DPHSPC[0]
     D148 Patch(0x07B4, 1, [00]) -- DPHRUB[0]
     D149 Ignore [FF]
     D14A Ignore [FF]
     D14B Ignore [FF]
     D14C Ignore [FF]
     D14D Ignore [FF]
     D14E Ignore [FF]
     D14F Ignore [FF]
     D150 Ignore [FF]
     D151 Ignore [FF]
     D152 Ignore [FF]
     D153 Ignore [FF]
     D154 Msg 'Make sure any automatic line feed or local line feed'
     D189 Msg 'switches on your printer are OFF.'
     D1AB Msg ''
     D1AC Msg ''
     D1AD Msg ''
     D1AE Msg ''
     D1AF Msg ''
     D1B0 Msg ''
     D1B1 Msg ''
     D1B2 Msg ''
     D1B3 Msg ''

D1B5 Patch info for 'NEC Spinwriter 3550'
     D1B5 Patch(0x01AE, 34, '       NEC Spinwriter 3550        ') -- PIDTEX[0]
     D1C8 Patch(0x06ED, 4, [03 1B 3D 0D]) -- PSINIT[0]
     D1CC Patch(0x06FE, 4, [03 1B 3D 0D]) -- PSFINI[0]
     D1D0 Patch(0x0699, 1, [01]) -- POSMTH
     D1D1 Patch(0x0717, 1, [00]) -- CSWTCH
     D1D2 Patch(0x069A, 1, [02]) -- BLDSTR
     D1D3 Patch(0x0718, 1, [00]) -- HAVBSY
     D1D4 Patch(0x0778, 1, [00]) -- PROTCL
     D1D5 Patch(0x0779, 1, [7F]) -- EAKBSZ
     D1D6 Patch(0x06E3, 3, [02 1B 33]) -- RIBBON[0]
     D1D9 Patch(0x06E8, 3, [02 1B 34]) -- RIBOFF[0]
     D1DC Patch(0x06CF, 1, [00]) -- USR1[0]
     D1DD Patch(0x06D4, 1, [00]) -- USR2[0]
     D1DE Patch(0x06D9, 1, [00]) -- USR3[0]
     D1DF Patch(0x06DE, 1, [00]) -- USR4[0]
     D1E0 Patch(0x069C, 3, [02 0D 0A]) -- PSCRLF[0]
     D1E3 Patch(0x06A7, 2, [01 0D]) -- PSCR[0]
     D1E5 Patch(0x06AE, 1, [00]) -- PSHALF[0]
     D1E6 Patch(0x06C5, 1, [00]) -- ROLUP[0]
     D1E7 Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     D1E8 Patch(0x06B5, 2, [01 08]) -- PBACKS[0]
     D1EA Patch(0x06BB, 1, [00]) -- PALT[0]
     D1EB Patch(0x06C0, 1, [00]) -- PSTD[0]
     D1EC Patch(0x077A, 3, [02 1B 41]) -- DVMILE[0]
     D1EF Ignore [02 1B 32]
     D1F2 Patch(0x0784, 2, [00 00]) -- DVMMIN[0]
     D1F4 Patch(0x0786, 2, [3A 00]) -- DVMRNG[0]
     D1F6 Patch(0x0788, 3, [02 1B 5D]) -- DHMILE[0]
     D1F9 Patch(0x078D, 1, [00]) -- DHMIFG
     D1FA Patch(0x078E, 2, [40 00]) -- DHMIN[0]
     D1FC Patch(0x0790, 2, [10 00]) -- DHRNG[0]
     D1FE Patch(0x0792, 3, [02 1B 59]) -- DFWD[0]
     D201 Patch(0x0797, 3, [02 1B 5A]) -- DBAK[0]
     D204 Patch(0x079C, 2, [01 20]) -- DSP[0]
     D206 Patch(0x07A1, 2, [01 08]) -- DBS[0]
     D208 Patch(0x07A6, 2, [01 0A]) -- DLF[0]
     D20A Patch(0x07AB, 3, [02 1B 0A]) -- DRLF[0]
     D20D Patch(0x07B0, 2, [01 30]) -- DPHSPC[0]
     D20F Patch(0x07B4, 2, [01 30]) -- DPHRUB[0]
     D211 Ignore [FF]
     D212 Ignore [FF]
     D213 Ignore [FF]
     D214 Ignore [FF]
     D215 Ignore [FF]
     D216 Ignore [FF]
     D217 Ignore [FF]
     D218 Ignore [FF]
     D219 Ignore [FF]
     D21A Ignore [FF]
     D21B Ignore [FF]
     D21C Msg ''
     D21D Msg ''
     D21E Msg ''
     D21F Msg ''
     D220 Msg ''
     D221 Msg ''
     D222 Msg ''
     D223 Msg ''
     D224 Msg ''
     D225 Msg ''
     D226 Msg ''

D228 Patch info for 'NEC Spinwriter specialty'
     D228 Patch(0x01AE, 34, '     NEC Spinwriter specialty     ') -- PIDTEX[0]
     D240 Patch(0x06ED, 11, [0A 1B 34 1B 4B 1B 4F 1B 40 0D 0D]) -- PSINIT[0]
     D24B Patch(0x06FE, 4, [03 1B 3D 0D]) -- PSFINI[0]
     D24F Patch(0x0699, 1, [01]) -- POSMTH
     D250 Patch(0x0717, 1, [00]) -- CSWTCH
     D251 Patch(0x069A, 1, [02]) -- BLDSTR
     D252 Patch(0x0718, 1, [00]) -- HAVBSY
     D253 Patch(0x0778, 1, [00]) -- PROTCL
     D254 Patch(0x0779, 1, [7F]) -- EAKBSZ
     D255 Patch(0x06E3, 3, [02 1B 33]) -- RIBBON[0]
     D258 Patch(0x06E8, 3, [02 1B 34]) -- RIBOFF[0]
     D25B Patch(0x06CF, 1, [00]) -- USR1[0]
     D25C Patch(0x06D4, 1, [00]) -- USR2[0]
     D25D Patch(0x06D9, 1, [00]) -- USR3[0]
     D25E Patch(0x06DE, 1, [00]) -- USR4[0]
     D25F Patch(0x069C, 1, [00]) -- PSCRLF[0]
     D260 Patch(0x06A7, 1, [00]) -- PSCR[0]
     D261 Patch(0x06AE, 1, [00]) -- PSHALF[0]
     D262 Patch(0x06C5, 1, [00]) -- ROLUP[0]
     D263 Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     D264 Patch(0x06B5, 1, [00]) -- PBACKS[0]
     D265 Patch(0x06BB, 1, [00]) -- PALT[0]
     D266 Patch(0x06C0, 1, [00]) -- PSTD[0]
     D267 Patch(0x077A, 3, [02 1B 5D]) -- DVMILE[0]
     D26A Ignore [00]
     D26B Patch(0x0784, 2, [4F 00]) -- DVMMIN[0]
     D26D Patch(0x0786, 2, [11 00]) -- DVMRNG[0]
     D26F Patch(0x0788, 3, [02 1B 5D]) -- DHMILE[0]
     D272 Patch(0x078D, 1, [00]) -- DHMIFG
     D273 Patch(0x078E, 2, [40 00]) -- DHMIN[0]
     D275 Patch(0x0790, 2, [10 00]) -- DHRNG[0]
     D277 Patch(0x0792, 3, [02 1B 3E]) -- DFWD[0]
     D27A Patch(0x0797, 3, [02 1B 3C]) -- DBAK[0]
     D27D Patch(0x079C, 2, [01 20]) -- DSP[0]
     D27F Patch(0x07A1, 2, [01 08]) -- DBS[0]
     D281 Patch(0x07A6, 2, [01 0A]) -- DLF[0]
     D283 Patch(0x07AB, 3, [02 1B 39]) -- DRLF[0]
     D286 Patch(0x07B0, 1, [00]) -- DPHSPC[0]
     D287 Patch(0x07B4, 1, [00]) -- DPHRUB[0]
     D288 Ignore [FF]
     D289 Ignore [FF]
     D28A Ignore [FF]
     D28B Ignore [FF]
     D28C Ignore [FF]
     D28D Ignore [FF]
     D28E Ignore [FF]
     D28F Ignore [FF]
     D290 Ignore [FF]
     D291 Ignore [FF]
     D292 Ignore [FF]
     D293 Msg 'This covers most printers in the 3500/5500/7700 series. The'
     D2CF Msg '3550 is a special printer for the IBM-PC only. If you have'
     D30A Msg 'questions about the suitability of a particular model of NEC'
     D347 Msg 'printer with this product, contact your dealer.'
     D377 Msg 'Make sure any automatic line feed or local line feed '
     D3AD Msg 'switches on the printer are OFF. '
     D3CF Msg ''
     D3D0 Msg ''
     D3D1 Msg ''
     D3D2 Msg ''
     D3D3 Msg ''

D3D5 Patch info for 'Okidata ML84A'
     D3D5 Patch(0x01AE, 34, '          Okidata ML84A           ') -- PIDTEX[0]
     D3E2 Patch(0x06ED, 2, [01 0D]) -- PSINIT[0]
     D3E4 Patch(0x06FE, 1, [00]) -- PSFINI[0]
     D3E5 Patch(0x0699, 1, [FF]) -- POSMTH
     D3E6 Patch(0x0717, 1, [00]) -- CSWTCH
     D3E7 Patch(0x069A, 1, [03]) -- BLDSTR
     D3E8 Patch(0x0718, 1, [00]) -- HAVBSY
     D3E9 Patch(0x0778, 1, [00]) -- PROTCL
     D3EA Patch(0x0779, 1, [7F]) -- EAKBSZ
     D3EB Patch(0x06E3, 1, [00]) -- RIBBON[0]
     D3EC Patch(0x06E8, 1, [00]) -- RIBOFF[0]
     D3ED Patch(0x06CF, 1, [00]) -- USR1[0]
     D3EE Patch(0x06D4, 1, [00]) -- USR2[0]
     D3EF Patch(0x06D9, 1, [00]) -- USR3[0]
     D3F0 Patch(0x06DE, 1, [00]) -- USR4[0]
     D3F1 Patch(0x069C, 3, [02 0D 0A]) -- PSCRLF[0]
     D3F4 Patch(0x06A7, 3, [02 0D 00]) -- PSCR[0]
     D3F7 Patch(0x06AE, 1, [00]) -- PSHALF[0]
     D3F8 Patch(0x06C5, 1, [00]) -- ROLUP[0]
     D3F9 Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     D3FA Patch(0x06B5, 1, [00]) -- PBACKS[0]
     D3FB Patch(0x06BB, 1, [00]) -- PALT[0]
     D3FC Patch(0x06C0, 1, [00]) -- PSTD[0]
     D3FD Patch(0x077A, 1, [00]) -- DVMILE[0]
     D3FE Ignore [00]
     D3FF Patch(0x0784, 2, [FF FF]) -- DVMMIN[0]
     D401 Patch(0x0786, 2, [FF FF]) -- DVMRNG[0]
     D403 Patch(0x0788, 1, [00]) -- DHMILE[0]
     D404 Patch(0x078D, 1, [00]) -- DHMIFG
     D405 Patch(0x078E, 2, [FF FF]) -- DHMIN[0]
     D407 Patch(0x0790, 2, [FF FF]) -- DHRNG[0]
     D409 Patch(0x0792, 1, [00]) -- DFWD[0]
     D40A Patch(0x0797, 1, [00]) -- DBAK[0]
     D40B Patch(0x079C, 1, [00]) -- DSP[0]
     D40C Patch(0x07A1, 1, [00]) -- DBS[0]
     D40D Patch(0x07A6, 1, [00]) -- DLF[0]
     D40E Patch(0x07AB, 1, [00]) -- DRLF[0]
     D40F Patch(0x07B0, 1, [00]) -- DPHSPC[0]
     D410 Patch(0x07B4, 1, [00]) -- DPHRUB[0]
     D411 Ignore [FF]
     D412 Ignore [FF]
     D413 Ignore [FF]
     D414 Ignore [FF]
     D415 Ignore [FF]
     D416 Ignore [FF]
     D417 Ignore [FF]
     D418 Ignore [FF]
     D419 Ignore [FF]
     D41A Ignore [FF]
     D41B Ignore [FF]
     D41C Msg 'Make sure any automatic line feed or local line feed'
     D451 Msg 'switches on your printer are OFF. '
     D474 Msg ''
     D475 Msg ''
     D476 Msg ''
     D477 Msg ''
     D478 Msg ''
     D479 Msg ''
     D47A Msg ''
     D47B Msg ''
     D47C Msg ''

D47E Patch info for 'Olympia ESW-102'
     D47E Patch(0x01AE, 34, '         Olympia ESW-102          ') -- PIDTEX[0]
     D48D Patch(0x06ED, 2, [01 0D]) -- PSINIT[0]
     D48F Patch(0x06FE, 1, [00]) -- PSFINI[0]
     D490 Patch(0x0699, 1, [00]) -- POSMTH
     D491 Patch(0x0717, 1, [00]) -- CSWTCH
     D492 Patch(0x069A, 1, [03]) -- BLDSTR
     D493 Patch(0x0718, 1, [00]) -- HAVBSY
     D494 Patch(0x0778, 1, [00]) -- PROTCL
     D495 Patch(0x0779, 1, [7F]) -- EAKBSZ
     D496 Patch(0x06E3, 1, [00]) -- RIBBON[0]
     D497 Patch(0x06E8, 1, [00]) -- RIBOFF[0]
     D498 Patch(0x06CF, 1, [00]) -- USR1[0]
     D499 Patch(0x06D4, 1, [00]) -- USR2[0]
     D49A Patch(0x06D9, 1, [00]) -- USR3[0]
     D49B Patch(0x06DE, 1, [00]) -- USR4[0]
     D49C Patch(0x069C, 3, [02 0D 0A]) -- PSCRLF[0]
     D49F Patch(0x06A7, 3, [02 0D 00]) -- PSCR[0]
     D4A2 Patch(0x06AE, 1, [00]) -- PSHALF[0]
     D4A3 Patch(0x06C5, 1, [00]) -- ROLUP[0]
     D4A4 Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     D4A5 Patch(0x06B5, 2, [01 08]) -- PBACKS[0]
     D4A7 Patch(0x06BB, 1, [00]) -- PALT[0]
     D4A8 Patch(0x06C0, 1, [00]) -- PSTD[0]
     D4A9 Patch(0x077A, 1, [00]) -- DVMILE[0]
     D4AA Ignore [01 30]
     D4AC Patch(0x0784, 2, [FF FF]) -- DVMMIN[0]
     D4AE Patch(0x0786, 2, [FF FF]) -- DVMRNG[0]
     D4B0 Patch(0x0788, 1, [00]) -- DHMILE[0]
     D4B1 Patch(0x078D, 1, [00]) -- DHMIFG
     D4B2 Patch(0x078E, 2, [FF FF]) -- DHMIN[0]
     D4B4 Patch(0x0790, 2, [FF FF]) -- DHRNG[0]
     D4B6 Patch(0x0792, 1, [00]) -- DFWD[0]
     D4B7 Patch(0x0797, 1, [00]) -- DBAK[0]
     D4B8 Patch(0x079C, 1, [00]) -- DSP[0]
     D4B9 Patch(0x07A1, 1, [00]) -- DBS[0]
     D4BA Patch(0x07A6, 1, [00]) -- DLF[0]
     D4BB Patch(0x07AB, 1, [00]) -- DRLF[0]
     D4BC Patch(0x07B0, 1, [00]) -- DPHSPC[0]
     D4BD Patch(0x07B4, 1, [00]) -- DPHRUB[0]
     D4BE Ignore [FF]
     D4BF Ignore [FF]
     D4C0 Ignore [FF]
     D4C1 Ignore [FF]
     D4C2 Ignore [FF]
     D4C3 Ignore [FF]
     D4C4 Ignore [FF]
     D4C5 Ignore [FF]
     D4C6 Ignore [FF]
     D4C7 Ignore [FF]
     D4C8 Ignore [FF]
     D4C9 Msg 'Make sure that any automatic line feed switch on the printer'
     D506 Msg 'is OFF.'
     D50E Msg ''
     D50F Msg ''
     D510 Msg ''
     D511 Msg ''
     D512 Msg ''
     D513 Msg ''
     D514 Msg ''
     D515 Msg ''
     D516 Msg ''

D518 Patch info for 'Qume Sprint 5-9/45-11+'
     D518 Patch(0x01AE, 34, '      Qume Sprint 5-9/45-11+      ') -- PIDTEX[0]
     D52E Patch(0x06ED, 4, [03 1B 1A 49]) -- PSINIT[0]
     D532 Patch(0x06FE, 4, [03 1B 1A 49]) -- PSFINI[0]
     D536 Patch(0x0699, 1, [01]) -- POSMTH
     D537 Patch(0x0717, 1, [00]) -- CSWTCH
     D538 Patch(0x069A, 1, [02]) -- BLDSTR
     D539 Patch(0x0718, 1, [00]) -- HAVBSY
     D53A Patch(0x0778, 1, [00]) -- PROTCL
     D53B Patch(0x0779, 1, [6F]) -- EAKBSZ
     D53C Patch(0x06E3, 3, [02 1B 41]) -- RIBBON[0]
     D53F Patch(0x06E8, 3, [02 1B 42]) -- RIBOFF[0]
     D542 Patch(0x06CF, 1, [00]) -- USR1[0]
     D543 Patch(0x06D4, 1, [00]) -- USR2[0]
     D544 Patch(0x06D9, 1, [00]) -- USR3[0]
     D545 Patch(0x06DE, 1, [00]) -- USR4[0]
     D546 Patch(0x069C, 1, [00]) -- PSCRLF[0]
     D547 Patch(0x06A7, 1, [00]) -- PSCR[0]
     D548 Patch(0x06AE, 1, [00]) -- PSHALF[0]
     D549 Patch(0x06C5, 1, [00]) -- ROLUP[0]
     D54A Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     D54B Patch(0x06B5, 1, [00]) -- PBACKS[0]
     D54C Patch(0x06BB, 1, [00]) -- PALT[0]
     D54D Patch(0x06C0, 1, [00]) -- PSTD[0]
     D54E Patch(0x077A, 3, [02 1B 1E]) -- DVMILE[0]
     D551 Ignore [00]
     D552 Patch(0x0784, 2, [01 00]) -- DVMMIN[0]
     D554 Patch(0x0786, 2, [63 00]) -- DVMRNG[0]
     D556 Patch(0x0788, 3, [02 1B 1F]) -- DHMILE[0]
     D559 Patch(0x078D, 1, [00]) -- DHMIFG
     D55A Patch(0x078E, 2, [01 00]) -- DHMIN[0]
     D55C Patch(0x0790, 2, [7E 00]) -- DHRNG[0]
     D55E Patch(0x0792, 3, [02 1B 35]) -- DFWD[0]
     D561 Patch(0x0797, 3, [02 1B 36]) -- DBAK[0]
     D564 Patch(0x079C, 2, [01 20]) -- DSP[0]
     D566 Patch(0x07A1, 2, [01 08]) -- DBS[0]
     D568 Patch(0x07A6, 2, [01 0A]) -- DLF[0]
     D56A Patch(0x07AB, 3, [02 1B 0A]) -- DRLF[0]
     D56D Patch(0x07B0, 3, [02 1B 20]) -- DPHSPC[0]
     D570 Patch(0x07B4, 3, [02 1B 2F]) -- DPHRUB[0]
     D573 Ignore [FF]
     D574 Ignore [FF]
     D575 Ignore [FF]
     D576 Ignore [FF]
     D577 Ignore [FF]
     D578 Ignore [FF]
     D579 Ignore [FF]
     D57A Ignore [FF]
     D57B Ignore [FF]
     D57C Ignore [FF]
     D57D Ignore [FF]
     D57E Msg 'Make sure automatic line feed or local line feed switches on'
     D5BB Msg 'the printer are OFF.  Some models of the Qume printers such'
     D5F7 Msg 'as the 9/35 and 10/35 are lacking certain features which '
     D631 Msg 'prevent their proper functioning with this product. '
     D666 Msg 'Contact Qume for further information.'
     D68C Msg ''
     D68D Msg ''
     D68E Msg ''
     D68F Msg ''
     D690 Msg ''
     D691 Msg ''

D693 Patch info for 'TI 810/820'
     D693 Patch(0x01AE, 34, '            TI 810/820            ') -- PIDTEX[0]
     D69D Patch(0x06ED, 2, [01 0D]) -- PSINIT[0]
     D69F Patch(0x06FE, 1, [00]) -- PSFINI[0]
     D6A0 Patch(0x0699, 1, [FF]) -- POSMTH
     D6A1 Patch(0x0717, 1, [00]) -- CSWTCH
     D6A2 Patch(0x069A, 1, [03]) -- BLDSTR
     D6A3 Patch(0x0718, 1, [00]) -- HAVBSY
     D6A4 Patch(0x0778, 1, [00]) -- PROTCL
     D6A5 Patch(0x0779, 1, [7F]) -- EAKBSZ
     D6A6 Patch(0x06E3, 1, [00]) -- RIBBON[0]
     D6A7 Patch(0x06E8, 1, [00]) -- RIBOFF[0]
     D6A8 Patch(0x06CF, 1, [00]) -- USR1[0]
     D6A9 Patch(0x06D4, 1, [00]) -- USR2[0]
     D6AA Patch(0x06D9, 1, [00]) -- USR3[0]
     D6AB Patch(0x06DE, 1, [00]) -- USR4[0]
     D6AC Patch(0x069C, 3, [02 0D 0A]) -- PSCRLF[0]
     D6AF Patch(0x06A7, 3, [02 0D 00]) -- PSCR[0]
     D6B2 Patch(0x06AE, 1, [00]) -- PSHALF[0]
     D6B3 Patch(0x06C5, 1, [00]) -- ROLUP[0]
     D6B4 Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     D6B5 Patch(0x06B5, 1, [00]) -- PBACKS[0]
     D6B6 Patch(0x06BB, 1, [00]) -- PALT[0]
     D6B7 Patch(0x06C0, 1, [00]) -- PSTD[0]
     D6B8 Patch(0x077A, 1, [00]) -- DVMILE[0]
     D6B9 Ignore [00]
     D6BA Patch(0x0784, 2, [FF FF]) -- DVMMIN[0]
     D6BC Patch(0x0786, 2, [FF FF]) -- DVMRNG[0]
     D6BE Patch(0x0788, 1, [00]) -- DHMILE[0]
     D6BF Patch(0x078D, 1, [00]) -- DHMIFG
     D6C0 Patch(0x078E, 2, [FF FF]) -- DHMIN[0]
     D6C2 Patch(0x0790, 2, [FF FF]) -- DHRNG[0]
     D6C4 Patch(0x0792, 1, [00]) -- DFWD[0]
     D6C5 Patch(0x0797, 1, [00]) -- DBAK[0]
     D6C6 Patch(0x079C, 1, [00]) -- DSP[0]
     D6C7 Patch(0x07A1, 1, [00]) -- DBS[0]
     D6C8 Patch(0x07A6, 1, [00]) -- DLF[0]
     D6C9 Patch(0x07AB, 1, [00]) -- DRLF[0]
     D6CA Patch(0x07B0, 1, [00]) -- DPHSPC[0]
     D6CB Patch(0x07B4, 1, [00]) -- DPHRUB[0]
     D6CC Ignore [FF]
     D6CD Ignore [FF]
     D6CE Ignore [FF]
     D6CF Ignore [FF]
     D6D0 Ignore [FF]
     D6D1 Ignore [FF]
     D6D2 Ignore [FF]
     D6D3 Ignore [FF]
     D6D4 Ignore [FF]
     D6D5 Ignore [FF]
     D6D6 Ignore [FF]
     D6D7 Msg 'Make sure any automatic line feed or local line feed'
     D70C Msg 'switches on the printer are OFF.'
     D72D Msg ''
     D72E Msg ''
     D72F Msg ''
     D730 Msg ''
     D731 Msg ''
     D732 Msg ''
     D733 Msg ''
     D734 Msg ''
     D735 Msg ''

D737 Patch info for 'backspacing standard'
     D737 Patch(0x01AE, 34, '       backspacing standard       ') -- PIDTEX[0]
     D74B Patch(0x06ED, 2, [01 0D]) -- PSINIT[0]
     D74D Patch(0x06FE, 1, [00]) -- PSFINI[0]
     D74E Patch(0x0699, 1, [00]) -- POSMTH
     D74F Patch(0x0717, 1, [00]) -- CSWTCH
     D750 Patch(0x069A, 1, [03]) -- BLDSTR
     D751 Patch(0x0718, 1, [00]) -- HAVBSY
     D752 Patch(0x0778, 1, [00]) -- PROTCL
     D753 Patch(0x0779, 1, [7F]) -- EAKBSZ
     D754 Patch(0x06E3, 1, [00]) -- RIBBON[0]
     D755 Patch(0x06E8, 1, [00]) -- RIBOFF[0]
     D756 Patch(0x06CF, 1, [00]) -- USR1[0]
     D757 Patch(0x06D4, 1, [00]) -- USR2[0]
     D758 Patch(0x06D9, 1, [00]) -- USR3[0]
     D759 Patch(0x06DE, 1, [00]) -- USR4[0]
     D75A Patch(0x069C, 3, [02 0D 0A]) -- PSCRLF[0]
     D75D Patch(0x06A7, 3, [02 0D 00]) -- PSCR[0]
     D760 Patch(0x06AE, 1, [00]) -- PSHALF[0]
     D761 Patch(0x06C5, 1, [00]) -- ROLUP[0]
     D762 Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     D763 Patch(0x06B5, 2, [01 08]) -- PBACKS[0]
     D765 Patch(0x06BB, 1, [00]) -- PALT[0]
     D766 Patch(0x06C0, 1, [00]) -- PSTD[0]
     D767 Patch(0x077A, 1, [00]) -- DVMILE[0]
     D768 Ignore [00]
     D769 Patch(0x0784, 2, [FF FF]) -- DVMMIN[0]
     D76B Patch(0x0786, 2, [FF FF]) -- DVMRNG[0]
     D76D Patch(0x0788, 1, [00]) -- DHMILE[0]
     D76E Patch(0x078D, 1, [00]) -- DHMIFG
     D76F Patch(0x078E, 2, [FF FF]) -- DHMIN[0]
     D771 Patch(0x0790, 2, [FF FF]) -- DHRNG[0]
     D773 Patch(0x0792, 1, [00]) -- DFWD[0]
     D774 Patch(0x0797, 1, [00]) -- DBAK[0]
     D775 Patch(0x079C, 1, [00]) -- DSP[0]
     D776 Patch(0x07A1, 1, [00]) -- DBS[0]
     D777 Patch(0x07A6, 1, [00]) -- DLF[0]
     D778 Patch(0x07AB, 1, [00]) -- DRLF[0]
     D779 Patch(0x07B0, 1, [00]) -- DPHSPC[0]
     D77A Patch(0x07B4, 1, [00]) -- DPHRUB[0]
     D77B Ignore [FF]
     D77C Ignore [FF]
     D77D Ignore [FF]
     D77E Ignore [FF]
     D77F Ignore [FF]
     D780 Ignore [FF]
     D781 Ignore [FF]
     D782 Ignore [FF]
     D783 Ignore [FF]
     D784 Ignore [FF]
     D785 Ignore [FF]
     D786 Msg 'This selection can be used for any printer that is capable '
     D7C2 Msg 'of backspacing. Make sure that any automatic line feed '
     D7FA Msg 'switch on the printer is OFF, and that the printer driver '
     D835 Msg 'you are using does not remove or add special characters to '
     D871 Msg 'what is being sent to the printer.'
     D894 Msg ''
     D895 Msg ''
     D896 Msg ''
     D897 Msg ''
     D898 Msg ''
     D899 Msg ''

D89B Patch info for 'standard printer'
     D89B Patch(0x01AE, 34, '         standard printer         ') -- PIDTEX[0]
     D8AB Patch(0x06ED, 2, [01 0D]) -- PSINIT[0]
     D8AD Patch(0x06FE, 1, [00]) -- PSFINI[0]
     D8AE Patch(0x0699, 1, [FF]) -- POSMTH
     D8AF Patch(0x0717, 1, [00]) -- CSWTCH
     D8B0 Patch(0x069A, 1, [03]) -- BLDSTR
     D8B1 Patch(0x0718, 1, [00]) -- HAVBSY
     D8B2 Patch(0x0778, 1, [00]) -- PROTCL
     D8B3 Patch(0x0779, 1, [7F]) -- EAKBSZ
     D8B4 Patch(0x06E3, 1, [00]) -- RIBBON[0]
     D8B5 Patch(0x06E8, 1, [00]) -- RIBOFF[0]
     D8B6 Patch(0x06CF, 1, [00]) -- USR1[0]
     D8B7 Patch(0x06D4, 1, [00]) -- USR2[0]
     D8B8 Patch(0x06D9, 1, [00]) -- USR3[0]
     D8B9 Patch(0x06DE, 1, [00]) -- USR4[0]
     D8BA Patch(0x069C, 3, [02 0D 0A]) -- PSCRLF[0]
     D8BD Patch(0x06A7, 3, [02 0D 00]) -- PSCR[0]
     D8C0 Patch(0x06AE, 1, [00]) -- PSHALF[0]
     D8C1 Patch(0x06C5, 1, [00]) -- ROLUP[0]
     D8C2 Patch(0x06CA, 1, [00]) -- ROLDOW[0]
     D8C3 Patch(0x06B5, 1, [00]) -- PBACKS[0]
     D8C4 Patch(0x06BB, 1, [00]) -- PALT[0]
     D8C5 Patch(0x06C0, 1, [00]) -- PSTD[0]
     D8C6 Patch(0x077A, 1, [00]) -- DVMILE[0]
     D8C7 Ignore [00]
     D8C8 Patch(0x0784, 2, [FF FF]) -- DVMMIN[0]
     D8CA Patch(0x0786, 2, [FF FF]) -- DVMRNG[0]
     D8CC Patch(0x0788, 1, [00]) -- DHMILE[0]
     D8CD Patch(0x078D, 1, [00]) -- DHMIFG
     D8CE Patch(0x078E, 2, [FF FF]) -- DHMIN[0]
     D8D0 Patch(0x0790, 2, [FF FF]) -- DHRNG[0]
     D8D2 Patch(0x0792, 1, [00]) -- DFWD[0]
     D8D3 Patch(0x0797, 1, [00]) -- DBAK[0]
     D8D4 Patch(0x079C, 1, [00]) -- DSP[0]
     D8D5 Patch(0x07A1, 1, [00]) -- DBS[0]
     D8D6 Patch(0x07A6, 1, [00]) -- DLF[0]
     D8D7 Patch(0x07AB, 1, [00]) -- DRLF[0]
     D8D8 Patch(0x07B0, 1, [00]) -- DPHSPC[0]
     D8D9 Patch(0x07B4, 1, [00]) -- DPHRUB[0]
     D8DA Ignore [FF]
     D8DB Ignore [FF]
     D8DC Ignore [FF]
     D8DD Ignore [FF]
     D8DE Ignore [FF]
     D8DF Ignore [FF]
     D8E0 Ignore [FF]
     D8E1 Ignore [FF]
     D8E2 Ignore [FF]
     D8E3 Ignore [FF]
     D8E4 Ignore [FF]
     D8E5 Msg 'This selection will drive almost any printer. The printer'
     D91F Msg 'must be capable of responding to ASCII printing characters,'
     D95B Msg 'carriage return, and line feed only. Make sure any '
     D98F Msg 'automatic line feed or local line feed switches on your'
     D9C7 Msg 'printer are OFF.'
     D9D8 Msg ''
     D9D9 Msg ''
     D9DA Msg ''
     D9DB Msg ''
     D9DC Msg ''
     D9DD Msg ''

D9E0 Patch info for 'Intertec SuperBrain'
     D9E0 Patch(0x018A, 34, '       Intertec SuperBrain        ') -- IDTEX[0]
     D9F3 Patch(0x0232, 1, [18]) -- HITE
     D9F4 Patch(0x0233, 1, [50]) -- WID
     D9F5 Patch(0x028E, 1, [0A]) -- DELCUS
     D9F6 Patch(0x028F, 1, [05]) -- DELMIS
     D9F7 Patch(0x0275, 1, [00]) -- TRMINI[0]
     D9F8 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     D9F9 Patch(0x0250, 1, [00]) -- ERAEOL[0]
     D9FA Patch(0x028D, 1, [00]) -- USELST
     D9FB Patch(0x0290, 1, [FF]) -- MEMAPV
     D9FC Patch(0x0291, 2, [00 F8]) -- MEMADR[0]
     D9FE Patch(0x0293, 1, [00]) -- HIBIV
     D9FF Patch(0x0294, 1, [00]) -- HIBCUR
     DA00 Patch(0x0295, 1, [00]) -- CRBLIV
     DA01 Patch(0x0287, 1, [C3]) -- INISUB[0]
     DA02 Patch(0x0288, 1, [D9]) -- INISUB[1]
     DA03 Patch(0x0289, 1, [02]) -- INISUB[2]
     DA04 Patch(0x028A, 1, [C3]) -- UNISUB[0]
     DA05 Patch(0x028B, 1, [D9]) -- UNISUB[1]
     DA06 Patch(0x028C, 1, [02]) -- UNISUB[2]
     DA07 Patch(0x02A3, 1, [C9]) -- SWIN[0]
     DA08 Patch(0x02A4, 1, [FF]) -- SWIN[1]
     DA09 Patch(0x02A5, 1, [FF]) -- SWIN[2]
     DA0A Patch(0x02A6, 1, [FF]) -- SWIN[3]
     DA0B Patch(0x02A7, 1, [FF]) -- SWIN[4]
     DA0C Patch(0x02A8, 1, [FF]) -- SWIN[5]
     DA0D Patch(0x02A9, 1, [C9]) -- SWOUT[0]
     DA0E Patch(0x02AA, 1, [FF]) -- SWOUT[1]
     DA0F Patch(0x02AB, 1, [FF]) -- SWOUT[2]
     DA10 Patch(0x02AC, 1, [FF]) -- SWOUT[3]
     DA11 Patch(0x02AD, 1, [FF]) -- SWOUT[4]
     DA12 Patch(0x02AE, 1, [FF]) -- SWOUT[5]
     DA13 Patch(0x024B, 1, [C3]) -- UCRPOS[0]
     DA14 Patch(0x024C, 1, [EB]) -- UCRPOS[1]
     DA15 Patch(0x024E, 1, [02]) -- UCRPOS[3]
     DA16 Patch(0x02CB, 1, [3E]) -- MORPAT[0]
     DA17 Patch(0x02CC, 1, [FF]) -- MORPAT[1]
     DA18 Patch(0x02CD, 1, [32]) -- MORPAT[2]
     DA19 Patch(0x02CE, 1, [18]) -- MORPAT[3]
     DA1A Patch(0x02CF, 1, [E5]) -- MORPAT[4]
     DA1B Patch(0x02D0, 1, [C3]) -- MORPAT[5]
     DA1C Patch(0x02D1, 1, [D9]) -- MORPAT[6]
     DA1D Patch(0x02D2, 1, [02]) -- MORPAT[7]
     DA1E Patch(0x02D3, 1, [3E]) -- MORPAT[8]
     DA1F Patch(0x02D4, 1, [17]) -- MORPAT[9]
     DA20 Patch(0x02D5, 1, [32]) -- MORPAT[10]
     DA21 Patch(0x02D6, 1, [18]) -- MORPAT[11]
     DA22 Patch(0x02D7, 1, [E5]) -- MORPAT[12]
     DA23 Patch(0x02D8, 1, [AF]) -- MORPAT[13]
     DA24 Patch(0x02D9, 1, [21]) -- MORPAT[14]
     DA25 Patch(0x02DA, 1, [34]) -- MORPAT[15]
     DA26 Patch(0x02DB, 1, [E4]) -- MORPAT[16]
     DA27 Patch(0x02DC, 1, [0E]) -- MORPAT[17]
     DA28 Patch(0x02DD, 1, [18]) -- MORPAT[18]
     DA29 Patch(0x02DE, 1, [77]) -- MORPAT[19]
     DA2A Patch(0x02DF, 1, [23]) -- MORPAT[20]
     DA2B Patch(0x02E0, 1, [0D]) -- MORPAT[21]
     DA2C Patch(0x02E1, 1, [C2]) -- MORPAT[22]
     DA2D Patch(0x02E2, 1, [DE]) -- MORPAT[23]
     DA2E Patch(0x02E3, 1, [02]) -- MORPAT[24]
     DA2F Patch(0x02E4, 1, [2A]) -- MORPAT[25]
     DA30 Patch(0x02E5, 1, [00]) -- MORPAT[26]
     DA31 Patch(0x02E6, 1, [00]) -- MORPAT[27]
     DA32 Patch(0x02E7, 1, [22]) -- MORPAT[28]
     DA33 Patch(0x02E8, 1, [16]) -- MORPAT[29]
     DA34 Patch(0x02E9, 1, [E4]) -- MORPAT[30]
     DA35 Patch(0x02EA, 1, [C9]) -- MORPAT[31]
     DA36 Patch(0x02EB, 1, [EB]) -- MORPAT[32]
     DA37 Patch(0x02EC, 1, [22]) -- MORPAT[33]
     DA38 Patch(0x02ED, 1, [12]) -- MORPAT[34]
     DA39 Patch(0x02EE, 1, [E4]) -- MORPAT[35]
     DA3A Patch(0x02EF, 1, [C9]) -- MORPAT[36]
     DA3B Patch(0x02F0, 1, [FF]) -- MORPAT[37]
     DA3C Patch(0x02F1, 1, [FF]) -- MORPAT[38]
     DA3D Patch(0x02F2, 1, [FF]) -- MORPAT[39]
     DA3E Patch(0x02F3, 1, [FF]) -- MORPAT[40]
     DA3F Patch(0x02F4, 1, [FF]) -- MORPAT[41]
     DA40 Patch(0x02F5, 1, [FF]) -- MORPAT[42]
     DA41 Patch(0x02F6, 1, [FF]) -- MORPAT[43]
     DA42 Patch(0x02F7, 1, [FF]) -- MORPAT[44]
     DA43 Patch(0x02F8, 1, [FF]) -- MORPAT[45]
     DA44 Patch(0x02F9, 1, [FF]) -- MORPAT[46]
     DA45 Patch(0x02FA, 1, [FF]) -- MORPAT[47]
     DA46 Patch(0x02FB, 1, [FF]) -- MORPAT[48]
     DA47 Patch(0x02FC, 1, [FF]) -- MORPAT[49]
     DA48 Patch(0x02FD, 1, [FF]) -- MORPAT[50]
     DA49 Patch(0x02FE, 1, [FF]) -- MORPAT[51]
     DA4A Patch(0x02FF, 1, [FF]) -- MORPAT[52]
     DA4B Patch(0x0300, 1, [FF]) -- MORPAT[53]
     DA4C Patch(0x0301, 1, [FF]) -- MORPAT[54]
     DA4D Patch(0x0302, 1, [FF]) -- MORPAT[55]
     DA4E Patch(0x0303, 1, [FF]) -- MORPAT[56]
     DA4F Patch(0x0304, 1, [FF]) -- MORPAT[57]
     DA50 Patch(0x0305, 1, [FF]) -- MORPAT[58]
     DA51 Patch(0x0306, 1, [FF]) -- MORPAT[59]
     DA52 Patch(0x0307, 1, [FF]) -- MORPAT[60]
     DA53 Patch(0x0308, 1, [FF]) -- MORPAT[61]
     DA54 Patch(0x0309, 1, [FF]) -- MORPAT[62]
     DA55 Patch(0x030A, 1, [FF]) -- MORPAT[63]
     DA56 Patch(0x030B, 1, [FF]) -- MORPAT[64]
     DA57 Patch(0x030C, 1, [FF]) -- MORPAT[65]
     DA58 Patch(0x030D, 1, [FF]) -- MORPAT[66]
     DA59 Patch(0x030E, 1, [FF]) -- MORPAT[67]
     DA5A Patch(0x030F, 1, [FF]) -- MORPAT[68]
     DA5B Patch(0x0310, 1, [FF]) -- MORPAT[69]
     DA5C Patch(0x0311, 1, [FF]) -- MORPAT[70]
     DA5D Patch(0x0312, 1, [FF]) -- MORPAT[71]
     DA5E Patch(0x0313, 1, [FF]) -- MORPAT[72]
     DA5F Patch(0x0314, 1, [FF]) -- MORPAT[73]
     DA60 Patch(0x0315, 1, [FF]) -- MORPAT[74]
     DA61 Patch(0x0316, 1, [FF]) -- MORPAT[75]
     DA62 Patch(0x0317, 1, [FF]) -- MORPAT[76]
     DA63 Patch(0x0318, 1, [FF]) -- MORPAT[77]
     DA64 Patch(0x0319, 1, [FF]) -- MORPAT[78]
     DA65 Patch(0x031A, 1, [FF]) -- MORPAT[79]
     DA66 Msg 'This installation will work  on SuperBrains and'
     DA96 Msg 'SuperBrain QDs only. (Any DOS from 1.0 to 3.0).'
     DAC6 Msg ''
     DAC7 Msg ''
     DAC8 Msg ''
     DAC9 Msg ''

DACB Patch info for 'Processor Tech Sol'
     DACB Patch(0x018A, 34, '        Processor Tech Sol        ') -- IDTEX[0]
     DADD Patch(0x0232, 1, [10]) -- HITE
     DADE Patch(0x0233, 1, [40]) -- WID
     DADF Patch(0x028E, 1, [00]) -- DELCUS
     DAE0 Patch(0x028F, 1, [00]) -- DELMIS
     DAE1 Patch(0x0275, 2, [01 0B]) -- TRMINI[0]
     DAE3 Patch(0x027E, 2, [01 0B]) -- TRMUNI[0]
     DAE5 Patch(0x0250, 2, [01 0D]) -- ERAEOL[0]
     DAE7 Patch(0x028D, 1, [00]) -- USELST
     DAE8 Patch(0x0290, 1, [FF]) -- MEMAPV
     DAE9 Patch(0x0291, 2, [00 CC]) -- MEMADR[0]
     DAEB Patch(0x0293, 1, [FF]) -- HIBIV
     DAEC Patch(0x0294, 1, [FF]) -- HIBCUR
     DAED Patch(0x0295, 1, [FF]) -- CRBLIV
     DAEE Patch(0x0287, 1, [C3]) -- INISUB[0]
     DAEF Patch(0x0288, 1, [CB]) -- INISUB[1]
     DAF0 Patch(0x0289, 1, [02]) -- INISUB[2]
     DAF1 Patch(0x028A, 1, [C9]) -- UNISUB[0]
     DAF2 Patch(0x028B, 1, [FF]) -- UNISUB[1]
     DAF3 Patch(0x028C, 1, [FF]) -- UNISUB[2]
     DAF4 Patch(0x02A3, 1, [C9]) -- SWIN[0]
     DAF5 Patch(0x02A4, 1, [FF]) -- SWIN[1]
     DAF6 Patch(0x02A5, 1, [FF]) -- SWIN[2]
     DAF7 Patch(0x02A6, 1, [FF]) -- SWIN[3]
     DAF8 Patch(0x02A7, 1, [FF]) -- SWIN[4]
     DAF9 Patch(0x02A8, 1, [FF]) -- SWIN[5]
     DAFA Patch(0x02A9, 1, [C9]) -- SWOUT[0]
     DAFB Patch(0x02AA, 1, [FF]) -- SWOUT[1]
     DAFC Patch(0x02AB, 1, [FF]) -- SWOUT[2]
     DAFD Patch(0x02AC, 1, [FF]) -- SWOUT[3]
     DAFE Patch(0x02AD, 1, [FF]) -- SWOUT[4]
     DAFF Patch(0x02AE, 1, [FF]) -- SWOUT[5]
     DB00 Patch(0x024B, 1, [C9]) -- UCRPOS[0]
     DB01 Patch(0x024C, 1, [FF]) -- UCRPOS[1]
     DB02 Patch(0x024E, 1, [FF]) -- UCRPOS[3]
     DB03 Patch(0x02CB, 1, [AF]) -- MORPAT[0]
     DB04 Patch(0x02CC, 1, [D3]) -- MORPAT[1]
     DB05 Patch(0x02CD, 1, [FE]) -- MORPAT[2]
     DB06 Patch(0x02CE, 1, [C9]) -- MORPAT[3]
     DB07 Patch(0x02CF, 1, [FF]) -- MORPAT[4]
     DB08 Patch(0x02D0, 1, [FF]) -- MORPAT[5]
     DB09 Patch(0x02D1, 1, [FF]) -- MORPAT[6]
     DB0A Patch(0x02D2, 1, [FF]) -- MORPAT[7]
     DB0B Patch(0x02D3, 1, [FF]) -- MORPAT[8]
     DB0C Patch(0x02D4, 1, [FF]) -- MORPAT[9]
     DB0D Patch(0x02D5, 1, [FF]) -- MORPAT[10]
     DB0E Patch(0x02D6, 1, [FF]) -- MORPAT[11]
     DB0F Patch(0x02D7, 1, [FF]) -- MORPAT[12]
     DB10 Patch(0x02D8, 1, [FF]) -- MORPAT[13]
     DB11 Patch(0x02D9, 1, [FF]) -- MORPAT[14]
     DB12 Patch(0x02DA, 1, [FF]) -- MORPAT[15]
     DB13 Patch(0x02DB, 1, [FF]) -- MORPAT[16]
     DB14 Patch(0x02DC, 1, [FF]) -- MORPAT[17]
     DB15 Patch(0x02DD, 1, [FF]) -- MORPAT[18]
     DB16 Patch(0x02DE, 1, [FF]) -- MORPAT[19]
     DB17 Patch(0x02DF, 1, [FF]) -- MORPAT[20]
     DB18 Patch(0x02E0, 1, [FF]) -- MORPAT[21]
     DB19 Patch(0x02E1, 1, [FF]) -- MORPAT[22]
     DB1A Patch(0x02E2, 1, [FF]) -- MORPAT[23]
     DB1B Patch(0x02E3, 1, [FF]) -- MORPAT[24]
     DB1C Patch(0x02E4, 1, [FF]) -- MORPAT[25]
     DB1D Patch(0x02E5, 1, [FF]) -- MORPAT[26]
     DB1E Patch(0x02E6, 1, [FF]) -- MORPAT[27]
     DB1F Patch(0x02E7, 1, [FF]) -- MORPAT[28]
     DB20 Patch(0x02E8, 1, [FF]) -- MORPAT[29]
     DB21 Patch(0x02E9, 1, [FF]) -- MORPAT[30]
     DB22 Patch(0x02EA, 1, [FF]) -- MORPAT[31]
     DB23 Patch(0x02EB, 1, [FF]) -- MORPAT[32]
     DB24 Patch(0x02EC, 1, [FF]) -- MORPAT[33]
     DB25 Patch(0x02ED, 1, [FF]) -- MORPAT[34]
     DB26 Patch(0x02EE, 1, [FF]) -- MORPAT[35]
     DB27 Patch(0x02EF, 1, [FF]) -- MORPAT[36]
     DB28 Patch(0x02F0, 1, [FF]) -- MORPAT[37]
     DB29 Patch(0x02F1, 1, [FF]) -- MORPAT[38]
     DB2A Patch(0x02F2, 1, [FF]) -- MORPAT[39]
     DB2B Patch(0x02F3, 1, [FF]) -- MORPAT[40]
     DB2C Patch(0x02F4, 1, [FF]) -- MORPAT[41]
     DB2D Patch(0x02F5, 1, [FF]) -- MORPAT[42]
     DB2E Patch(0x02F6, 1, [FF]) -- MORPAT[43]
     DB2F Patch(0x02F7, 1, [FF]) -- MORPAT[44]
     DB30 Patch(0x02F8, 1, [FF]) -- MORPAT[45]
     DB31 Patch(0x02F9, 1, [FF]) -- MORPAT[46]
     DB32 Patch(0x02FA, 1, [FF]) -- MORPAT[47]
     DB33 Patch(0x02FB, 1, [FF]) -- MORPAT[48]
     DB34 Patch(0x02FC, 1, [FF]) -- MORPAT[49]
     DB35 Patch(0x02FD, 1, [FF]) -- MORPAT[50]
     DB36 Patch(0x02FE, 1, [FF]) -- MORPAT[51]
     DB37 Patch(0x02FF, 1, [FF]) -- MORPAT[52]
     DB38 Patch(0x0300, 1, [FF]) -- MORPAT[53]
     DB39 Patch(0x0301, 1, [FF]) -- MORPAT[54]
     DB3A Patch(0x0302, 1, [FF]) -- MORPAT[55]
     DB3B Patch(0x0303, 1, [FF]) -- MORPAT[56]
     DB3C Patch(0x0304, 1, [FF]) -- MORPAT[57]
     DB3D Patch(0x0305, 1, [FF]) -- MORPAT[58]
     DB3E Patch(0x0306, 1, [FF]) -- MORPAT[59]
     DB3F Patch(0x0307, 1, [FF]) -- MORPAT[60]
     DB40 Patch(0x0308, 1, [FF]) -- MORPAT[61]
     DB41 Patch(0x0309, 1, [FF]) -- MORPAT[62]
     DB42 Patch(0x030A, 1, [FF]) -- MORPAT[63]
     DB43 Patch(0x030B, 1, [FF]) -- MORPAT[64]
     DB44 Patch(0x030C, 1, [FF]) -- MORPAT[65]
     DB45 Patch(0x030D, 1, [FF]) -- MORPAT[66]
     DB46 Patch(0x030E, 1, [FF]) -- MORPAT[67]
     DB47 Patch(0x030F, 1, [FF]) -- MORPAT[68]
     DB48 Patch(0x0310, 1, [FF]) -- MORPAT[69]
     DB49 Patch(0x0311, 1, [FF]) -- MORPAT[70]
     DB4A Patch(0x0312, 1, [FF]) -- MORPAT[71]
     DB4B Patch(0x0313, 1, [FF]) -- MORPAT[72]
     DB4C Patch(0x0314, 1, [FF]) -- MORPAT[73]
     DB4D Patch(0x0315, 1, [FF]) -- MORPAT[74]
     DB4E Patch(0x0316, 1, [FF]) -- MORPAT[75]
     DB4F Patch(0x0317, 1, [FF]) -- MORPAT[76]
     DB50 Patch(0x0318, 1, [FF]) -- MORPAT[77]
     DB51 Patch(0x0319, 1, [FF]) -- MORPAT[78]
     DB52 Patch(0x031A, 1, [FF]) -- MORPAT[79]
     DB53 Msg 'Sol/VDM versions - this version may not work on'
     DB83 Msg 'all CP/M to VDM adaptors.'
     DB9D Msg ''
     DB9E Msg ''
     DB9F Msg ''
     DBA0 Msg ''

DBA2 Patch info for 'TRS80 Model II/Lifeboat CPM'
     DBA2 Patch(0x018A, 34, '   TRS80 Model II/Lifeboat CPM    ') -- IDTEX[0]
     DBBD Patch(0x0232, 1, [18]) -- HITE
     DBBE Patch(0x0233, 1, [50]) -- WID
     DBBF Patch(0x028E, 1, [0A]) -- DELCUS
     DBC0 Patch(0x028F, 1, [05]) -- DELMIS
     DBC1 Patch(0x0275, 1, [00]) -- TRMINI[0]
     DBC2 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     DBC3 Patch(0x0250, 1, [00]) -- ERAEOL[0]
     DBC4 Patch(0x028D, 1, [FF]) -- USELST
     DBC5 Patch(0x0290, 1, [FF]) -- MEMAPV
     DBC6 Patch(0x0291, 2, [00 F8]) -- MEMADR[0]
     DBC8 Patch(0x0293, 1, [FF]) -- HIBIV
     DBC9 Patch(0x0294, 1, [FF]) -- HIBCUR
     DBCA Patch(0x0295, 1, [FF]) -- CRBLIV
     DBCB Patch(0x0287, 1, [C3]) -- INISUB[0]
     DBCC Patch(0x0288, 1, [6A]) -- INISUB[1]
     DBCD Patch(0x0289, 1, [33]) -- INISUB[2]
     DBCE Patch(0x028A, 1, [C3]) -- UNISUB[0]
     DBCF Patch(0x028B, 1, [6D]) -- UNISUB[1]
     DBD0 Patch(0x028C, 1, [33]) -- UNISUB[2]
     DBD1 Patch(0x02A3, 1, [C9]) -- SWIN[0]
     DBD2 Patch(0x02A4, 1, [FF]) -- SWIN[1]
     DBD3 Patch(0x02A5, 1, [FF]) -- SWIN[2]
     DBD4 Patch(0x02A6, 1, [FF]) -- SWIN[3]
     DBD5 Patch(0x02A7, 1, [FF]) -- SWIN[4]
     DBD6 Patch(0x02A8, 1, [FF]) -- SWIN[5]
     DBD7 Patch(0x02A9, 1, [C9]) -- SWOUT[0]
     DBD8 Patch(0x02AA, 1, [FF]) -- SWOUT[1]
     DBD9 Patch(0x02AB, 1, [FF]) -- SWOUT[2]
     DBDA Patch(0x02AC, 1, [FF]) -- SWOUT[3]
     DBDB Patch(0x02AD, 1, [FF]) -- SWOUT[4]
     DBDC Patch(0x02AE, 1, [FF]) -- SWOUT[5]
     DBDD Patch(0x024B, 1, [C9]) -- UCRPOS[0]
     DBDE Patch(0x024C, 1, [FF]) -- UCRPOS[1]
     DBDF Patch(0x024E, 1, [FF]) -- UCRPOS[3]
     DBE0 Patch(0x02CB, 1, [FF]) -- MORPAT[0]
     DBE1 Patch(0x02CC, 1, [FF]) -- MORPAT[1]
     DBE2 Patch(0x02CD, 1, [FF]) -- MORPAT[2]
     DBE3 Patch(0x02CE, 1, [FF]) -- MORPAT[3]
     DBE4 Patch(0x02CF, 1, [FF]) -- MORPAT[4]
     DBE5 Patch(0x02D0, 1, [FF]) -- MORPAT[5]
     DBE6 Patch(0x02D1, 1, [FF]) -- MORPAT[6]
     DBE7 Patch(0x02D2, 1, [FF]) -- MORPAT[7]
     DBE8 Patch(0x02D3, 1, [FF]) -- MORPAT[8]
     DBE9 Patch(0x02D4, 1, [FF]) -- MORPAT[9]
     DBEA Patch(0x02D5, 1, [FF]) -- MORPAT[10]
     DBEB Patch(0x02D6, 1, [FF]) -- MORPAT[11]
     DBEC Patch(0x02D7, 1, [FF]) -- MORPAT[12]
     DBED Patch(0x02D8, 1, [FF]) -- MORPAT[13]
     DBEE Patch(0x02D9, 1, [FF]) -- MORPAT[14]
     DBEF Patch(0x02DA, 1, [FF]) -- MORPAT[15]
     DBF0 Patch(0x02DB, 1, [FF]) -- MORPAT[16]
     DBF1 Patch(0x02DC, 1, [FF]) -- MORPAT[17]
     DBF2 Patch(0x02DD, 1, [FF]) -- MORPAT[18]
     DBF3 Patch(0x02DE, 1, [FF]) -- MORPAT[19]
     DBF4 Patch(0x02DF, 1, [FF]) -- MORPAT[20]
     DBF5 Patch(0x02E0, 1, [FF]) -- MORPAT[21]
     DBF6 Patch(0x02E1, 1, [FF]) -- MORPAT[22]
     DBF7 Patch(0x02E2, 1, [FF]) -- MORPAT[23]
     DBF8 Patch(0x02E3, 1, [FF]) -- MORPAT[24]
     DBF9 Patch(0x02E4, 1, [FF]) -- MORPAT[25]
     DBFA Patch(0x02E5, 1, [FF]) -- MORPAT[26]
     DBFB Patch(0x02E6, 1, [FF]) -- MORPAT[27]
     DBFC Patch(0x02E7, 1, [FF]) -- MORPAT[28]
     DBFD Patch(0x02E8, 1, [FF]) -- MORPAT[29]
     DBFE Patch(0x02E9, 1, [FF]) -- MORPAT[30]
     DBFF Patch(0x02EA, 1, [FF]) -- MORPAT[31]
     DC00 Patch(0x02EB, 1, [FF]) -- MORPAT[32]
     DC01 Patch(0x02EC, 1, [FF]) -- MORPAT[33]
     DC02 Patch(0x02ED, 1, [FF]) -- MORPAT[34]
     DC03 Patch(0x02EE, 1, [FF]) -- MORPAT[35]
     DC04 Patch(0x02EF, 1, [FF]) -- MORPAT[36]
     DC05 Patch(0x02F0, 1, [FF]) -- MORPAT[37]
     DC06 Patch(0x02F1, 1, [FF]) -- MORPAT[38]
     DC07 Patch(0x02F2, 1, [FF]) -- MORPAT[39]
     DC08 Patch(0x02F3, 1, [FF]) -- MORPAT[40]
     DC09 Patch(0x02F4, 1, [FF]) -- MORPAT[41]
     DC0A Patch(0x02F5, 1, [FF]) -- MORPAT[42]
     DC0B Patch(0x02F6, 1, [FF]) -- MORPAT[43]
     DC0C Patch(0x02F7, 1, [FF]) -- MORPAT[44]
     DC0D Patch(0x02F8, 1, [FF]) -- MORPAT[45]
     DC0E Patch(0x02F9, 1, [FF]) -- MORPAT[46]
     DC0F Patch(0x02FA, 1, [FF]) -- MORPAT[47]
     DC10 Patch(0x02FB, 1, [FF]) -- MORPAT[48]
     DC11 Patch(0x02FC, 1, [FF]) -- MORPAT[49]
     DC12 Patch(0x02FD, 1, [FF]) -- MORPAT[50]
     DC13 Patch(0x02FE, 1, [FF]) -- MORPAT[51]
     DC14 Patch(0x02FF, 1, [FF]) -- MORPAT[52]
     DC15 Patch(0x0300, 1, [FF]) -- MORPAT[53]
     DC16 Patch(0x0301, 1, [FF]) -- MORPAT[54]
     DC17 Patch(0x0302, 1, [FF]) -- MORPAT[55]
     DC18 Patch(0x0303, 1, [FF]) -- MORPAT[56]
     DC19 Patch(0x0304, 1, [FF]) -- MORPAT[57]
     DC1A Patch(0x0305, 1, [FF]) -- MORPAT[58]
     DC1B Patch(0x0306, 1, [FF]) -- MORPAT[59]
     DC1C Patch(0x0307, 1, [FF]) -- MORPAT[60]
     DC1D Patch(0x0308, 1, [FF]) -- MORPAT[61]
     DC1E Patch(0x0309, 1, [FF]) -- MORPAT[62]
     DC1F Patch(0x030A, 1, [FF]) -- MORPAT[63]
     DC20 Patch(0x030B, 1, [FF]) -- MORPAT[64]
     DC21 Patch(0x030C, 1, [FF]) -- MORPAT[65]
     DC22 Patch(0x030D, 1, [FF]) -- MORPAT[66]
     DC23 Patch(0x030E, 1, [FF]) -- MORPAT[67]
     DC24 Patch(0x030F, 1, [FF]) -- MORPAT[68]
     DC25 Patch(0x0310, 1, [FF]) -- MORPAT[69]
     DC26 Patch(0x0311, 1, [FF]) -- MORPAT[70]
     DC27 Patch(0x0312, 1, [FF]) -- MORPAT[71]
     DC28 Patch(0x0313, 1, [FF]) -- MORPAT[72]
     DC29 Patch(0x0314, 1, [FF]) -- MORPAT[73]
     DC2A Patch(0x0315, 1, [FF]) -- MORPAT[74]
     DC2B Patch(0x0316, 1, [FF]) -- MORPAT[75]
     DC2C Patch(0x0317, 1, [FF]) -- MORPAT[76]
     DC2D Patch(0x0318, 1, [FF]) -- MORPAT[77]
     DC2E Patch(0x0319, 1, [FF]) -- MORPAT[78]
     DC2F Patch(0x031A, 1, [FF]) -- MORPAT[79]
     DC30 Msg ''
     DC31 Msg ''
     DC32 Msg ''
     DC33 Msg ''
     DC34 Msg ''
     DC35 Msg ''

DC37 Patch info for 'TRS80 Model II/P&T CPM'
     DC37 Patch(0x018A, 34, '      TRS80 Model II/P&T CPM      ') -- IDTEX[0]
     DC4D Patch(0x0232, 1, [18]) -- HITE
     DC4E Patch(0x0233, 1, [50]) -- WID
     DC4F Patch(0x028E, 1, [0A]) -- DELCUS
     DC50 Patch(0x028F, 1, [05]) -- DELMIS
     DC51 Patch(0x0275, 1, [00]) -- TRMINI[0]
     DC52 Patch(0x027E, 1, [00]) -- TRMUNI[0]
     DC53 Patch(0x0250, 1, [00]) -- ERAEOL[0]
     DC54 Patch(0x028D, 1, [FF]) -- USELST
     DC55 Patch(0x0290, 1, [FF]) -- MEMAPV
     DC56 Patch(0x0291, 2, [00 F8]) -- MEMADR[0]
     DC58 Patch(0x0293, 1, [FF]) -- HIBIV
     DC59 Patch(0x0294, 1, [FF]) -- HIBCUR
     DC5A Patch(0x0295, 1, [00]) -- CRBLIV
     DC5B Patch(0x0287, 1, [C3]) -- INISUB[0]
     DC5C Patch(0x0288, 1, [E0]) -- INISUB[1]
     DC5D Patch(0x0289, 1, [02]) -- INISUB[2]
     DC5E Patch(0x028A, 1, [C3]) -- UNISUB[0]
     DC5F Patch(0x028B, 1, [E7]) -- UNISUB[1]
     DC60 Patch(0x028C, 1, [02]) -- UNISUB[2]
     DC61 Patch(0x02A3, 1, [C3]) -- SWIN[0]
     DC62 Patch(0x02A4, 1, [EE]) -- SWIN[1]
     DC63 Patch(0x02A5, 1, [02]) -- SWIN[2]
     DC64 Patch(0x02A6, 1, [FF]) -- SWIN[3]
     DC65 Patch(0x02A7, 1, [FF]) -- SWIN[4]
     DC66 Patch(0x02A8, 1, [FF]) -- SWIN[5]
     DC67 Patch(0x02A9, 1, [C3]) -- SWOUT[0]
     DC68 Patch(0x02AA, 1, [CB]) -- SWOUT[1]
     DC69 Patch(0x02AB, 1, [02]) -- SWOUT[2]
     DC6A Patch(0x02AC, 1, [FF]) -- SWOUT[3]
     DC6B Patch(0x02AD, 1, [FF]) -- SWOUT[4]
     DC6C Patch(0x02AE, 1, [FF]) -- SWOUT[5]
     DC6D Patch(0x024B, 1, [C9]) -- UCRPOS[0]
     DC6E Patch(0x024C, 1, [FF]) -- UCRPOS[1]
     DC6F Patch(0x024E, 1, [FF]) -- UCRPOS[3]
     DC70 Patch(0x02CB, 1, [06]) -- MORPAT[0]
     DC71 Patch(0x02CC, 1, [14]) -- MORPAT[1]
     DC72 Patch(0x02CD, 1, [0E]) -- MORPAT[2]
     DC73 Patch(0x02CE, 1, [20]) -- MORPAT[3]
     DC74 Patch(0x02CF, 1, [C3]) -- MORPAT[4]
     DC75 Patch(0x02D0, 1, [40]) -- MORPAT[5]
     DC76 Patch(0x02D1, 1, [00]) -- MORPAT[6]
     DC77 Patch(0x02D2, 1, [06]) -- MORPAT[7]
     DC78 Patch(0x02D3, 1, [14]) -- MORPAT[8]
     DC79 Patch(0x02D4, 1, [0E]) -- MORPAT[9]
     DC7A Patch(0x02D5, 1, [60]) -- MORPAT[10]
     DC7B Patch(0x02D6, 1, [C3]) -- MORPAT[11]
     DC7C Patch(0x02D7, 1, [40]) -- MORPAT[12]
     DC7D Patch(0x02D8, 1, [00]) -- MORPAT[13]
     DC7E Patch(0x02D9, 1, [C5]) -- MORPAT[14]
     DC7F Patch(0x02DA, 1, [D5]) -- MORPAT[15]
     DC80 Patch(0x02DB, 1, [E5]) -- MORPAT[16]
     DC81 Patch(0x02DC, 1, [06]) -- MORPAT[17]
     DC82 Patch(0x02DD, 1, [15]) -- MORPAT[18]
     DC83 Patch(0x02DE, 1, [CD]) -- MORPAT[19]
     DC84 Patch(0x02DF, 1, [40]) -- MORPAT[20]
     DC85 Patch(0x02E0, 1, [00]) -- MORPAT[21]
     DC86 Patch(0x02E1, 1, [E1]) -- MORPAT[22]
     DC87 Patch(0x02E2, 1, [D1]) -- MORPAT[23]
     DC88 Patch(0x02E3, 1, [C1]) -- MORPAT[24]
     DC89 Patch(0x02E4, 1, [C9]) -- MORPAT[25]
     DC8A Patch(0x02E5, 1, [C5]) -- MORPAT[26]
     DC8B Patch(0x02E6, 1, [D5]) -- MORPAT[27]
     DC8C Patch(0x02E7, 1, [E5]) -- MORPAT[28]
     DC8D Patch(0x02E8, 1, [06]) -- MORPAT[29]
     DC8E Patch(0x02E9, 1, [16]) -- MORPAT[30]
     DC8F Patch(0x02EA, 1, [CD]) -- MORPAT[31]
     DC90 Patch(0x02EB, 1, [40]) -- MORPAT[32]
     DC91 Patch(0x02EC, 1, [00]) -- MORPAT[33]
     DC92 Patch(0x02ED, 1, [E1]) -- MORPAT[34]
     DC93 Patch(0x02EE, 1, [D1]) -- MORPAT[35]
     DC94 Patch(0x02EF, 1, [C1]) -- MORPAT[36]
     DC95 Patch(0x02F0, 1, [C9]) -- MORPAT[37]
     DC96 Patch(0x02F1, 1, [FF]) -- MORPAT[38]
     DC97 Patch(0x02F2, 1, [FF]) -- MORPAT[39]
     DC98 Patch(0x02F3, 1, [FF]) -- MORPAT[40]
     DC99 Patch(0x02F4, 1, [FF]) -- MORPAT[41]
     DC9A Patch(0x02F5, 1, [FF]) -- MORPAT[42]
     DC9B Patch(0x02F6, 1, [FF]) -- MORPAT[43]
     DC9C Patch(0x02F7, 1, [FF]) -- MORPAT[44]
     DC9D Patch(0x02F8, 1, [FF]) -- MORPAT[45]
     DC9E Patch(0x02F9, 1, [FF]) -- MORPAT[46]
     DC9F Patch(0x02FA, 1, [FF]) -- MORPAT[47]
     DCA0 Patch(0x02FB, 1, [FF]) -- MORPAT[48]
     DCA1 Patch(0x02FC, 1, [FF]) -- MORPAT[49]
     DCA2 Patch(0x02FD, 1, [FF]) -- MORPAT[50]
     DCA3 Patch(0x02FE, 1, [FF]) -- MORPAT[51]
     DCA4 Patch(0x02FF, 1, [FF]) -- MORPAT[52]
     DCA5 Patch(0x0300, 1, [FF]) -- MORPAT[53]
     DCA6 Patch(0x0301, 1, [FF]) -- MORPAT[54]
     DCA7 Patch(0x0302, 1, [FF]) -- MORPAT[55]
     DCA8 Patch(0x0303, 1, [FF]) -- MORPAT[56]
     DCA9 Patch(0x0304, 1, [FF]) -- MORPAT[57]
     DCAA Patch(0x0305, 1, [FF]) -- MORPAT[58]
     DCAB Patch(0x0306, 1, [FF]) -- MORPAT[59]
     DCAC Patch(0x0307, 1, [FF]) -- MORPAT[60]
     DCAD Patch(0x0308, 1, [FF]) -- MORPAT[61]
     DCAE Patch(0x0309, 1, [FF]) -- MORPAT[62]
     DCAF Patch(0x030A, 1, [FF]) -- MORPAT[63]
     DCB0 Patch(0x030B, 1, [FF]) -- MORPAT[64]
     DCB1 Patch(0x030C, 1, [FF]) -- MORPAT[65]
     DCB2 Patch(0x030D, 1, [FF]) -- MORPAT[66]
     DCB3 Patch(0x030E, 1, [FF]) -- MORPAT[67]
     DCB4 Patch(0x030F, 1, [FF]) -- MORPAT[68]
     DCB5 Patch(0x0310, 1, [FF]) -- MORPAT[69]
     DCB6 Patch(0x0311, 1, [FF]) -- MORPAT[70]
     DCB7 Patch(0x0312, 1, [FF]) -- MORPAT[71]
     DCB8 Patch(0x0313, 1, [FF]) -- MORPAT[72]
     DCB9 Patch(0x0314, 1, [FF]) -- MORPAT[73]
     DCBA Patch(0x0315, 1, [FF]) -- MORPAT[74]
     DCBB Patch(0x0316, 1, [FF]) -- MORPAT[75]
     DCBC Patch(0x0317, 1, [FF]) -- MORPAT[76]
     DCBD Patch(0x0318, 1, [FF]) -- MORPAT[77]
     DCBE Patch(0x0319, 1, [FF]) -- MORPAT[78]
     DCBF Patch(0x031A, 1, [FF]) -- MORPAT[79]
     DCC0 Msg ''
     DCC1 Msg ''
     DCC2 Msg ''
     DCC3 Msg ''
     DCC4 Msg ''
     DCC5 Msg ''

DCC8 Named location lookup table
     DCC8 'ABSVAR' => 0x021B
     DCD0 'ACBSY ' => 0x074D
     DCD8 'ACFIN ' => 0x0763
     DCE0 'ACINP ' => 0x0759
     DCE8 'ACSEND' => 0x0750
     DCF0 'ACSTA1' => 0x0764
     DCF8 'ACSTAR' => 0x076C
     DD00 'APLFLG' => 0x02B7
     DD08 'ASCUR ' => 0x024A
     DD10 'AUPAV ' => 0x0228
     DD18 'AUTOBS' => 0x0430
     DD20 'BLDSTR' => 0x069A
     DD28 'BLNCHR' => 0x0386
     DD30 'BOFCHR' => 0x03DD
     DD38 'BSCHR ' => 0x043B
     DD40 'CB4LFG' => 0x0247
     DD48 'CLCHR ' => 0x0691
     DD50 'CLEAD1' => 0x0234
     DD58 'CLEAD2' => 0x023D
     DD60 'CMTCHR' => 0x0387
     DD68 'CNVTBL' => 0x02BB
     DD70 'COLOFF' => 0x0249
     DD78 'COMPOP' => 0x0396
     DD80 'CONCHR' => 0x03DE
     DD88 'CONFIE' => 0x0774
     DD90 'COPRIT' => 0x0112
     DD98 'CRBLIV' => 0x0295
     DDA0 'CRCHR ' => 0x0692
     DDA8 'CSWTCH' => 0x0717
     DDB0 'CTRAIL' => 0x0242
     DDB8 'DBAK  ' => 0x0797
     DDC0 'DBLSTR' => 0x069B
     DDC8 'DBS   ' => 0x07A1
     DDD0 'DECCHR' => 0x037A
     DDD8 'DEFDSK' => 0x02B9
     DDE0 'DEL1  ' => 0x02AF
     DDE8 'DEL2  ' => 0x02B0
     DDF0 'DEL3  ' => 0x02B1
     DDF8 'DEL4  ' => 0x02B2
     DE00 'DEL5  ' => 0x02B3
     DE08 'DELCUS' => 0x028E
     DE10 'DELMIS' => 0x028F
     DE18 'DFWD  ' => 0x0792
     DE20 'DHMIFG' => 0x078D
     DE28 'DHMILE' => 0x0788
     DE30 'DHMIN ' => 0x078E
     DE38 'DHRNG ' => 0x0790
     DE40 'DIRCH ' => 0x0694
     DE48 'DISDIR' => 0x0226
     DE50 'DLF   ' => 0x07A6
     DE58 'DMJWB ' => 0x07B9
     DE60 'DNPROS' => 0x07B8
     DE68 'DOTCHR' => 0x037B
     DE70 'DOTSON' => 0x0379
     DE78 'DPHRUB' => 0x07B4
     DE80 'DPHSPC' => 0x07B0
     DE88 'DRLF  ' => 0x07AB
     DE90 'DSKTNA' => 0x040C
     DE98 'DSP   ' => 0x079C
     DEA0 'DVMILE' => 0x077A
     DEA8 'DVMITR' => 0x077F
     DEB0 'DVMMIN' => 0x0784
     DEB8 'DVMRNG' => 0x0786
     DEC0 'EAKBSZ' => 0x0779
     DEC8 'ENDEXP' => 0x0388
     DED0 'EOFCHR' => 0x03DF
     DED8 'ERAEOL' => 0x0250
     DEE0 'ERELCH' => 0x0698
     DEE8 'FDTCHR' => 0x03E0
     DEF0 'FNMRGP' => 0x0424
     DEF8 'FNOVLY' => 0x0418
     DF00 'FNWSCM' => 0x0400
     DF08 'FPTAB ' => 0x067A
     DF10 'HARDCR' => 0x03E1
     DF18 'HAVBSY' => 0x0718
     DF20 'HETHBS' => 0x02B6
     DF28 'HIBCUR' => 0x0294
     DF30 'HIBIV ' => 0x0293
     DF38 'HITE  ' => 0x0232
     DF40 'HYPF  ' => 0x021F
     DF48 'HZONE ' => 0x03C9
     DF50 'IDTEX ' => 0x018A
     DF58 'INISUB' => 0x0287
     DF60 'INITLM' => 0x036A
     DF68 'INITPF' => 0x0351
     DF70 'INITRM' => 0x036B
     DF78 'INITSR' => 0x036C
     DF80 'INITWF' => 0x036D
     DF88 'INPORT' => 0x0227
     DF90 'INSTLD' => 0x022A
     DF98 'ITBIP ' => 0x03FF
     DFA0 'ITDSDR' => 0x0350
     DFA8 'ITHELP' => 0x034D
     DFB0 'ITITOG' => 0x034F
     DFB8 'ITMIJ ' => 0x03FE
     DFC0 'ITPOPN' => 0x03FD
     DFC8 'IVOFF ' => 0x026E
     DFD0 'IVON  ' => 0x0267
     DFD8 'JUSTF ' => 0x021C
     DFE0 'LFCHR ' => 0x03E2
     DFE8 'LIBSY ' => 0x0719
     DFF0 'LINDEL' => 0x0257
     DFF8 'LININS' => 0x025E
     E000 'LINOFF' => 0x0248
     E008 'LISEND' => 0x071C
     E010 'LISINP' => 0x0724
     E018 'LITCHR' => 0x0693
     E020 'LOGICP' => 0x03B7
     E028 'LSPACE' => 0x0224
     E030 'MARKS ' => 0x03E9
     E038 'MEMADR' => 0x0291
     E040 'MEMAPV' => 0x0290
     E048 'MORPAT' => 0x02CB
     E050 'MOVETY' => 0x0225
     E058 'MPMFLG' => 0x02B8
     E060 'MSGLEN' => 0x0229
     E068 'MSGVER' => 0x010E
     E070 'NITHLF' => 0x034E
     E078 'NOFTAB' => 0x043C
     E080 'NONCON' => 0x03D3
     E088 'NONDOC' => 0x0378
     E090 'NOUFF ' => 0x03FC
     E098 'OVPCHR' => 0x03E3
     E0A0 'PAGCHR' => 0x03E4
     E0A8 'PAGDIS' => 0x0223
     E0B0 'PAGFIL' => 0x03E8
     E0B8 'PAGON ' => 0x0222
     E0C0 'PALT  ' => 0x06BB
     E0C8 'PATVER' => 0x010C
     E0D0 'PBACKS' => 0x06B5
     E0D8 'PBGMEM' => 0x034B
     E0E0 'PCLAS ' => 0x022B
     E0E8 'PDRVTX' => 0x01F6
     E0F0 'PIDTEX' => 0x01AE
     E0F8 'PISTAT' => 0x0737
     E100 'POBSY ' => 0x0727
     E108 'PODBLK' => 0x03F8
     E110 'POIM  ' => 0x073C
     E118 'POINP ' => 0x0736
     E120 'POINSK' => 0x073A
     E128 'POIP  ' => 0x0740
     E130 'POMASK' => 0x072B
     E138 'POOM  ' => 0x072D
     E140 'POOP  ' => 0x0733
     E148 'POSEND' => 0x0732
     E150 'POSMTH' => 0x0699
     E158 'POSTAT' => 0x0728
     E160 'POVSTB' => 0x0230
     E168 'PRFINI' => 0x0714
     E170 'PRINIT' => 0x0711
     E178 'PROTCL' => 0x0778
     E180 'PROTTX' => 0x01D2
     E188 'PSCR  ' => 0x06A7
     E190 'PSCRLF' => 0x069C
     E198 'PSFINI' => 0x06FE
     E1A0 'PSHALF' => 0x06AE
     E1A8 'PSINIT' => 0x06ED
     E1B0 'PSTAB ' => 0x07BA
     E1B8 'PSTD  ' => 0x06C0
     E1C0 'PTEXTS' => 0x022E
     E1C8 'PUBSY ' => 0x0744
     E1D0 'PUINP ' => 0x074A
     E1D8 'PUSEND' => 0x0747
     E1E0 'RFIXER' => 0x0299
     E1E8 'RIBBON' => 0x06E3
     E1F0 'RIBOFF' => 0x06E8
     E1F8 'ROLDOW' => 0x06CA
     E200 'ROLUP ' => 0x06C5
     E208 'RUBFXF' => 0x0298
     E210 'RVELIM' => 0x0389
     E218 'RVQUOT' => 0x038A
     E220 'SAVEND' => 0x022C
     E228 'SCRLSZ' => 0x02BA
     E230 'SHOWCF' => 0x0220
     E238 'SHOWDF' => 0x0220
     E240 'SHOWHF' => 0x0220
     E248 'SHOWMF' => 0x0221
     E250 'SHYPF ' => 0x021E
     E258 'SIGNON' => 0x014E
     E260 'SOCHR ' => 0x070F
     E268 'SOFHYC' => 0x03E7
     E270 'SOFTCR' => 0x03E5
     E278 'STPCHR' => 0x0697
     E280 'SWIN  ' => 0x02A3
     E288 'SWOUT ' => 0x02A9
     E290 'TRMINI' => 0x0275
     E298 'TRMUNI' => 0x027E
     E2A0 'TRSCRS' => 0x02B4
     E2A8 'TRSCIF' => 0x02B5
     E2B0 'TXBACK' => 0x038C
     E2B8 'UCNSTA' => 0x029A
     E2C0 'UCONI ' => 0x029D
     E2C8 'UCONO ' => 0x02A0
     E2D0 'UCRPOS' => 0x024B
     E2D8 'ULCHR ' => 0x0710
     E2E0 'UNISUB' => 0x028A
     E2E8 'USELST' => 0x028D
     E2F0 'USR1  ' => 0x06CF
     E2F8 'USR2  ' => 0x06D4
     E300 'USR3  ' => 0x06D9
     E308 'USR4  ' => 0x06DE
     E310 'VARCH1' => 0x038E
     E318 'VARCH2' => 0x038F
     E320 'VAROPC' => 0x0390
     E328 'VOWTAB' => 0x03CE
     E330 'VTAB  ' => 0x0489
     E338 'VTABF ' => 0x021D
     E340 'WFLAGS' => 0x021B
     E348 'WID   ' => 0x0233
     E350 'WRAPF ' => 0x021B
     E358 'WSVER ' => 0x0110
     E360 'XTAB  ' => 0x0655
     E368 'ZAFCIN' => 0x0296


Labels to add
